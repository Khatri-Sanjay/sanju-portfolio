import{a as tf}from"./chunk-3A5JWXHK.js";import{a as J4}from"./chunk-U4QENG4V.js";import{a as Qh}from"./chunk-4HP7DDNK.js";import{a as u1}from"./chunk-XLTCVCLO.js";import{Ha as xc,Nc as yc,da as Zh,g as a1,ia as Jh,t as l1}from"./chunk-PAKGRZCY.js";import{e as nn,f as le,g as Ml,i as V}from"./chunk-66YHNWRR.js";var R1=nn((Mpt,_1)=>{"use strict";_1.exports=Be;var sn=null;try{sn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Be(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}Be.prototype.__isLong__;Object.defineProperty(Be.prototype,"__isLong__",{value:!0});function Co(r){return(r&&r.__isLong__)===!0}Be.isLong=Co;var S1={},v1={};function ou(r,e){var t,o,n;return e?(r>>>=0,(n=0<=r&&r<256)&&(o=v1[r],o)?o:(t=Me(r,(r|0)<0?-1:0,!0),n&&(v1[r]=t),t)):(r|=0,(n=-128<=r&&r<128)&&(o=S1[r],o)?o:(t=Me(r,r<0?-1:0,!1),n&&(S1[r]=t),t))}Be.fromInt=ou;function an(r,e){if(isNaN(r))return e?ru:ln;if(e){if(r<0)return ru;if(r>=E1)return D1}else{if(r<=-I1)return vo;if(r+1>=I1)return A1}return r<0?an(-r,e).neg():Me(r%pp|0,r/pp|0,e)}Be.fromNumber=an;function Me(r,e,t){return new Be(r,e,t)}Be.fromBits=Me;var Id=Math.pow;function i0(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return ln;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var o;if((o=r.indexOf("-"))>0)throw Error("interior hyphen");if(o===0)return i0(r.substring(1),e,t).neg();for(var n=an(Id(t,8)),s=ln,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),l=parseInt(r.substring(i,i+a),t);if(a<8){var u=an(Id(t,a));s=s.mul(u).add(an(l))}else s=s.mul(n),s=s.add(an(l))}return s.unsigned=e,s}Be.fromString=i0;function On(r,e){return typeof r=="number"?an(r,e):typeof r=="string"?i0(r,e):Me(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}Be.fromValue=On;var C1=65536,SH=1<<24,pp=C1*C1,E1=pp*pp,I1=E1/2,k1=ou(SH),ln=ou(0);Be.ZERO=ln;var ru=ou(0,!0);Be.UZERO=ru;var cp=ou(1);Be.ONE=cp;var $1=ou(1,!0);Be.UONE=$1;var s0=ou(-1);Be.NEG_ONE=s0;var A1=Me(-1,2147483647,!1);Be.MAX_VALUE=A1;var D1=Me(-1,-1,!0);Be.MAX_UNSIGNED_VALUE=D1;var vo=Me(0,-2147483648,!1);Be.MIN_VALUE=vo;var ht=Be.prototype;ht.toInt=function(){return this.unsigned?this.low>>>0:this.low};ht.toNumber=function(){return this.unsigned?(this.high>>>0)*pp+(this.low>>>0):this.high*pp+(this.low>>>0)};ht.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(vo)){var t=an(e),o=this.div(t),n=o.mul(t).sub(this);return o.toString(e)+n.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=an(Id(e,6),this.unsigned),i=this,a="";;){var l=i.div(s),u=i.sub(l.mul(s)).toInt()>>>0,c=u.toString(e);if(i=l,i.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};ht.getHighBits=function(){return this.high};ht.getHighBitsUnsigned=function(){return this.high>>>0};ht.getLowBits=function(){return this.low};ht.getLowBitsUnsigned=function(){return this.low>>>0};ht.getNumBitsAbs=function(){if(this.isNegative())return this.eq(vo)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};ht.isZero=function(){return this.high===0&&this.low===0};ht.eqz=ht.isZero;ht.isNegative=function(){return!this.unsigned&&this.high<0};ht.isPositive=function(){return this.unsigned||this.high>=0};ht.isOdd=function(){return(this.low&1)===1};ht.isEven=function(){return(this.low&1)===0};ht.equals=function(e){return Co(e)||(e=On(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};ht.eq=ht.equals;ht.notEquals=function(e){return!this.eq(e)};ht.neq=ht.notEquals;ht.ne=ht.notEquals;ht.lessThan=function(e){return this.comp(e)<0};ht.lt=ht.lessThan;ht.lessThanOrEqual=function(e){return this.comp(e)<=0};ht.lte=ht.lessThanOrEqual;ht.le=ht.lessThanOrEqual;ht.greaterThan=function(e){return this.comp(e)>0};ht.gt=ht.greaterThan;ht.greaterThanOrEqual=function(e){return this.comp(e)>=0};ht.gte=ht.greaterThanOrEqual;ht.ge=ht.greaterThanOrEqual;ht.compare=function(e){if(Co(e)||(e=On(e)),this.eq(e))return 0;var t=this.isNegative(),o=e.isNegative();return t&&!o?-1:!t&&o?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};ht.comp=ht.compare;ht.negate=function(){return!this.unsigned&&this.eq(vo)?vo:this.not().add(cp)};ht.neg=ht.negate;ht.add=function(e){Co(e)||(e=On(e));var t=this.high>>>16,o=this.high&65535,n=this.low>>>16,s=this.low&65535,i=e.high>>>16,a=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,p=0,m=0,f=0;return f+=s+u,m+=f>>>16,f&=65535,m+=n+l,p+=m>>>16,m&=65535,p+=o+a,c+=p>>>16,p&=65535,c+=t+i,c&=65535,Me(m<<16|f,c<<16|p,this.unsigned)};ht.subtract=function(e){return Co(e)||(e=On(e)),this.add(e.neg())};ht.sub=ht.subtract;ht.multiply=function(e){if(this.isZero())return ln;if(Co(e)||(e=On(e)),sn){var t=sn.mul(this.low,this.high,e.low,e.high);return Me(t,sn.get_high(),this.unsigned)}if(e.isZero())return ln;if(this.eq(vo))return e.isOdd()?vo:ln;if(e.eq(vo))return this.isOdd()?vo:ln;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(k1)&&e.lt(k1))return an(this.toNumber()*e.toNumber(),this.unsigned);var o=this.high>>>16,n=this.high&65535,s=this.low>>>16,i=this.low&65535,a=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,p=0,m=0,f=0,h=0;return h+=i*c,f+=h>>>16,h&=65535,f+=s*c,m+=f>>>16,f&=65535,f+=i*u,m+=f>>>16,f&=65535,m+=n*c,p+=m>>>16,m&=65535,m+=s*u,p+=m>>>16,m&=65535,m+=i*l,p+=m>>>16,m&=65535,p+=o*c+n*u+s*l+i*a,p&=65535,Me(f<<16|h,p<<16|m,this.unsigned)};ht.mul=ht.multiply;ht.divide=function(e){if(Co(e)||(e=On(e)),e.isZero())throw Error("division by zero");if(sn){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?sn.div_u:sn.div_s)(this.low,this.high,e.low,e.high);return Me(t,sn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?ru:ln;var o,n,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return ru;if(e.gt(this.shru(1)))return $1;s=ru}else{if(this.eq(vo)){if(e.eq(cp)||e.eq(s0))return vo;if(e.eq(vo))return cp;var i=this.shr(1);return o=i.div(e).shl(1),o.eq(ln)?e.isNegative()?cp:s0:(n=this.sub(e.mul(o)),s=o.add(n.div(e)),s)}else if(e.eq(vo))return this.unsigned?ru:ln;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=ln}for(n=this;n.gte(e);){o=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(o)/Math.LN2),l=a<=48?1:Id(2,a-48),u=an(o),c=u.mul(e);c.isNegative()||c.gt(n);)o-=l,u=an(o,this.unsigned),c=u.mul(e);u.isZero()&&(u=cp),s=s.add(u),n=n.sub(c)}return s};ht.div=ht.divide;ht.modulo=function(e){if(Co(e)||(e=On(e)),sn){var t=(this.unsigned?sn.rem_u:sn.rem_s)(this.low,this.high,e.low,e.high);return Me(t,sn.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};ht.mod=ht.modulo;ht.rem=ht.modulo;ht.not=function(){return Me(~this.low,~this.high,this.unsigned)};ht.and=function(e){return Co(e)||(e=On(e)),Me(this.low&e.low,this.high&e.high,this.unsigned)};ht.or=function(e){return Co(e)||(e=On(e)),Me(this.low|e.low,this.high|e.high,this.unsigned)};ht.xor=function(e){return Co(e)||(e=On(e)),Me(this.low^e.low,this.high^e.high,this.unsigned)};ht.shiftLeft=function(e){return Co(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Me(0,this.low<<e-32,this.unsigned)};ht.shl=ht.shiftLeft;ht.shiftRight=function(e){return Co(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Me(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};ht.shr=ht.shiftRight;ht.shiftRightUnsigned=function(e){if(Co(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var o=this.low;return Me(o>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Me(t,0,this.unsigned):Me(t>>>e-32,0,this.unsigned)};ht.shru=ht.shiftRightUnsigned;ht.shr_u=ht.shiftRightUnsigned;ht.toSigned=function(){return this.unsigned?Me(this.low,this.high,!1):this};ht.toUnsigned=function(){return this.unsigned?this:Me(this.low,this.high,!0)};ht.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};ht.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};ht.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Be.fromBytes=function(e,t,o){return o?Be.fromBytesLE(e,t):Be.fromBytesBE(e,t)};Be.fromBytesLE=function(e,t){return new Be(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Be.fromBytesBE=function(e,t){return new Be(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var S0=nn((bp,NC)=>{"use strict";var cq=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")},mu=cq();NC.exports=bp=mu.fetch;mu.fetch&&(bp.default=mu.fetch.bind(mu));bp.Headers=mu.Headers;bp.Request=mu.Request;bp.Response=mu.Response});var v0=nn(()=>{"use strict"});var UC=nn((WC,nN)=>{"use strict";(function(r,e,t){function o(a){var l=this,u=i();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(a),l.s0<0&&(l.s0+=1),l.s1-=u(a),l.s1<0&&(l.s1+=1),l.s2-=u(a),l.s2<0&&(l.s2+=1),u=null}function n(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function s(a,l){var u=new o(a),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&n(c,u),p.state=function(){return n(u,{})}),p}function i(){var a=4022871197,l=function(u){u=String(u);for(var c=0;c<u.length;c++){a+=u.charCodeAt(c);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(WC,typeof nN=="object"&&nN,typeof define=="function"&&define)});var qC=nn((HC,sN)=>{"use strict";(function(r,e,t){function o(i){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var c=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^c^c>>>8},i===(i|0)?a.x=i:l+=i;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,a.next()}function n(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a}function s(i,a){var l=new o(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(HC,typeof sN=="object"&&sN,typeof define=="function"&&define)});var jC=nn((KC,iN)=>{"use strict";(function(r,e,t){function o(i){var a=this,l="";a.next=function(){var c=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(c^c<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,i===(i|0)?a.x=i:l+=i;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,u==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function n(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a.v=i.v,a.d=i.d,a}function s(i,a){var l=new o(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(KC,typeof iN=="object"&&iN,typeof define=="function"&&define)});var YC=nn((XC,aN)=>{"use strict";(function(r,e,t){function o(i){var a=this;a.next=function(){var u=a.x,c=a.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,a.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(a,i)}function n(i,a){return a.x=i.x.slice(),a.i=i.i,a}function s(i,a){i==null&&(i=+new Date);var l=new o(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&n(u,l),c.state=function(){return n(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(XC,typeof aN=="object"&&aN,typeof define=="function"&&define)});var JC=nn((ZC,lN)=>{"use strict";(function(r,e,t){function o(i){var a=this;a.next=function(){var u=a.w,c=a.X,p=a.i,m,f;return a.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,a.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,h,g,d=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,h=-32;h<x;++h)c&&(m^=c.charCodeAt((h+32)%c.length)),h===0&&(g=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,h>=0&&(g=g+1640531527|0,p=d[h&127]^=m+g,f=p==0?f+1:0);for(f>=128&&(d[(c&&c.length||0)&127]=-1),f=127,h=4*128;h>0;--h)m=d[f+34&127],p=d[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,d[f]=m^p;u.w=g,u.X=d,u.i=f}l(a,i)}function n(i,a){return a.i=i.i,a.w=i.w,a.X=i.X.slice(),a}function s(i,a){i==null&&(i=+new Date);var l=new o(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&n(u,l),c.state=function(){return n(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(ZC,typeof lN=="object"&&lN,typeof define=="function"&&define)});var tI=nn((QC,uN)=>{"use strict";(function(r,e,t){function o(i){var a=this,l="";a.next=function(){var c=a.b,p=a.c,m=a.d,f=a.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,a.b=c=c<<20^c>>>12^p,a.c=p=p-m|0,a.d=m<<16^p>>>16^f,a.a=f-c|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,i===Math.floor(i)?(a.a=i/4294967296|0,a.b=i|0):l+=i;for(var u=0;u<l.length+20;u++)a.b^=l.charCodeAt(u)|0,a.next()}function n(i,a){return a.a=i.a,a.b=i.b,a.c=i.c,a.d=i.d,a}function s(i,a){var l=new o(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(QC,typeof uN=="object"&&uN,typeof define=="function"&&define)});var rI=nn((eI,Kd)=>{"use strict";(function(r,e,t){var o=256,n=6,s=52,i="random",a=t.pow(o,n),l=t.pow(2,s),u=l*2,c=o-1,p;function m(w,N,v){var k=[];N=N==!0?{entropy:!0}:N||{};var R=d(g(N.entropy?[w,y(e)]:w??x(),3),k),O=new f(k),L=function(){for(var M=O.g(n),H=a,q=0;M<l;)M=(M+q)*o,H*=o,q=O.g(1);for(;M>=u;)M/=2,H/=2,q>>>=1;return(M+q)/H};return L.int32=function(){return O.g(4)|0},L.quick=function(){return O.g(4)/4294967296},L.double=L,d(y(O.S),e),(N.pass||v||function(M,H,q,K){return K&&(K.S&&h(K,O),M.state=function(){return h(O,{})}),q?(t[i]=M,H):M})(L,R,"global"in N?N.global:this==t,N.state)}function f(w){var N,v=w.length,k=this,R=0,O=k.i=k.j=0,L=k.S=[];for(v||(w=[v++]);R<o;)L[R]=R++;for(R=0;R<o;R++)L[R]=L[O=c&O+w[R%v]+(N=L[R])],L[O]=N;(k.g=function(M){for(var H,q=0,K=k.i,X=k.j,Y=k.S;M--;)H=Y[K=c&K+1],q=q*o+Y[c&(Y[K]=Y[X=c&X+H])+(Y[X]=H)];return k.i=K,k.j=X,q})(o)}function h(w,N){return N.i=w.i,N.j=w.j,N.S=w.S.slice(),N}function g(w,N){var v=[],k=typeof w,R;if(N&&k=="object")for(R in w)try{v.push(g(w[R],N-1))}catch{}return v.length?v:k=="string"?w:w+"\0"}function d(w,N){for(var v=w+"",k,R=0;R<v.length;)N[c&R]=c&(k^=N[c&R]*19)+v.charCodeAt(R++);return y(N)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(o):(w=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(w)),y(w)}catch{var N=r.navigator,v=N&&N.plugins;return[+new Date,r,v,r.screen,y(e)]}}function y(w){return String.fromCharCode.apply(0,w)}if(d(t.random(),e),typeof Kd=="object"&&Kd.exports){Kd.exports=m;try{p=J4()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):t["seed"+i]=m})(typeof self<"u"?self:eI,[],Math)});var Dp=nn((T1t,oI)=>{"use strict";var Aj=UC(),Dj=qC(),_j=jC(),Rj=YC(),Fj=JC(),Oj=tI(),Su=rI();Su.alea=Aj;Su.xor128=Dj;Su.xorwow=_j;Su.xorshift7=Rj;Su.xor4096=Fj;Su.tychei=Oj;oI.exports=Su});var gV=nn((PGe,dV)=>{"use strict";dV.exports=Ge;var In=null;try{In=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ge(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}Ge.prototype.__isLong__;Object.defineProperty(Ge.prototype,"__isLong__",{value:!0});function Mo(r){return(r&&r.__isLong__)===!0}Ge.isLong=Mo;var iV={},aV={};function ec(r,e){var t,o,n;return e?(r>>>=0,(n=0<=r&&r<256)&&(o=aV[r],o)?o:(t=We(r,(r|0)<0?-1:0,!0),n&&(aV[r]=t),t)):(r|=0,(n=-128<=r&&r<128)&&(o=iV[r],o)?o:(t=We(r,r<0?-1:0,!1),n&&(iV[r]=t),t))}Ge.fromInt=ec;function kn(r,e){if(isNaN(r))return e?tc:En;if(e){if(r<0)return tc;if(r>=pV)return hV}else{if(r<=-uV)return Bo;if(r+1>=uV)return fV}return r<0?kn(-r,e).neg():We(r%Dm|0,r/Dm|0,e)}Ge.fromNumber=kn;function We(r,e,t){return new Ge(r,e,t)}Ge.fromBits=We;var Tb=Math.pow;function uv(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return En;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var o;if((o=r.indexOf("-"))>0)throw Error("interior hyphen");if(o===0)return uv(r.substring(1),e,t).neg();for(var n=kn(Tb(t,8)),s=En,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),l=parseInt(r.substring(i,i+a),t);if(a<8){var u=kn(Tb(t,a));s=s.mul(u).add(kn(l))}else s=s.mul(n),s=s.add(kn(l))}return s.unsigned=e,s}Ge.fromString=uv;function Jn(r,e){return typeof r=="number"?kn(r,e):typeof r=="string"?uv(r,e):We(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}Ge.fromValue=Jn;var lV=65536,Lnt=1<<24,Dm=lV*lV,pV=Dm*Dm,uV=pV/2,cV=ec(Lnt),En=ec(0);Ge.ZERO=En;var tc=ec(0,!0);Ge.UZERO=tc;var Am=ec(1);Ge.ONE=Am;var mV=ec(1,!0);Ge.UONE=mV;var lv=ec(-1);Ge.NEG_ONE=lv;var fV=We(-1,2147483647,!1);Ge.MAX_VALUE=fV;var hV=We(-1,-1,!0);Ge.MAX_UNSIGNED_VALUE=hV;var Bo=We(0,-2147483648,!1);Ge.MIN_VALUE=Bo;var dt=Ge.prototype;dt.toInt=function(){return this.unsigned?this.low>>>0:this.low};dt.toNumber=function(){return this.unsigned?(this.high>>>0)*Dm+(this.low>>>0):this.high*Dm+(this.low>>>0)};dt.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Bo)){var t=kn(e),o=this.div(t),n=o.mul(t).sub(this);return o.toString(e)+n.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=kn(Tb(e,6),this.unsigned),i=this,a="";;){var l=i.div(s),u=i.sub(l.mul(s)).toInt()>>>0,c=u.toString(e);if(i=l,i.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};dt.getHighBits=function(){return this.high};dt.getHighBitsUnsigned=function(){return this.high>>>0};dt.getLowBits=function(){return this.low};dt.getLowBitsUnsigned=function(){return this.low>>>0};dt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Bo)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};dt.isZero=function(){return this.high===0&&this.low===0};dt.eqz=dt.isZero;dt.isNegative=function(){return!this.unsigned&&this.high<0};dt.isPositive=function(){return this.unsigned||this.high>=0};dt.isOdd=function(){return(this.low&1)===1};dt.isEven=function(){return(this.low&1)===0};dt.equals=function(e){return Mo(e)||(e=Jn(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};dt.eq=dt.equals;dt.notEquals=function(e){return!this.eq(e)};dt.neq=dt.notEquals;dt.ne=dt.notEquals;dt.lessThan=function(e){return this.comp(e)<0};dt.lt=dt.lessThan;dt.lessThanOrEqual=function(e){return this.comp(e)<=0};dt.lte=dt.lessThanOrEqual;dt.le=dt.lessThanOrEqual;dt.greaterThan=function(e){return this.comp(e)>0};dt.gt=dt.greaterThan;dt.greaterThanOrEqual=function(e){return this.comp(e)>=0};dt.gte=dt.greaterThanOrEqual;dt.ge=dt.greaterThanOrEqual;dt.compare=function(e){if(Mo(e)||(e=Jn(e)),this.eq(e))return 0;var t=this.isNegative(),o=e.isNegative();return t&&!o?-1:!t&&o?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};dt.comp=dt.compare;dt.negate=function(){return!this.unsigned&&this.eq(Bo)?Bo:this.not().add(Am)};dt.neg=dt.negate;dt.add=function(e){Mo(e)||(e=Jn(e));var t=this.high>>>16,o=this.high&65535,n=this.low>>>16,s=this.low&65535,i=e.high>>>16,a=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,p=0,m=0,f=0;return f+=s+u,m+=f>>>16,f&=65535,m+=n+l,p+=m>>>16,m&=65535,p+=o+a,c+=p>>>16,p&=65535,c+=t+i,c&=65535,We(m<<16|f,c<<16|p,this.unsigned)};dt.subtract=function(e){return Mo(e)||(e=Jn(e)),this.add(e.neg())};dt.sub=dt.subtract;dt.multiply=function(e){if(this.isZero())return En;if(Mo(e)||(e=Jn(e)),In){var t=In.mul(this.low,this.high,e.low,e.high);return We(t,In.get_high(),this.unsigned)}if(e.isZero())return En;if(this.eq(Bo))return e.isOdd()?Bo:En;if(e.eq(Bo))return this.isOdd()?Bo:En;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(cV)&&e.lt(cV))return kn(this.toNumber()*e.toNumber(),this.unsigned);var o=this.high>>>16,n=this.high&65535,s=this.low>>>16,i=this.low&65535,a=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,p=0,m=0,f=0,h=0;return h+=i*c,f+=h>>>16,h&=65535,f+=s*c,m+=f>>>16,f&=65535,f+=i*u,m+=f>>>16,f&=65535,m+=n*c,p+=m>>>16,m&=65535,m+=s*u,p+=m>>>16,m&=65535,m+=i*l,p+=m>>>16,m&=65535,p+=o*c+n*u+s*l+i*a,p&=65535,We(f<<16|h,p<<16|m,this.unsigned)};dt.mul=dt.multiply;dt.divide=function(e){if(Mo(e)||(e=Jn(e)),e.isZero())throw Error("division by zero");if(In){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?In.div_u:In.div_s)(this.low,this.high,e.low,e.high);return We(t,In.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?tc:En;var o,n,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return tc;if(e.gt(this.shru(1)))return mV;s=tc}else{if(this.eq(Bo)){if(e.eq(Am)||e.eq(lv))return Bo;if(e.eq(Bo))return Am;var i=this.shr(1);return o=i.div(e).shl(1),o.eq(En)?e.isNegative()?Am:lv:(n=this.sub(e.mul(o)),s=o.add(n.div(e)),s)}else if(e.eq(Bo))return this.unsigned?tc:En;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=En}for(n=this;n.gte(e);){o=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(o)/Math.LN2),l=a<=48?1:Tb(2,a-48),u=kn(o),c=u.mul(e);c.isNegative()||c.gt(n);)o-=l,u=kn(o,this.unsigned),c=u.mul(e);u.isZero()&&(u=Am),s=s.add(u),n=n.sub(c)}return s};dt.div=dt.divide;dt.modulo=function(e){if(Mo(e)||(e=Jn(e)),In){var t=(this.unsigned?In.rem_u:In.rem_s)(this.low,this.high,e.low,e.high);return We(t,In.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};dt.mod=dt.modulo;dt.rem=dt.modulo;dt.not=function(){return We(~this.low,~this.high,this.unsigned)};dt.and=function(e){return Mo(e)||(e=Jn(e)),We(this.low&e.low,this.high&e.high,this.unsigned)};dt.or=function(e){return Mo(e)||(e=Jn(e)),We(this.low|e.low,this.high|e.high,this.unsigned)};dt.xor=function(e){return Mo(e)||(e=Jn(e)),We(this.low^e.low,this.high^e.high,this.unsigned)};dt.shiftLeft=function(e){return Mo(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?We(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):We(0,this.low<<e-32,this.unsigned)};dt.shl=dt.shiftLeft;dt.shiftRight=function(e){return Mo(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?We(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):We(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};dt.shr=dt.shiftRight;dt.shiftRightUnsigned=function(e){if(Mo(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var o=this.low;return We(o>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?We(t,0,this.unsigned):We(t>>>e-32,0,this.unsigned)};dt.shru=dt.shiftRightUnsigned;dt.shr_u=dt.shiftRightUnsigned;dt.toSigned=function(){return this.unsigned?We(this.low,this.high,!1):this};dt.toUnsigned=function(){return this.unsigned?this:We(this.low,this.high,!0)};dt.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};dt.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};dt.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Ge.fromBytes=function(e,t,o){return o?Ge.fromBytesLE(e,t):Ge.fromBytesBE(e,t)};Ge.fromBytesLE=function(e,t){return new Ge(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Ge.fromBytesBE=function(e,t){return new Ge(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var Vl=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Rs=class{refCount(e){return So("refCount")}incRef(e){return So("incRef")}timerAvailable(){return!0}time(e){return So("time")}read(e){return So("read")}readSync(e){return So("readSync")}readToGPU(e,t){return So("readToGPU")}numDataIds(){return So("numDataIds")}disposeData(e,t){return So("disposeData")}write(e,t,o){return So("write")}move(e,t,o,n,s){return So("move")}createTensorFromGPUData(e,t,o){return So("createTensorFromGPUData")}memory(){return So("memory")}floatPrecision(){return So("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return So("dispose")}};function So(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function c1(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,td(r,e,t)}function Q4(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,o=0;for(;t>0;)o=Math.random()*t|0,t--,td(r,t,o),td(e,t,o)}function bc(r,e,t){return Math.max(r,Math.min(e,t))}function tH(r){return r%2===0?r:r+1}function td(r,e,t){let o=r[e];r[e]=r[t],r[t]=o}function eH(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function rH(r,e){let t=Math.random();return e*t+(1-t)*r}function oH(r,e){let t=0;for(let o=0;o<r.length;o++){let n=Number(r[o])-Number(e[o]);t+=n*n}return t}function D(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function ed(r,e,t=""){D(la(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function ef(r){D(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Qt(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function nH(r){return r.length===0}function sH(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==null&&e[t]!==null&&r[t]!==e[t])return!1;return!0}function la(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function Fs(r){return r%1===0}function iH(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function aH(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function lH(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return c1(e),e}function Wl(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function uH(r,e=n=>0,t,o){return new Promise((n,s)=>{let i=0,a=()=>{if(r()){n();return}i++;let l=e(i);if(t!=null&&i>=t){s();return}o!=null?o(a,l):setTimeout(a,l)};a()})}function cH(r,e){let t=1,o=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(o!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${o} and dim ${s}`);o=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(o===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let n=r.slice();return n[o]=e/t,n}function sr(r,e){let t=e.length;return r=r==null?e.map((o,n)=>n):[].concat(r),D(r.every(o=>o>=-t&&o<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),D(r.every(o=>Fs(o)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(o=>o<0?t+o:o)}function jw(r,e){let t=[],o=[],n=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||n?null:sr(e,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(t.push(r[a]),o.push(a)),s[i]<=a&&i++}r[a]!==1&&(t.push(r[a]),o.push(a))}return{newShape:t,keptDims:o}}function pH(r,e){return rd(r,e)}function rd(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function Xw(r,e){for(let t=0;t<r.length;t++){let o=r[t];if(isNaN(o)||!isFinite(o))throw Error(`A tensor of type ${e} being uploaded contains ${o}.`)}}function Yw(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function mH(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function wc(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function Zw(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function Nc(r){return typeof r=="string"||r instanceof String}function p1(r){return typeof r=="boolean"}function m1(r){return typeof r=="number"}function ua(r){return Array.isArray(r)?ua(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":m1(r)?"float32":Nc(r)?"string":p1(r)?"bool":"float32"}function Tc(r){return!!(r&&r.constructor&&r.call&&r.apply)}function Sc(r,e){for(let t=e;t<r;++t)if(r%t===0)return t;return r}function ss(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let o=e-3;o>=0;--o)t[o]=t[o+1]*r[o+1];return t}function f1(r,e,t,o=!1){let n=new Array;if(e.length===1){let s=e[0]*(o?2:1);for(let i=0;i<s;i++)n[i]=t[r+i]}else{let s=e[0],i=e.slice(1),a=i.reduce((l,u)=>l*u)*(o?2:1);for(let l=0;l<s;l++)n[l]=f1(r+l*a,i,t,o)}return n}function Gl(r,e,t=!1){if(r.length===0)return e[0];let o=r.reduce((n,s)=>n*s)*(t?2:1);if(o===0)return[];if(o!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return f1(0,r,e,t)}function fH(r,e){if(Array.isArray(r))return r;if(e==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(e==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${e}`)}function rf(r,e){let t=vc(r,e);for(let o=0;o<t.length;o++)t[o]=1;return t}function vc(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function hH(r,e){let t=r.reduce((o,n)=>o*n,1);if(e==null||e==="float32")return Gl(r,new Float32Array(t));if(e==="int32")return Gl(r,new Int32Array(t));if(e==="bool")return Gl(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Sr(r){r.forEach(e=>{D(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function dH(r,e,t){if(e===0)return 0;if(e===1)return r[0];let o=r[r.length-1];for(let n=0;n<r.length-1;++n)o+=t[n]*r[n];return o}function gH(r,e,t){if(e===0)return[];if(e===1)return[r];let o=new Array(e);for(let n=0;n<o.length-1;++n)o[n]=Math.floor(r/t[n]),r-=o[n]*t[n];return o[o.length-1]=r,o}function Ul(r){return r&&r.then&&typeof r.then=="function"}var h1="tfjsflags",of=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=yH,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(W().getBool("IS_TEST")||W().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,o){if(this.flagRegistry[e]={evaluationFn:t,setHook:o},this.urlFlags[e]!=null){let n=this.urlFlags[e];W().getBool("IS_TEST")||W().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${n}.`),this.set(e,n)}}getAsync(e){return V(this,null,function*(){return e in this.flags?this.flags[e]:(this.flags[e]=yield this.evaluateFlag(e),this.flags[e])})}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Ul(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);h1 in e&&e[h1].split(",").forEach(o=>{let[n,s]=o.split(":");this.urlFlags[n]=wH(n,s)})}};function yH(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...o)=>(bH(e,o[0],o[1]),o.join("="))),e}function bH(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function wH(r,e){let t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function W(){return Jw}var Jw=null;function d1(r){Jw=r}var Qw;function t0(){if(Qw==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");Qw=r}return Qw}function NH(){let r=t0();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function nf(r,e){let t=NH();if(t.has(r))return t.get(r);{let o=e();return t.set(r,o),t.get(r)}}var ca="Abs",Os="Acos",Ls="Acosh",Fn="Add",Cc="AddN",Ic="All",kc="Any",pa="ArgMax",ma="ArgMin",Ps="Asin",zs="Asinh",Bs="Atan",Ms="Atanh",Vs="Atan2",fa="AvgPool",Ec="AvgPoolGrad",ha="AvgPool3D",$c="AvgPool3DGrad",da="BatchMatMul",ga="BatchToSpaceND",Ac="Bincount",sf="BitwiseAnd",g1="BroadcastTo",od="BroadcastArgs",is="Cast",Gs="Ceil",Ws="ClipByValue",Dc="Complex",xa="ComplexAbs",ya="Concat",ba="Conv2D",_c="Conv2DBackpropFilter",wa="Conv2DBackpropInput",Na="Conv3D",Rc="Conv3DBackpropFilterV2",Fc="Conv3DBackpropInputV2",Us="Cos",Hs="Cosh",Oc="Cumprod",Ta="Cumsum",Lc="CropAndResize",Pc="DenseBincount",zc="DepthToSpace",Sa="DepthwiseConv2dNative",Bc="DepthwiseConv2dNativeBackpropFilter",Mc="DepthwiseConv2dNativeBackpropInput",nd="Diag",va="Dilation2D",af="Dilation2DBackpropInput",lf="Dilation2DBackpropFilter",x1="Draw",qs="RealDiv",Vc="Einsum",Ks="Elu",Gc="EluGrad",js="Erf",Hl="Equal",Xs="Exp",Ca="ExpandDims",Ys="Expm1",Wc="FFT",Uc="Fill",Hc="FlipLeftRight",Zs="Floor",Js="FloorDiv",Ia="FusedBatchNorm",ka="GatherV2",sd="GatherNd",ql="Greater",Qs="GreaterEqual",as="Identity",qc="IFFT",Kc="Imag",ti="IsFinite",ei="IsInf",ri="IsNan",Ea="LeakyRelu",Kl="Less",jl="LessEqual",id="LinSpace",oi="Log",ni="Log1p",Xl="LogicalAnd",Yl="LogicalNot",Zl="LogicalOr";var y1="LogSoftmax";var $a="LRN",jc="LRNGrad";var Aa="Max",si="Maximum",Da="MaxPool",Xc="MaxPoolGrad",_a="MaxPool3D",Yc="MaxPool3DGrad",ad="MaxPoolWithArgmax",Ra="Mean",Fa="Min",ii="Minimum",Oa="MirrorPad",ai="Mod",ld="Multinomial",li="Multiply",La="Neg",Jl="NotEqual",Zc="NonMaxSuppressionV3",Jc="NonMaxSuppressionV4",Qc="NonMaxSuppressionV5",Pa="OnesLike",za="OneHot",Ba="Pack",Ma="PadV2";var ui="Pow",Va="Prelu",Ga="Prod",ud="RaggedGather",cd="RaggedRange",pd="RaggedTensorToTensor",tp="Range",ep="Real",ci="Reciprocal",pi="Relu",Wa="Reshape",Ua="ResizeNearestNeighbor",rp="ResizeNearestNeighborGrad",Ha="ResizeBilinear",op="ResizeBilinearGrad",mi="Relu6",qa="Reverse",fi="Round",hi="Rsqrt",md="ScatterNd",fd="TensorScatterUpdate",hd="SearchSorted",Ka="Select",di="Selu",ja="Slice",gi="Sin",xi="Sinh",yi="Sign",bi="Sigmoid",wi="Softplus",Ni="Sqrt",Xa="Sum",Ya="SpaceToBatchND",Za="SplitV",Ja="Softmax",dd="SparseFillEmptyRows",gd="SparseReshape",xd="SparseSegmentMean",yd="SparseSegmentSum",bd="SparseToDense",Ti="SquaredDifference",np="Square",uf="StaticRegexReplace",sp="StridedSlice",wd="StringNGrams",Nd="StringSplit",Td="StringToHashBucketFast",Si="Sub",vi="Tan",Ci="Tanh",ls="Tile",ip="TopK",ap="Transform",us="Transpose",lp="Unique",Qa="Unpack",tl="UnsortedSegmentSum";var el="ZerosLike",Ii="Step",b1="FromPixels",up="RotateWithOffset",Ql="_FusedMatMul",tu="FusedConv2D",eu="FusedDepthwiseConv2D";function cs(...r){W().getBool("IS_TEST")||W().getBool("PROD")||console.warn(...r)}function TH(...r){W().getBool("IS_TEST")||W().getBool("PROD")||console.log(...r)}var Sd=nf("kernelRegistry",()=>new Map),e0=nf("gradRegistry",()=>new Map);function r0(r,e){let t=T1(r,e);return Sd.get(t)}function o0(r){return e0.get(r)}function n0(r){let e=Sd.entries(),t=[];for(;;){let{done:o,value:n}=e.next();if(o)break;let[s,i]=n,[a]=s.split("_");a===r&&t.push(i)}return t}function vd(r){let{kernelName:e,backendName:t}=r,o=T1(e,t);Sd.has(o)&&cs(`The kernel '${e}' for backend '${t}' is already registered`),Sd.set(o,r)}function N1(r){let{kernelName:e}=r;e0.has(e)&&W().getBool("DEBUG")&&cs(`Overriding the gradient for '${e}'`),e0.set(e,r)}function T1(r,e){return`${e}_${r}`}var b={};le(b,{arraysEqual:()=>la,arraysEqualWithNull:()=>sH,assert:()=>D,assertNonNegativeIntegerDimensions:()=>Sr,assertNonNull:()=>ef,assertShapesMatch:()=>ed,bytesFromStringArray:()=>Zw,bytesPerElement:()=>wc,checkConversionForErrors:()=>Xw,clamp:()=>bc,computeStrides:()=>ss,convertBackendValuesAndArrayBuffer:()=>fH,createScalarValue:()=>$H,createShuffledIndices:()=>lH,decodeString:()=>hp,distSquared:()=>oH,encodeString:()=>fp,fetch:()=>DH,fingerPrint64:()=>EH,flatten:()=>ol,getArrayFromDType:()=>rd,getTypedArrayFromDType:()=>pH,hasEncodingLoss:()=>mH,hexToLong:()=>cf,indexToLoc:()=>gH,inferDtype:()=>ua,inferFromImplicitShape:()=>cH,isBoolean:()=>p1,isFunction:()=>Tc,isInt:()=>Fs,isNumber:()=>m1,isPromise:()=>Ul,isScalarShape:()=>nH,isString:()=>Nc,isTypedArray:()=>Mr,isValidDtype:()=>Yw,locToIndex:()=>dH,makeOnesTypedArray:()=>rf,makeZerosNestedTypedArray:()=>hH,makeZerosTypedArray:()=>vc,nearestDivisor:()=>Sc,nearestLargerEven:()=>tH,now:()=>iu,parseAxisParam:()=>sr,randUniform:()=>rH,repeatedTry:()=>uH,rightPad:()=>Wl,shuffle:()=>c1,shuffleCombo:()=>Q4,sizeFromShape:()=>Qt,sizeToSquarishShape:()=>aH,squeezeShape:()=>jw,sum:()=>eH,swap:()=>td,tanh:()=>iH,toNestedArray:()=>Gl,toTypedArray:()=>mp});function Cd(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}var l0=Ml(R1());var su=l0.default||l0;function cf(r){return su.fromString(r,!0,16)}var O1=cf("c3a5c85c97cb3127"),nu=cf("b492b66fbe98f273"),jr=cf("9ae16a3b2f90404f");function a0(r){return r.xor(r.shru(47))}function L1(r,e,t){let o=r.slice(e,e+t);return su.fromBytes(Array.from(o),!0,!0)}function _e(r,e){return L1(r,e,8)}function F1(r,e){return L1(r,e,4)}function vr(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function rl(r,e,t=cf("9ddfea08eb382d69")){let o=r.xor(e).mul(t);o=o.xor(o.shru(47));let n=e.xor(o).mul(t);return n=n.xor(n.shru(47)),n=n.mul(t),n}function vH(r,e,t,o,n,s){n=n.add(r),s=vr(s.add(n).add(o),21);let i=n;return n=n.add(e),n=n.add(t),s=s.add(vr(n,44)),[n.add(o),s.add(i)]}function kd(r,e,t,o){return vH(_e(r,e),_e(r,e+8),_e(r,e+16),_e(r,e+24),t,o)}function CH(r,e=r.length){if(e>=8){let t=jr.add(e*2),o=_e(r,0).add(jr),n=_e(r,e-8),s=vr(n,37).mul(t).add(o),i=vr(o,25).add(n).mul(t);return rl(s,i,t)}if(e>=4){let t=jr.add(e*2),o=F1(r,0);return rl(o.shl(3).add(e),F1(r,e-4),t)}if(e>0){let t=r[0],o=r[e>>1],n=r[e-1],s=t+(o<<8),i=e+(n<<2);return a0(jr.mul(s).xor(O1.mul(i))).mul(jr)}return jr}function IH(r,e=r.length){let t=jr.add(e*2),o=_e(r,0).mul(nu),n=_e(r,8),s=_e(r,e-8).mul(t),i=_e(r,e-16).mul(jr);return rl(vr(o.add(n),43).add(vr(s,30)).add(i),o.add(vr(n.add(jr),18)).add(s),t)}function kH(r,e=r.length){let t=jr.add(e*2),o=_e(r,0).mul(jr),n=_e(r,8),s=_e(r,e-8).mul(t),i=_e(r,e-16).mul(jr),a=vr(o.add(n),43).add(vr(s,30)).add(i),l=rl(a,o.add(vr(n.add(jr),18)).add(s),t),u=_e(r,16).mul(t),c=_e(r,24),p=a.add(_e(r,e-32)).mul(t),m=l.add(_e(r,e-24)).mul(t);return rl(vr(u.add(c),43).add(vr(p,30)).add(m),u.add(vr(c.add(o),18)).add(p),t)}function EH(r,e=r.length){let t=su.fromNumber(81,!0);if(e<=32)return e<=16?CH(r,e):IH(r,e);if(e<=64)return kH(r,e);let o=t,n=t.mul(nu).add(113),s=a0(n.mul(jr).add(113)).mul(jr),i=[su.UZERO,su.UZERO],a=[su.UZERO,su.UZERO];o=o.mul(jr).add(_e(r,0));let l=0,u=(e-1>>6)*64,c=u+(e-1&63)-63;do o=vr(o.add(n).add(i[0]).add(_e(r,l+8)),37).mul(nu),n=vr(n.add(i[1]).add(_e(r,l+48)),42).mul(nu),o=o.xor(a[1]),n=n.add(i[0]).add(_e(r,l+40)),s=vr(s.add(a[0]),33).mul(nu),i=kd(r,l,i[1].mul(nu),o.add(a[0])),a=kd(r,l+32,s.add(a[1]),n.add(_e(r,l+16))),[s,o]=[o,s],l+=64;while(l!==u);let p=nu.add(s.and(255).shl(1));return l=c,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),o=vr(o.add(n).add(i[0]).add(_e(r,l+8)),37).mul(p),n=vr(n.add(i[1]).add(_e(r,l+48)),42).mul(p),o=o.xor(a[1].mul(9)),n=n.add(i[0].mul(9).add(_e(r,l+40))),s=vr(s.add(a[0]),33).mul(p),i=kd(r,l,i[1].mul(p),o.add(a[0])),a=kd(r,l+32,s.add(a[1]),n.add(_e(r,l+16))),[s,o]=[o,s],rl(rl(i[0],a[0],p).add(a0(n).mul(O1)).add(s),rl(i[1],a[1],p).add(o),p)}function $H(r,e){return e==="string"?fp(r):mp([r],e)}function AH(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function mp(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=ol(r)),W().getBool("DEBUG")&&Xw(r,e),AH(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let o=0;o<t.length;++o)Math.round(r[o])!==0&&(t[o]=1);return t}else throw new Error(`Unknown data type ${e}`)}function iu(){return W().platform.now()}function DH(r,e){return W().platform.fetch(r,e)}function fp(r,e="utf-8"){return e=e||"utf-8",W().platform.encode(r,e)}function hp(r,e="utf-8"){return e=e||"utf-8",W().platform.decode(r,e)}function Mr(r){return W().platform.isTypedArray!=null?W().platform.isTypedArray(r):Cd(r)}function ol(r,e=[],t=!1){if(e==null&&(e=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||Ul(r)||r==null||Mr(r)&&t)e.push(r);else if(Array.isArray(r)||Mr(r))for(let o=0;o<r.length;++o)ol(r[o],e,t);else{let o=-1;for(let n of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(n)&&(o=Math.max(o,Number(n)));for(let n=0;n<=o;n++)ol(r[n],e,t)}return e}var Ed=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new u0)}profileKernel(e,t,o){let n,s=()=>{n=o()},i,a=iu();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let u of n)u.dataSync();i=Promise.resolve({kernelMs:iu()-a})}if(W().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<n.length;u++){let c=n[u];c.data().then(p=>{_H(p,c.dtype,e)})}return{kernelName:e,outputs:n,inputs:t,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:o,timeMs:n,inputs:s,extraInfo:i}=e;o.forEach(a=>{Promise.all([a.data(),n,i]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],s,l[2])})})}};function _H(r,e,t){if(e!=="float32")return!1;for(let o=0;o<r.length;o++){let n=r[o];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${t}'`),!0}return!1}var u0=class{logKernelProfile(e,t,o,n,s,i){let a=typeof n=="number"?Wl(`${n}ms`,9):n.error,l=Wl(e,25),u=t.rank,c=t.size,p=Wl(t.shape.toString(),14),m="";for(let f in s){let h=s[f];if(h!=null){let g=h.shape||t.shape,d=g.length;m+=`${f}: ${d}D ${d>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${p}	%c${c}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function P1(r,e,t){let o={},n={};for(let l=0;l<e.length;l++)o[e[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let m=c[p],f=!1;for(let h=0;h<e.length;h++)if(o[m.id]){u.outputs.forEach(g=>o[g.id]=!0),f=!0,n[u.id]=!0;break}if(f)break}}let s={};s[t.id]=!0;let i={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(s[u.outputs[p].id]){for(let m in c)s[c[m].id]=!0,i[u.id]=!0;break}}let a=[];for(let l=0;l<r.length;l++){let u=r[l];if(n[u.id]&&i[u.id]){let c={};for(let m in u.inputs){let f=u.inputs[m];o[f.id]&&(c[m]=f)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,a.push(p)}}return a}function z1(r,e,t,o){for(let n=e.length-1;n>=0;n--){let s=e[n],i=[];if(s.outputs.forEach(l=>{let u=r[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let l in s.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);let u=t(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=s.inputs[l];if(!la(u.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=o(p,u),p.dispose()}}}}var B1=20,pf=3,c0=7;function M1(r,e,t,o){let n=ss(e),s=RH(r,e,t,n),i=e.length,a=$d(r,e,t,n,s),l=["Tensor"];return o&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function RH(r,e,t,o){let n=Qt(e),s=o[o.length-1],i=new Array(s).fill(0),a=e.length,l=t==="complex64"?ff(r):r;if(a>1)for(let u=0;u<n/s;u++){let c=u*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],mf(l[c+p],0,t).length)}return i}function mf(r,e,t){let o;return Array.isArray(r)?o=`${parseFloat(r[0].toFixed(c0))} + ${parseFloat(r[1].toFixed(c0))}j`:Nc(r)?o=`'${r}'`:t==="bool"?o=V1(r):o=parseFloat(r.toFixed(c0)).toString(),Wl(o,e)}function V1(r){return r===0?"false":"true"}function $d(r,e,t,o,n,s=!0){let i=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){let g=ff(r);return[mf(g[0],0,t)]}return t==="bool"?[V1(r[0])]:[r[0].toString()]}if(l===1){if(a>B1){let d=pf*i,x=Array.from(r.slice(0,d)),y=Array.from(r.slice((a-pf)*i,a*i));return t==="complex64"&&(x=ff(x),y=ff(y)),["["+x.map((w,N)=>mf(w,n[N],t)).join(", ")+", ..., "+y.map((w,N)=>mf(w,n[a-pf+N],t)).join(", ")+"]"]}return["["+(t==="complex64"?ff(r):Array.from(r)).map((d,x)=>mf(d,n[x],t)).join(", ")+"]"]}let u=e.slice(1),c=o.slice(1),p=o[0]*i,m=[];if(a>B1){for(let g=0;g<pf;g++){let d=g*p,x=d+p;m.push(...$d(r.slice(d,x),u,t,c,n,!1))}m.push("...");for(let g=a-pf;g<a;g++){let d=g*p,x=d+p;m.push(...$d(r.slice(d,x),u,t,c,n,g===a-1))}}else for(let g=0;g<a;g++){let d=g*p,x=d+p;m.push(...$d(r.slice(d,x),u,t,c,n,g===a-1))}let f=l===2?",":"";m[0]="["+(a>0?m[0]+f:"");for(let g=1;g<m.length-1;g++)m[g]=" "+m[g]+f;let h=`,
`;for(let g=2;g<l;g++)h+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":h),m}function ff(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var ue=class{constructor(e,t,o){if(this.dtype=t,this.shape=e.slice(),this.size=Qt(e),o!=null){let n=o.length;D(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=o||rd(t,this.size),this.strides=ss(e)}set(e,...t){t.length===0&&(t=[0]),D(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let o=this.locToIndex(t);this.values[o]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let o=e[e.length-1];for(let n=0;n<e.length-1;++n)o+=this.strides[n]*e[n];return this.values[o]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let o=0;o<e.length-1;++o)t+=this.strides[o]*e[o];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let o=0;o<t.length-1;++o)t[o]=Math.floor(e/this.strides[o]),e-=t[o]*this.strides[o];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ln().makeTensor(this.values,this.shape,this.dtype)}},Ln=null,dp=null,FH=null;function G1(r){Ln=r}function W1(r){dp=r}function U1(r){FH=r}var te=class{constructor(e,t,o,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Qt(e),this.strides=ss(e),this.dataId=o,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return V(this,null,function*(){let e=yield this.data();return dp.buffer(this.shape,this.dtype,e)})}bufferSync(){return dp.buffer(this.shape,this.dtype,this.dataSync())}array(){return V(this,null,function*(){let e=yield this.data();return Gl(this.shape,e,this.dtype==="complex64")})}arraySync(){return Gl(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return V(this,null,function*(){this.throwIfDisposed();let e=Ln().read(this.dataId);if(this.dtype==="string"){let t=yield e;try{return t.map(o=>hp(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e})}dataToGPU(e){return this.throwIfDisposed(),Ln().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Ln().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>hp(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}bytes(){return V(this,null,function*(){this.throwIfDisposed();let e=yield Ln().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)})}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Ln().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return dp.print(this,e)}clone(){return this.throwIfDisposed(),dp.clone(this)}toString(e=!1){let t=this.dataSync();return M1(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),dp.cast(this,e)}variable(e=!0,t,o){return this.throwIfDisposed(),Ln().makeVariable(this,e,t,o)}};Object.defineProperty(te,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function P(){return nf("Tensor",()=>te)}P();var ki=class extends te{constructor(e,t,o,n){super(e.shape,e.dtype,e.dataId,n),this.trainable=t,this.name=o}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!la(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ln().disposeTensor(this),this.dataId=e.dataId,Ln().incRef(this,null)}dispose(){Ln().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(ki,Symbol.hasInstance,{value:r=>r instanceof te&&r.assign!=null&&r.assign instanceof Function});var H1=function(r){return r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64",r}(H1||{}),q1=function(r){return r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64",r}(q1||{}),K1=function(r){return r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64",r}(K1||{}),j1=function(r){return r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64",r}(j1||{}),OH={float32:K1,int32:H1,bool:q1,complex64:j1};function er(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return OH[r][e]}function au(r){return er(r,"int32")}function Ad(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function Dd(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function Gt(r,e){if(r.dtype===e.dtype)return[r,e];let t=er(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function _d(r){let e=[];return X1(r,e,new Set),e}function X1(r,e,t){if(r==null)return;if(r instanceof te){e.push(r);return}if(!LH(r))return;let o=r;for(let n in o){let s=o[n];t.has(s)||(t.add(s),X1(s,e,t))}}function LH(r){return Array.isArray(r)||typeof r=="object"}function p0(r){return r.kernelName!=null}var Rd=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},zH=(()=>{class r{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Rd}ready(){return V(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let o=0;o<t.length;o++){let n=t[o];if(yield this.initializeBackend(n).success){yield this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:o}=this.initializeBackendsAndReturnBest();if(o)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:o}=this.initializeBackend(t);if(o)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,o,n=1){return t in this.registryFactory?(cs(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:o,priority:n},!0)}setBackend(t){return V(this,null,function*(){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:o,asyncInit:n}=this.initializeBackend(t);if(!(n?yield o:o))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Ed(this.backendInstance),!0})}setupRegisteredKernels(){n0(this.backendName).forEach(o=>{o.setupFunc!=null&&o.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){n0(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let o=this.registryFactory[t];if(o==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let n=o.factory();if(n&&!(n instanceof Rs)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,i=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,cs(`Initialization of backend ${t} failed`),cs(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return cs(`Initialization of backend ${t} failed`),cs(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,o)=>this.registryFactory[o].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let o=0;o<t.length;o++){let n=t[o],{success:s,asyncInit:i}=this.initializeBackend(n);if(i||s)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,o){let n=this.state.tensorInfo.get(o),s=n.backend,i=this.readSync(o),a=s.refCount(o);s.disposeData(o,!0),n.backend=t,t.move(o,i,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,o){let n=null;if(o==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");o=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof o!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=o(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(t,o,n){t();try{let s=n();return o(),s}catch(s){throw o(),s}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(t){let o=$.runKernel(as,{x:t}),n={x:t},s=a=>({x:()=>{let l="float32",u={x:a},c={dtype:l};return $.runKernel(is,u,c)}}),i=[];return this.addTapeNode(this.state.activeScope.name,n,[o],s,i,{}),o}runKernel(t,o,n){if(this.backendName==null&&this.backend,!(r0(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:o,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,o,n){let s=this.backend.numDataIds(),i=0;n.forEach(u=>{i+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=s-o-i-a;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${t}'`)}runKernelFunc(t){let o,n=[],s=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u,c=p0(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(p0(t)){let{kernelName:g,inputs:d,attrs:x}=t;this.backendName==null&&this.backend;let y=r0(g,this.backendName);D(y!=null,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),l=()=>{let w=this.backend.numDataIds();u=y.kernelFunc({inputs:d,attrs:x,backend:this.backend});let N=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,w,N);let v=N.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(s){let k=this.getTensorsForGradient(g,d,v);n=this.saveTensorsForBackwardMode(k)}return v}}else{let{forwardFunc:g}=t,d=x=>{s&&(n=x.map(y=>this.keep(this.clone(y))))};l=()=>{let x=this.backend.numDataIds();u=this.tidy(()=>g(this.backend,d));let y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,x,y),y}}let{inputs:p,attrs:m}=t,f=p0(t)?null:t.backwardsFunc,h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?o=l():(h=this.profiler.profileKernel(c,p,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),o=h.outputs)}),s&&this.addTapeNode(c,p,o,f,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(g=>p[g]!=null?p[g].shape:null),outputShapes:o.map(g=>g.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(u)?o:o[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,o,n){let s=o0(t);if(s!=null){let i=s.inputsToSave||[],a=s.outputsToSave||[],l;s.saveAllInputs?(D(Array.isArray(o),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(o).map(c=>o[c])):l=i.map(c=>o[c]);let u=n.filter((c,p)=>a[p]);return l.concat(u)}return[]}makeTensor(t,o,n,s){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let i=t;n==="string"&&Nc(t[0])&&(i=t.map(u=>fp(u)));let a=s.write(i,o,n),l=new te(o,n,a,this.nextTensorId());if(this.trackTensor(l,s),n==="string"){let u=this.state.tensorInfo.get(a),c=Zw(i);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(t,o,n,s){n=n||"float32";let i={dataId:t,shape:o,dtype:n};return this.makeTensorFromTensorInfo(i,s)}makeTensorFromTensorInfo(t,o){let{dataId:n,shape:s,dtype:i}=t,a=new te(s,i,n,this.nextTensorId());return this.trackTensor(a,o),a}makeVariable(t,o=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==t.dtype&&(t=t.cast(s));let i=new ki(t,o,n,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,o){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*wc(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:o||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof ki||this.track(t)}incRef(t,o){this.trackTensor(t,o),this.backend.incRef(t.dataId)}removeDataId(t,o){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===o&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let o=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=o.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let n=t.size*wc(t.dtype);this.state.numBytes-=n}o.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,o.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let o=this.state.registeredVariables[t];this.disposeVariable(o)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}profile(t){return V(this,null,function*(){this.state.profiling=!0;let o=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-o,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=yield s.kernelTimeMs,s.extraInfo=yield s.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,o,n,s,i,a){let l={id:this.state.nextTapeNodeId++,kernelName:t,inputs:o,outputs:n,saved:i},u=o0(t);u!=null&&(s=u.gradFunc),s!=null&&(l.gradient=c=>(c=c.map((p,m)=>{if(p==null){let f=n[m],h=vc(f.size,f.dtype);return this.makeTensor(h,f.shape,f.dtype)}return p}),s(c.length>1?c:c[0],i,a))),this.state.activeTape.push(l)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let o={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(o.name=t),this.state.scopeStack.push(o),this.state.activeScope=o}endScope(t){let o=_d(t),n=new Set(o.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){let a=this.state.activeScope.track[i];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],o.forEach(i=>{!i.kept&&i.scopeId===s.id&&this.track(i)})}gradients(t,o,n,s=!1){if(D(o.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));D(i instanceof te,()=>"The result y returned by f() must be a tensor.");let a=P1(this.state.activeTape,o,i);if(!s&&a.length===0&&o.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let l={};l[i.id]=n??BH(i.shape),z1(l,a,c=>this.tidy(c),MH);let u=o.map(c=>l[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let p of c.saved)p.dispose()}),this.state.activeTape=null),{value:i,grads:u}})}customGrad(t){return D(Tc(t),()=>"The f passed in customGrad(f) must be a function."),(...o)=>{D(o.every(l=>l instanceof te),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};o.forEach((l,u)=>{s[u]=l});let i=(l,u)=>(n=t(...o,u),D(n.value instanceof te,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(Tc(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(l,u)=>{let c=n.gradFunc(l,u),p=Array.isArray(c)?c:[c];D(p.length===o.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(p.every(f=>f instanceof te),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return p.forEach((f,h)=>{m[h]=()=>f}),m};return this.runKernelFunc({forwardFunc:i,backwardsFunc:a,inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,o){return this.state.tensorInfo.get(t).backend.readToGPU(t,o)}time(t){return V(this,null,function*(){let o=iu(),n=yield this.backend.time(t);return n.wallMs=iu()-o,n})}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Rd;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return r.nextTensorId=0,r.nextVariableId=0,r})();function BH(r){let e=rf(Qt(r),"float32");return $.makeTensor(e,r,"float32")}function m0(){let r=t0();if(r._tfengine==null){let e=new of(r);r._tfengine=new zH(e)}return d1(r._tfengine.ENV),G1(()=>r._tfengine),r._tfengine}var $=m0();function MH(r,e){let t={a:r,b:e};return $.runKernel(Fn,t)}var nl={};le(nl,{isBrowser:()=>h0,isMobile:()=>WH,mockIsMobile:()=>GH});function VH(){return typeof navigator<"u"&&navigator!=null}var f0;function GH(r){f0=r}function WH(r){if(f0!==void 0)return f0;if(r||VH()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function h0(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var po=W();po.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});po.registerFlag("IS_BROWSER",()=>h0());po.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");po.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));po.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));po.registerFlag("PROD",()=>!1);po.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>po.getBool("DEBUG"));po.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);po.registerFlag("IS_TEST",()=>!1);po.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>po.getBool("DEBUG"));po.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);po.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);po.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function lu(r,e){let t=r;if(Mr(r))return e==="string"?[]:[r.length];if(Ad(r)){let n=r.channels||"RGBA";return[r.height,r.width*n.length]}else if(Dd(r))return[r.buffer.size/(e==null?4:wc(e))];if(!Array.isArray(r))return[];let o=[];for(;Array.isArray(t)||Mr(t)&&e!=="string";)o.push(t.length),t=t[0];return Array.isArray(r)&&W().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Z1(r,o,[]),o}function Z1(r,e,t){if(t=t||[],!Array.isArray(r)&&!Mr(r)){D(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}D(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),D(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let o=e.slice(1);for(let n=0;n<r.length;++n)Z1(r[n],o,t.concat(n))}function Y1(r,e,t,o){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${o}' must be ${r} tensor, but got ${e} tensor`)}}function E(r,e,t,o="numeric"){if(r instanceof P())return Y1(o,r.dtype,e,t),r;let n=ua(r);if(n!=="string"&&["bool","int32","float32"].indexOf(o)>=0&&(n=o),Y1(o,n,e,t),r==null||!Mr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}let s=lu(r,n);!Mr(r)&&!Array.isArray(r)&&(r=[r]);let a=n!=="string"?mp(r,n):ol(r,[],!0);return $.makeTensor(a,s,n)}function Fd(r,e,t,o="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>E(s,`${e}[${i}]`,t,o))}var UH="__op";function A(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],o=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+UH;let n=(...s)=>{$.startScope(t);try{let i=o(...s);return Ul(i)&&console.error("Cannot return a Promise inside of tidy."),$.endScope(i),i}catch(i){throw $.endScope(null),i}};return Object.defineProperty(n,"name",{value:t,configurable:!0}),n}function HH(r,e){let t=E(r,"real","complex"),o=E(e,"imag","complex");ed(t.shape,o.shape,`real and imag shapes, ${t.shape} and ${o.shape}, must match in call to tf.complex().`);let n={real:t,imag:o};return $.runKernel(Dc,n)}var Ho=A({complex_:HH});function sl(r,e,t,o){if(o==null)o=ua(r);else if(o==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Dd(r)||Ad(r)){if(o!=="float32"&&o!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return $.backend.createTensorFromGPUData(r,e||t,o)}if(!Mr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Sr(e);let n=Qt(e),s=Qt(t);D(n===s,()=>`Based on the provided shape, [${e}], the tensor should have ${n} values but has ${s}`);for(let i=0;i<t.length;++i){let a=t[i],l=i===t.length-1?a!==Qt(e.slice(i)):!0;D(t[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Mr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=o!=="string"?mp(r,o):ol(r,[],!0),$.makeTensor(r,e,o)}function qo(r,e,t){let o=lu(r,t);return sl(r,e,o,t)}var Ei={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Rr=class r{static join(e){return new r(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(o=>Mr(o)?o.buffer:o),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let o=0;o<e.length;o++){let n=e[o];o!==e.length-1&&n.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=t+n.byteLength;this.shards.push({buffer:n,start:t,end:s}),t=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);let o=this.findShardForByte(e);if(o===-1)throw new Error(`Could not find start shard for byte ${e}`);let n=t-e,s=new ArrayBuffer(n),i=new Uint8Array(s),a=0;for(let l=o;l<this.shards.length;l++){let u=this.shards[l],p=e+a-u.start,m=a,h=Math.min(t,u.end)-u.start,g=new Uint8Array(u.buffer,p,h-p);if(i.set(g,m),a+=g.length,t<u.end)break}return s}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(n){return e<n.start?-1:e>=n.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let o=qH(this.shards,t);return o===-1?-1:(this.previousShardIndex=o,this.previousShardIndex)}};function qH(r,e){let t=0,o=r.length;for(;t<=o;){let n=Math.floor((o-t)/2)+t,s=e(r[n]);if(s===0)return n;s<0?o=n:t=n+1}return-1}function KH(r){W().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}U1(KH);function un(){return $}function hf(){return $.memory()}function U(r,e){return $.tidy(r,e)}function Dt(r){_d(r).forEach(t=>t.dispose())}function mr(r){return $.keep(r)}function J1(){return $.backendName}function Od(r,e,t=1){return $.registerBackend(r,e,t)}function Ld(){return $.backend}var il=4;function eC(r,e){return V(this,null,function*(){let t=[],o=[],n=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<n.length;++i){let a=n[i],l=Array.isArray(r)?r[i].tensor:r[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);let u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(p=>V(this,null,function*(){let m=yield l.bytes(),f=m.reduce((d,x)=>d+x.length,0)+il*m.length,h=new Uint8Array(f),g=0;for(let d=0;d<m.length;d++){let x=m[d],y=new Uint8Array(new Uint32Array([x.length]).buffer);h.set(y,g),g+=il,h.set(x,g),g+=x.length}p(h)}));o.push(c)}else o.push(l.data());e!=null&&(u.group=e),t.push(u)}let s=yield Promise.all(o);return{data:YH(s),specs:t}})}function Pd(r,e){let t=new Rr(r),o={},n=0;for(let s of e){let i=jH(s,(a,l)=>t.slice(n+a,n+l));o[s.name]=rC(s,t.slice(n,n+i)),n+=i}return o}function jH(r,e){let t=Qt(r.shape),o;if("quantization"in r){let n=r.quantization;o=Ei[n.dtype]}else if(r.dtype==="string"){let n=0;for(let s=0;s<t;s++)n+=il+new Uint32Array(e(n,n+il))[0];return n}else o=Ei[r.dtype];return t*o}function XH(r,e){return V(this,null,function*(){let t=Qt(r.shape),o;if("quantization"in r){let n=r.quantization;o=Ei[n.dtype]}else if(r.dtype==="string"){let n=0;for(let s=0;s<t;s++)n+=il+new Uint32Array(yield e(n,n+il))[0];return n}else o=Ei[r.dtype];return t*o})}function rC(r,e){let t=r.name,o=r.dtype,n=r.shape,s=Qt(n),i,a=0;if("quantization"in r){let l=r.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${r.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${r.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let u=Ei[l.dtype],c=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(o==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(c.length);for(let p=0;p<c.length;p++){let m=c[p];i[p]=m*l.scale+l.min}}else if(l.dtype==="float16")i=tq()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(o==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(c.length);for(let p=0;p<c.length;p++){let m=c[p];i[p]=Math.round(m*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${o}`);a+=s*u}else if(o==="string"){let l=Qt(r.shape);i=[];for(let u=0;u<l;u++){let c=new Uint32Array(e.slice(a,a+il))[0];a+=il;let p=new Uint8Array(e.slice(a,a+c));i.push(p),a+=c}}else{let l=Ei[o];if(o==="float32")i=new Float32Array(e);else if(o==="int32")i=new Int32Array(e);else if(o==="bool")i=new Uint8Array(e);else if(o==="complex64"){i=new Float32Array(e);let u=new Float32Array(i.length/2),c=new Float32Array(i.length/2);for(let h=0;h<u.length;h++)u[h]=i[h*2],c[h]=i[h*2+1];let p=qo(u,n,"float32"),m=qo(c,n,"float32"),f=Ho(p,m);return p.dispose(),m.dispose(),f}else throw new Error(`Unsupported dtype in weight '${t}': ${o}`);a+=s*l}return qo(i,n,o)}function Q1(r,e,t){return V(this,null,function*(){let o=new Uint8Array(e);for(;o.byteLength<t;){let{done:n,value:s}=yield r.read();if(n&&s==null){let a=t-o.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}let i=new Uint8Array(o.length+s.byteLength);i.set(o,0),i.set(new Uint8Array(s),o.length),o=i}return o.buffer})}function d0(r,e){return V(this,null,function*(){let t={},o=r.getReader(),n=new ArrayBuffer(0);for(let s of e){let i=yield XH(s,(u,c)=>V(this,null,function*(){return n=yield Q1(o,n,c),n.slice(u,c)}));n=yield Q1(o,n,i);let a=n.slice(0,i);n=n.slice(i);let l=rC(s,a);if(t[s.name]=l,J1()==="webgpu"){let u=Ld();"uploadToGPU"in u&&Qt(l.shape)>=W().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return t})}function YH(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let o=new Uint8Array(e),n=0;return t.forEach(s=>{o.set(new Uint8Array(s.buffer),n),n+=s.byteLength}),o.buffer}var g0=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function tC(r){return g0?Buffer.byteLength(r,"utf8"):new Blob([r]).size}function oC(r){if(g0)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let o=0,n=e.length;o<n;o++)t+=String.fromCharCode(e[o]);return btoa(t)}function nC(r){if(g0){let o=Buffer.from(r,"base64");return o.buffer.slice(o.byteOffset,o.byteOffset+o.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let o=0;o<e.length;++o)t.set([e.charCodeAt(o)],o);return t.buffer}function sC(r){return Rr.join(r)}function x0(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function zd(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(t.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}function y0(r,e,t){let o={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(o.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");o.weightSpecs=e,o.weightData=t}return r.signature!=null&&(o.signature=r.signature),r.userDefinedMetadata!=null&&(o.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(o.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(o.initializerSignature=r.initializerSignature),o}function gp(r,e){return V(this,null,function*(){let t,o;return r.weightsManifest!=null&&([t,o]=yield e(r.weightsManifest)),y0(r,t,o)})}function ps(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:tC(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:tC(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:new Rr(r.weightData).byteLength}}function df(r){let e=[];for(let t of r)e.push(...t.weights);return e}function ZH(){let r=t=>{let o=t<<13,n=0;for(;(o&8388608)===0;)n-=8388608,o<<=1;return o&=-8388609,n+=947912704,o|n},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function JH(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function QH(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function tq(){let r=ZH(),e=JH(),t=QH();return o=>{let n=new ArrayBuffer(4*o.length),s=new Uint32Array(n);for(let i=0;i<o.length;i++){let a=o[i],l=r[t[a>>10]+(a&1023)]+e[a>>10];s[i]=l}return new Float32Array(n)}}var fr=class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(e){r.getInstance().saveRouters.push(e)}static registerLoadRouter(e){r.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return r.getHandlers(e,"save")}static getLoadHandlers(e,t){return r.getHandlers(e,"load",t)}static getHandlers(e,t,o){let n=[];return(t==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(i=>{let a=i(e,o);a!==null&&n.push(a)}),n}},iC=r=>fr.registerSaveRouter(r),aC=r=>fr.registerLoadRouter(r),lC=r=>fr.getSaveHandlers(r),uC=(r,e)=>fr.getLoadHandlers(r,e);var b0="tensorflowjs",w0=1,uu="models_store",al="model_info_store";function cC(){if(!W().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function N0(r){let e=r.result;e.createObjectStore(uu,{keyPath:"modelPath"}),e.createObjectStore(al,{keyPath:"modelPath"})}var cu=(()=>{class r{constructor(t){if(this.indexedDB=cC(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}save(t){return V(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)})}load(){return V(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(t,o){return new Promise((n,s)=>{let i=this.indexedDB.open(b0,w0);i.onupgradeneeded=()=>N0(i),i.onsuccess=()=>{let a=i.result;if(o==null){let l=a.transaction(uu,"readonly"),c=l.objectStore(uu).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=p=>(a.close(),s(c.error)),l.oncomplete=()=>a.close()}else{o.weightData=Rr.join(o.weightData);let l=ps(o),u=a.transaction(al,"readwrite"),c=u.objectStore(al),p;try{p=c.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(f){return s(f)}let m;p.onsuccess=()=>{m=a.transaction(uu,"readwrite");let f=m.objectStore(uu),h;try{h=f.put({modelPath:this.modelPath,modelArtifacts:o,modelArtifactsInfo:l})}catch(g){return s(g)}h.onsuccess=()=>n({modelArtifactsInfo:l}),h.onerror=g=>{c=u.objectStore(al);let d=c.delete(this.modelPath);d.onsuccess=()=>(a.close(),s(h.error)),d.onerror=x=>(a.close(),s(h.error))}},p.onerror=f=>(a.close(),s(p.error)),u.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},i.onerror=a=>s(i.error)})}}return r.URL_SCHEME="indexeddb://",r})();var pC=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(cu.URL_SCHEME)?eq(r.slice(cu.URL_SCHEME.length)):null;fr.registerSaveRouter(pC);fr.registerLoadRouter(pC);function eq(r){return new cu(r)}function rq(r){return r.startsWith(cu.URL_SCHEME)?r.slice(cu.URL_SCHEME.length):r}var Bd=class{constructor(){this.indexedDB=cC()}listModels(){return V(this,null,function*(){return new Promise((e,t)=>{let o=this.indexedDB.open(b0,w0);o.onupgradeneeded=()=>N0(o),o.onsuccess=()=>{let n=o.result,s=n.transaction(al,"readonly"),a=s.objectStore(al).getAll();a.onsuccess=()=>{let l={};for(let u of a.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},a.onerror=l=>(n.close(),t(a.error)),s.oncomplete=()=>n.close()},o.onerror=n=>t(o.error)})})}removeModel(e){return V(this,null,function*(){return e=rq(e),new Promise((t,o)=>{let n=this.indexedDB.open(b0,w0);n.onupgradeneeded=()=>N0(n),n.onsuccess=()=>{let s=n.result,i=s.transaction(al,"readwrite"),a=i.objectStore(al),l=a.get(e),u;l.onsuccess=()=>{if(l.result==null)return s.close(),o(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=a.delete(e),p=()=>{u=s.transaction(uu,"readwrite");let f=u.objectStore(uu).delete(e);f.onsuccess=()=>t(l.result.modelArtifactsInfo),f.onerror=h=>o(l.error)};c.onsuccess=p,c.onerror=m=>(p(),s.close(),o(l.error))}},l.onerror=c=>(s.close(),o(l.error)),i.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},n.onerror=s=>o(n.error)})})}};var $i="/",xp="tensorflowjs_models",mC="info",oq="model_topology",nq="weight_specs",sq="weight_data",iq="model_metadata";function fC(r){return{info:[xp,r,mC].join($i),topology:[xp,r,oq].join($i),weightSpecs:[xp,r,nq].join($i),weightData:[xp,r,sq].join($i),modelMetadata:[xp,r,iq].join($i)}}function hC(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function aq(r){let e=r.split($i);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join($i)}function lq(r){return r.startsWith(pu.URL_SCHEME)?r.slice(pu.URL_SCHEME.length):r}var pu=(()=>{class r{constructor(t){if(!W().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=fC(this.modelPath)}save(t){return V(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let o=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),s=ps(t),i=Rr.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,o),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,oC(i));let a={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw hC(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}})}load(){return V(this,null,function*(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let o={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);o.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);o.weightSpecs=s;let i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){let l=JSON.parse(i);o.format=l.format,o.generatedBy=l.generatedBy,o.convertedBy=l.convertedBy,l.signature!=null&&(o.signature=l.signature),l.userDefinedMetadata!=null&&(o.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(o.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(o.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(o.trainingConfig=l.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return o.weightData=nC(a),o})}}return r.URL_SCHEME="localstorage://",r})();var dC=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(pu.URL_SCHEME)?uq(r.slice(pu.URL_SCHEME.length)):null;fr.registerSaveRouter(dC);fr.registerLoadRouter(dC);function uq(r){return new pu(r)}var Md=class{constructor(){D(W().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return V(this,null,function*(){let e={},t=xp+$i,o=$i+mC;for(let n=0;n<this.LS.length;++n){let s=this.LS.key(n);if(s.startsWith(t)&&s.endsWith(o)){let i=aq(s);e[i]=JSON.parse(this.LS.getItem(s))}}return e})}removeModel(e){return V(this,null,function*(){e=lq(e);let t=fC(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let o=JSON.parse(this.LS.getItem(t.info));return hC(t),o})}};var yp="://",Pn=class r{constructor(){this.managers={}}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerManager(e,t){D(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(yp)&&(e=e.slice(0,e.indexOf(yp))),D(e.length>0,()=>"scheme must not be an empty string.");let o=r.getInstance();D(o.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),o.managers[e]=t}static getManager(e){let t=r.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(r.getInstance().managers)}};function Vd(r){if(r.indexOf(yp)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Pn.getSchemes().join(",")}`);return{scheme:r.split(yp)[0],path:r.split(yp)[1]}}function gC(r,e,t=!1){return V(this,null,function*(){D(r!==e,()=>`Old path and new path are the same: '${r}'`);let o=fr.getLoadHandlers(r);D(o.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),D(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${r}.`);let n=o[0],s=fr.getSaveHandlers(e);D(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),D(s.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${e}.`);let i=s[0],a=Vd(r).scheme,l=Vd(r).path,u=a===Vd(r).scheme,c=yield n.load();t&&u&&(yield Pn.getManager(a).removeModel(l));let p=yield i.save(c);return t&&!u&&(yield Pn.getManager(a).removeModel(l)),p.modelArtifactsInfo})}function xC(){return V(this,null,function*(){let r=Pn.getSchemes(),e={};for(let t of r){let o=yield Pn.getManager(t).listModels();for(let n in o){let s=t+yp+n;e[s]=o[n]}}return e})}function yC(r){return V(this,null,function*(){let e=Vd(r);return Pn.getManager(e.scheme).removeModel(e.path)})}function bC(r,e){return V(this,null,function*(){return gC(r,e,!1)})}function wC(r,e){return V(this,null,function*(){return gC(r,e,!0)})}var T0=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!W().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",o=>{if(o.source===window&&o.data.name===this.messageName){o.stopPropagation();let n=this.functionRefs[o.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return Cd(e)}};if(W().get("IS_BROWSER")){W().setPlatform("browser",new T0);try{Pn.registerManager(pu.URL_SCHEME,new Md)}catch{}try{Pn.registerManager(cu.URL_SCHEME,new Bd)}catch{}}var pq={importFetch:()=>S0()},C0;var I0=class{constructor(){this.util=v0(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return W().global.fetch!=null?W().global.fetch(e,t):(C0==null&&(C0=pq.importFetch()),C0(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};W().get("IS_NODE")&&!W().get("IS_BROWSER")&&W().setPlatform("node",new I0);function Nt(r,e="float32",t){return e=e||"float32",Sr(r),new ue(r,e,t)}function mq(r,e){let t=E(r,"x","cast");if(!Yw(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let o={x:t},n={dtype:e};return $.runKernel(is,o,n)}var nt=A({cast_:mq});function fq(r){let t={x:E(r,"x","clone","string_or_numeric")};return $.runKernel(as,t)}var Io=A({clone_:fq});function TC(r,e=!1){console.log(r.toString(e))}m0();var hq={buffer:Nt,cast:nt,clone:Io,print:TC};W1(hq);function dq(r,e){let t=E(r,"a","add"),o=E(e,"b","add");[t,o]=Gt(t,o);let n={a:t,b:o};return $.runKernel(Fn,n)}var tt=A({add_:dq});function gq(r,e){let t=E(r,"a","floorDiv"),o=E(e,"b","floorDiv");[t,o]=Gt(t,o);let n={a:t,b:o};return $.runKernel(Js,n)}var Gd=A({floorDiv_:gq});function xq(r,e){let t=E(r,"a","div"),o=E(e,"b","div");if([t,o]=Gt(t,o),t.dtype==="int32"&&o.dtype==="int32")return Gd(t,o);let n={a:t,b:o},s={};return $.runKernel(qs,n,s)}var lt=A({div_:xq});function yq(r,e){let t=E(r,"a","mul"),o=E(e,"b","mul");[t,o]=Gt(t,o);let n={a:t,b:o};return $.runKernel(li,n)}var z=A({mul_:yq});function bq(r){let e=E(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return $.runKernel(xa,t)}else{let t={x:e};return $.runKernel(ca,t)}}var rr=A({abs_:bq});function wq(r){let t={x:E(r,"x","acos")};return $.runKernel(Os,t)}var k0=A({acos_:wq});function Nq(r){let t={x:E(r,"x","acosh")};return $.runKernel(Ls,t)}var E0=A({acosh_:Nq});function Tq(r,e=null,t=!1){let n={x:E(r,"x","all","bool")},s={axis:e,keepDims:t};return $.runKernel(Ic,n,s)}var gf=A({all_:Tq});function Sq(r,e=null,t=!1){let n={x:E(r,"x","any","bool")},s={axis:e,keepDims:t};return $.runKernel(kc,n,s)}var wp=A({any_:Sq});function vq(r,e=0){let o={x:E(r,"x","argMax")},n={axis:e};return $.runKernel(pa,o,n)}var Ai=A({argMax_:vq});function Cq(r,e=0){let o={x:E(r,"x","argMin")},n={axis:e};return $.runKernel(ma,o,n)}var SC=A({argMin_:Cq});function Iq(r){let t={x:E(r,"x","asin")};return $.runKernel(Ps,t)}var $0=A({asin_:Iq});function kq(r){let t={x:E(r,"x","asinh")};return $.runKernel(zs,t)}var A0=A({asinh_:kq});function Eq(r){let t={x:E(r,"x","atan")};return $.runKernel(Bs,t)}var D0=A({atan_:Eq});function $q(r,e){let t=E(r,"a","atan2"),o=E(e,"b","atan2");[t,o]=Gt(t,o);let n={a:t,b:o};return $.runKernel(Vs,n)}var vC=A({atan2_:$q});function Aq(r){let t={x:E(r,"x","atanh")};return $.runKernel(Ms,t)}var _0=A({atanh_:Aq});function Dq(r,e,t,o,n="NHWC",s){let i=r[3],a=[...e,i],l=IC(n);return fu(r,a,t,s,o,null,null,l)}function F0(r,e,t,o,n,s,i="channelsLast"){let[a,l]=xf(e),u;if(i==="channelsLast")u=[a,l,r[3],r[3]];else if(i==="channelsFirst")u=[a,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return fu(r,u,t,o,n,s,!1,i)}function _q(r,e,t,o,n,s,i="NDHWC"){let[a,l,u]=R0(e),c,p;if(i==="NDHWC")p="channelsLast",c=[a,l,u,r[4],r[4]];else if(i==="NCDHW")p="channelsFirst",c=[a,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return CC(r,c,t,o,n,!1,p,s)}function fu(r,e,t,o,n,s,i=!1,a="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p]=r;else if(a==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[m,f,,h]=e,[g,d]=xf(t),[x,y]=xf(o),w=Np(m,x),N=Np(f,y),{padInfo:v,outHeight:k,outWidth:R}=Oq(n,u,c,g,d,w,N,s,a),O=i?h*p:h,L;return a==="channelsFirst"?L=[l,O,k,R]:a==="channelsLast"&&(L=[l,k,R,O]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:p,outHeight:k,outWidth:R,outChannels:O,padInfo:v,strideHeight:g,strideWidth:d,filterHeight:m,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:N,dilationHeight:x,dilationWidth:y,inShape:r,outShape:L,filterShape:e}}function CC(r,e,t,o,n,s=!1,i="channelsLast",a){let[l,u,c,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p,m]=r;else if(i==="channelsFirst")[l,m,u,c,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[f,h,g,,d]=e,[x,y,w]=R0(t),[N,v,k]=R0(o),R=Np(f,N),O=Np(h,v),L=Np(g,k),{padInfo:M,outDepth:H,outHeight:q,outWidth:K}=Lq(n,u,c,p,x,y,w,R,O,L,a),X=s?d*m:d,Y;return i==="channelsFirst"?Y=[l,X,H,q,K]:i==="channelsLast"&&(Y=[l,H,q,K,X]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:p,inChannels:m,outDepth:H,outHeight:q,outWidth:K,outChannels:X,padInfo:M,strideDepth:x,strideHeight:y,strideWidth:w,filterDepth:f,filterHeight:h,filterWidth:g,effectiveFilterDepth:R,effectiveFilterHeight:O,effectiveFilterWidth:L,dilationDepth:N,dilationHeight:v,dilationWidth:k,inShape:r,outShape:Y,filterShape:e}}function Rq(r,e,t,o,n){o==null&&(o=O0(r,e,t));let s=r[0],i=r[1],a=yf((s-e+2*o)/t+1,n),l=yf((i-e+2*o)/t+1,n);return[a,l]}function Fq(r,e,t,o,n,s){n==null&&(n=O0(r,e[0],o[0]));let i=[0,0,0,t];for(let a=0;a<3;a++)r[a]+2*n>=e[a]&&(i[a]=yf((r[a]-e[a]+2*n)/o[a]+1,s));return i}function O0(r,e,t,o=1){let n=Np(e,o);return Math.floor((r[0]*(t-1)-t+n)/2)}function xf(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function R0(r){return typeof r=="number"?[r,r,r]:r}function Np(r,e){return e<=1?r:r+(r-1)*(e-1)}function Oq(r,e,t,o,n,s,i,a,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=Rq([e,t],s,o,r,a);c=f[0],p=f[1]}else if(r==="same"){c=Math.ceil(e/o),p=Math.ceil(t/n);let m=Math.max(0,(c-1)*o+s-e),f=Math.max(0,(p-1)*n+i-t),h=Math.floor(m/2),g=m-h,d=Math.floor(f/2),x=f-d;u={top:h,bottom:g,left:d,right:x,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-s+1)/o),p=Math.ceil((t-i+1)/n);else if(typeof r=="object"){let m=l==="channelsLast"?r[1][0]:r[2][0],f=l==="channelsLast"?r[1][1]:r[2][1],h=l==="channelsLast"?r[2][0]:r[3][0],g=l==="channelsLast"?r[2][1]:r[3][1];u={top:m,bottom:f,left:h,right:g,type:m===0&&f===0&&h===0&&g===0?"VALID":"EXPLICIT"},c=yf((e-s+m+f)/o+1,a),p=yf((t-i+h+g)/n+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function Lq(r,e,t,o,n,s,i,a,l,u,c){let p,m,f,h;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let d=Fq([e,t,o,1],[a,l,u],1,[n,s,i],r,c);m=d[0],f=d[1],h=d[2]}else if(r==="same"){m=Math.ceil(e/n),f=Math.ceil(t/s),h=Math.ceil(o/i);let g=(m-1)*n+a-e,d=(f-1)*s+l-t,x=(h-1)*i+u-o,y=Math.floor(g/2),w=g-y,N=Math.floor(d/2),v=d-N,k=Math.floor(x/2),R=x-k;p={top:N,bottom:v,left:k,right:R,front:y,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:h}}function yf(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ko(r){let[e,t,o]=xf(r);return e===1&&t===1&&o===1}function Cr(r,e){return Ko(r)||Ko(e)}function ms(r){return xf(r).every(e=>e>0)}function IC(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function ye(r,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")D(Fs(e),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(o=>{o.forEach(n=>{D(Fs(n),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${n}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${e}`)}}function Pq(r,e){let o={x:E(r,"x","reshape","string_or_numeric")},n={shape:e};return $.runKernel(Wa,o,n)}var B=A({reshape_:Pq});function zq(r,e,t,o,n){let s=E(r,"x","avgPool","float32"),i=1;D(Cr(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=s,l=!1;s.rank===3&&(l=!0,a=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),ye("avgPool",o,n);let u={x:a},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n},p=$.runKernel(fa,u,c);return p=nt(p,s.dtype),l?B(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var hu=A({avgPool_:zq});function Bq(r,e,t,o,n,s="NDHWC"){let i=E(r,"x","avgPool3d","float32"),a=i,l=!1;i.rank===4&&(l=!0,a=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),D(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),D(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),ye("avgPool3d",o,n);let u={x:a},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n,dataFormat:s},p=$.runKernel(ha,u,c);return p=nt(p,a.dtype),l?B(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var L0=A({avgPool3d_:Bq});function Mq(r,e=0){D(r.length>=1,()=>"Pass at least one tensor to concat");let t=Fd(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return Io(t[0]);let o=t,n={axis:e};return $.runKernel(ya,o,n)}var Te=A({concat_:Mq});function Vq(r,e,t=!1,o=!1){let n=E(r,"a","matMul"),s=E(e,"b","matMul");[n,s]=Gt(n,s);let i={a:n,b:s},a={transposeA:t,transposeB:o};return $.runKernel(da,i,a)}var Xt=A({matMul_:Vq});function Gq(r){let t={x:E(r,"x","sigmoid","float32")};return $.runKernel(bi,t)}var cn=A({sigmoid_:Gq});function Wq(r,e,t){let o=E(r,"x","slice","string_or_numeric");if(o.rank===0)throw new Error("Slicing scalar is not possible");let n={x:o},s={begin:e,size:t};return $.runKernel(ja,n,s)}var qt=A({slice_:Wq});function Uq(r){let t={x:E(r,"x","tanh","float32")};return $.runKernel(Ci,t)}var du=A({tanh_:Uq});function Hq(r,e,t){let o=E(r,"x","batchToSpaceND"),n=e.reduce((a,l)=>a*l);D(o.rank>=1+e.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${e.length}`),D(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),D(o.shape[0]%n===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${n}`);let s={x:o},i={blockShape:e,crops:t};return $.runKernel(ga,s,i)}var Tp=A({batchToSpaceND_:Hq});function kC(r){let e;return r.rank===0||r.rank===1?e=B(r,[1,1,1,r.size]):r.rank===2?e=B(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=B(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function qq(r,e,t,o,n,s){s==null&&(s=.001);let i=E(r,"x","batchNorm"),a=E(e,"mean","batchNorm"),l=E(t,"variance","batchNorm"),u;n!=null&&(u=E(n,"scale","batchNorm"));let c;o!=null&&(c=E(o,"offset","batchNorm")),D(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:kC(i),scale:u,offset:c,mean:a,variance:l},f={varianceEpsilon:s},h=$.runKernel(Ia,m,f);return B(h,i.shape)}var ll=A({batchNorm_:qq});function Kq(r,e,t,o,n,s){let i=E(r,"x","batchNorm"),a=E(e,"mean","batchNorm"),l=E(t,"variance","batchNorm"),u;n!=null&&(u=E(n,"scale","batchNorm"));let c;return o!=null&&(c=E(o,"offset","batchNorm")),D(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),D(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),ll(i,a,l,c,u,s)}var P0=A({batchNorm2d_:Kq});function jq(r,e,t,o,n,s){let i=E(r,"x","batchNorm"),a=E(e,"mean","batchNorm"),l=E(t,"variance","batchNorm"),u;n!=null&&(u=E(n,"scale","batchNorm"));let c;return o!=null&&(c=E(o,"offset","batchNorm")),D(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),D(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),ll(i,a,l,c,u,s)}var z0=A({batchNorm3d_:jq});function Xq(r,e,t,o,n,s){let i=E(r,"x","batchNorm"),a=E(e,"mean","batchNorm"),l=E(t,"variance","batchNorm"),u;n!=null&&(u=E(n,"scale","batchNorm"));let c;return o!=null&&(c=E(o,"offset","batchNorm")),D(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),D(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),ll(i,a,l,c,u,s)}var B0=A({batchNorm4d_:Xq});function Yq(r,e,t){let o=E(r,"x","bincount"),n=E(e,"weights","bincount");D(o.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(n.size===o.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${n.shape}.`);let s={x:o,weights:n},i={size:t};return $.runKernel(Ac,s,i)}var EC=A({bincount_:Yq});function Zq(r,e){let t=E(r,"broadcastTo","x"),o=t.shape;if(Sr(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=B(t,u)}let n=t.shape,s=Array.from(e);for(let u=e.length-1;u>=0;u--)if(n[u]===e[u])s[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${e}].`);if(s.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Io(t);let a={x:t},l={reps:s};return $.runKernel(ls,a,l)}var Di=A({broadcastTo_:Zq});function Jq(r){let t={x:E(r,"x","ceil","float32")};return $.runKernel(Gs,t)}var M0=A({ceil_:Jq});function _i(r,e,t){Sr(r),t=t||ua(e);let o={shape:r,value:e,dtype:t};return $.runKernel(Uc,{},o)}function Qq(r,e,t){let o=E(r,"x","clipByValue");if(D(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return _i(o.shape,e,o.dtype);let n={x:o},s={clipValueMin:e,clipValueMax:t};return $.runKernel(Ws,n,s)}var Ir=A({clipByValue_:Qq});function tK(r){return Te(r,0)}var V0=A({concat1d_:tK});function eK(r,e){return Te(r,e)}var G0=A({concat2d_:eK});function rK(r,e){return Te(r,e)}var W0=A({concat3d_:rK});function oK(r,e){return Te(r,e)}var U0=A({concat4d_:oK});function nK(r,e,t,o,n="NHWC",s=[1,1],i){let a=E(r,"x","conv2d","float32"),l=E(e,"filter","conv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=B(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),ye("conv2d",o,i);let p=n==="NHWC"?u.shape[3]:u.shape[1];D(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),D(Cr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),D(ms(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),D(ms(t),()=>"Error in conv2D: Strides should be larger than 0.");let m={x:u,filter:l},f={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i},h=$.runKernel(ba,m,f);return c?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var ko=A({conv2d_:nK});function sK(r,e,t,o,n="NWC",s=1,i){let a=E(r,"x","conv1d"),l=E(e,"filter","conv1d"),u=a,c=!1;a.rank===2&&(c=!0,u=B(a,[1,a.shape[0],a.shape[1]])),D(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),D(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),ye("conv1d",o,i),D(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),D(Cr(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),D(ms(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),D(ms(t),()=>"Error in conv1D: Stride should be larger than 0."),D(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=B(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=B(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=ko(m,p,[1,t],o,"NHWC",[1,s],i);return c?B(d,[d.shape[2],d.shape[3]]):B(d,[d.shape[0],d.shape[2],d.shape[3]])}var bf=A({conv1d_:sK});function iK(r,e,t,o,n,s="NHWC",i){D(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let a=r,l=e,u=!1;e.rank===3&&(u=!0,l=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,r[0],r[1],r[2]]),D(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),D(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),D(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let c=s==="NHWC"?a[3]:a[1],p=s==="NHWC"?l.shape[3]:l.shape[1];D(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),D(p===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[3]}.`),ye("conv2dDerInput",n,i);let m={dy:l,filter:t},f={strides:o,pad:n,dataFormat:s,dimRoundingMode:i,inputShape:a},h=$.runKernel(wa,m,f);return u?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Sp=A({conv2DBackpropInput_:iK});function aK(r,e,t,o,n,s){let i=E(r,"x","conv2dTranspose"),a=E(e,"filter","conv2dTranspose");return Sp(t,i,a,o,n,"NHWC",s)}var wf=A({conv2dTranspose_:aK});function lK(r,e,t,o,n="NDHWC",s=[1,1,1]){let i=E(r,"x","conv3d"),a=E(e,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),D(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),D(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),D(Cr(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),D(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`),D(ms(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),D(ms(t),()=>"Error in conv3D: Strides should be larger than 0.");let c={x:l,filter:a},p={strides:t,pad:o,dataFormat:n,dilations:s},m=$.runKernel(Na,c,p);return u?B(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var H0=A({conv3d_:lK});function uK(r,e,t,o,n){D(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,i=e,a=!1;e.rank===4&&(a=!0,i=B(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let l=s[4],u=i.shape[4];D(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),D(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),D(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),D(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),D(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);let c={dy:i,filter:t},p={pad:n,strides:o,inputShape:s},m=$.runKernel(Fc,c,p);return a?B(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Wd=A({conv3DBackpropInput_:uK});function cK(r,e,t,o,n){let s=E(r,"x","conv3dTranspose"),i=E(e,"filter","conv3dTranspose");return Wd(t,s,i,o,n)}var q0=A({conv3dTranspose_:cK});function pK(r){let t={x:E(r,"x","cos","float32")};return $.runKernel(Us,t)}var gu=A({cos_:pK});function mK(r){let t={x:E(r,"x","cosh","float32")};return $.runKernel(Hs,t)}var Nf=A({cosh_:mK});function fK(r,e=0,t=!1,o=!1){let s={x:E(r,"x","cumprod")},i={axis:e,exclusive:t,reverse:o};return $.runKernel(Oc,s,i)}var Tf=A({cumprod_:fK});function hK(r,e=0,t=!1,o=!1){let s={x:E(r,"x","cumsum")},i={axis:e,exclusive:t,reverse:o};return $.runKernel(Ta,s,i)}var Ud=A({cumsum_:hK});function dK(r,e,t,o=!1){let n=E(r,"x","denseBincount"),s=E(e,"weights","denseBincount");D(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),D(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(s.size===n.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${s.shape}.`);let i={x:n,weights:s},a={size:t,binaryOutput:o};return $.runKernel(Pc,i,a)}var Hd=A({denseBincount_:dK});function gK(r,e,t="NHWC"){let o=E(r,"x","depthToSpace","float32"),n=t==="NHWC"?o.shape[1]:o.shape[2],s=t==="NHWC"?o.shape[2]:o.shape[3],i=t==="NHWC"?o.shape[3]:o.shape[1];D(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),D(n*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${e}  for depthToSpace with input shape
    ${o.shape}`),D(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${o.shape}`),D(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${o.shape}`);let a={x:o},l={blockSize:e,dataFormat:t};return $.runKernel(zc,a,l)}var $C=A({depthToSpace_:gK});function xK(r,e,t,o,n="NHWC",s=[1,1],i){let a=E(r,"x","depthwiseConv2d","float32"),l=E(e,"filter","depthwiseConv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=B(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=n==="NHWC"?u.shape[3]:u.shape[1];D(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),ye("depthwiseConv2d",o,i);let m={x:u,filter:l},f={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i},h=$.runKernel(Sa,m,f);return c?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Ri=A({depthwiseConv2d_:xK});function yK(r,e,t,o,n=[1,1],s="NHWC"){let i=E(r,"x","dilation2d"),a=E(e,"filter","dilation2d");D(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),D(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),D(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=B(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),D(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);let c={x:l,filter:a},p={strides:t,pad:o,dilations:n},m=$.runKernel(va,c,p);return u?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var AC=A({dilation2d_:yK});var Eo={};le(Eo,{assertAndGetBroadcastShape:()=>Rt,getBroadcastDims:()=>DC,getReductionAxes:()=>fe});function DC(r,e){let t=r.length,o=[];for(let n=0;n<t;n++){let s=t-1-n,i=r[s]||1;(e[e.length-1-n]||1)>1&&i===1&&o.unshift(s)}return o}function fe(r,e){let t=[];for(let o=0;o<e.length;o++){let n=r[r.length-o-1],s=e.length-o-1,i=e[s];(n==null||n===1&&i>1)&&t.unshift(s)}return t}function Rt(r,e){let t=Math.max(r.length,e.length),o=new Array(t);for(let n=0;n<t;n++){let s=r[r.length-n-1];s==null&&(s=1);let i=e[e.length-n-1];if(i==null&&(i=1),s===1)o[t-n-1]=i;else if(i===1)o[t-n-1]=s;else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(a)}else o[t-n-1]=s}return o}function bK(r,e){let t=E(r,"a","equal","string_or_numeric"),o=E(e,"b","equal","string_or_numeric");[t,o]=Gt(t,o),Rt(t.shape,o.shape);let n={a:t,b:o};return $.runKernel(Hl,n)}var Xr=A({equal_:bK});function wK(r,e,t){let o=E(e,"a","where"),n=E(t,"b","where"),s=E(r,"condition","where","bool"),i=Rt(Rt(s.shape,o.shape),n.shape),a=Di(s,i),l=Di(o,i),u=Di(n,i),c={condition:a,t:l,e:u};return $.runKernel(Ka,c)}var Se=A({where_:wK});function NK(r){let t={x:E(r,"x","zerosLike")};return $.runKernel(el,t)}var Tt=A({zerosLike_:NK});function TK(r,e){let t=E(r,"a","div"),o=E(e,"b","div");[t,o]=Gt(t,o);let n=lt(t,o),s=Tt(n),i=Xr(o,s);return Se(i,s,n)}var _C=A({divNoNan_:TK});function SK(r,e){let t=E(r,"t1","dot"),o=E(e,"t2","dot");D((t.rank===1||t.rank===2)&&(o.rank===1||o.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${o.rank}.`);let n=t.rank===1?t.size:t.shape[1],s=o.rank===1?o.size:o.shape[0];if(D(n===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${s}.`),t.rank===1&&o.rank===1){let i=B(t,[1,-1]),a=B(o,[-1,1]),l=Xt(i,a);return B(l,[])}else if(t.rank===1&&o.rank===2){let i=B(t,[1,-1]),a=B(o,[o.shape[0],o.shape[1]]),l=Xt(i,a);return B(l,[l.size])}else if(t.rank===2&&o.rank===1){let i=B(o,[-1,1]),a=Xt(t,i);return B(a,[a.size])}else{let i=B(o,[o.shape[0],o.shape[1]]);return Xt(t,i)}}var RC=A({dot_:SK});function vK(r,...e){let t=e.map((n,s)=>E(n,`tensors${s}`,"einsum")),o={equation:r};return $.runKernel(Vc,t,o)}var vp=A({einsum_:vK});function CK(r){let t={x:E(r,"x","elu","float32")};return $.runKernel(Ks,t)}var Fi=A({elu_:CK});function IK(r){let e=E(r,"x","erf");D(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=nt(e,"float32"));let t={x:e};return $.runKernel(js,t)}var Sf=A({erf_:IK});function K0(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function FC(r,e,t){let o=r.length+e.length,n=[],s=0,i=0;for(let a=0;a<o;a++)t.indexOf(a)===-1?n.push(r[s++]):n.push(e[i++]);return n}function j0(r,e){let t=[],o=r.length;for(let s=0;s<o;s++)e.indexOf(s)===-1&&t.push(r[s]);let n=e.map(s=>r[s]);return[t,n]}function fs(r,e){let t=e.map(o=>1);return FC(r,t,e)}function kK(r,e,t){D(K0(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function X0(r,e){if(K0(r,e))return null;let t=[];for(let o=0;o<e;++o)r.indexOf(o)===-1&&t.push(o);return r.forEach(o=>t.push(o)),t}function vf(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function EK(r,e){let t=[];for(let o=e-r;o<e;++o)t.push(o);return t}function $K(r,e=null,t=!1){let n={x:E(r,"x","max")},s={reductionIndices:e,keepDims:t};return $.runKernel(Aa,n,s)}var kr=A({max_:$K});function AK(r,e=null,t=!1){let n={x:E(r,"x","min")},s={axis:e,keepDims:t};return $.runKernel(Fa,n,s)}var ul=A({min_:AK});function DK(r,e){let t=E(r,"base","pow"),o=E(e,"exp","pow");[t,o]=Gt(t,o);let n={a:t,b:o};return $.runKernel(ui,n)}var mo=A({pow_:DK});function Ct(r,e){if((Mr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Mr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sl(r,[],[],e)}function _K(r){let t={x:E(r,"x","sqrt","float32")};return $.runKernel(Ni,t)}var he=A({sqrt_:_K});function RK(r){let e=E(r,"x","square"),t={};return $.runKernel("Square",{x:e},t)}var Vt=A({square_:RK});function FK(r,e=null,t=!1){let o=E(r,"x","sum");o.dtype==="bool"&&(o=nt(o,"int32"));let n={x:o},s={axis:e,keepDims:t};return $.runKernel(Xa,n,s)}var ft=A({sum_:FK});function OK(r,e="euclidean",t=null,o=!1){r=E(r,"x","norm");let n=OC(r,e,t),s=n.shape;if(o){let i=sr(t,r.shape);s=fs(n.shape,i)}return B(n,s)}function OC(r,e,t=null){if(r.rank===0)return rr(r);if(r.rank!==1&&t===null)return OC(B(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return ft(rr(r),t);if(e===1/0)return kr(rr(r),t);if(e===-1/0)return ul(rr(r),t);if(e==="euclidean"||e===2)return he(ft(mo(rr(r),Ct(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return kr(ft(rr(r),t[0]),t[1]-1);if(e===1/0)return kr(ft(rr(r),t[1]),t[0]);if(e===-1/0)return ul(ft(rr(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return he(ft(Vt(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var zn=A({norm_:OK});function LK(r,e=null,t=!1){return zn(r,"euclidean",e,t)}var LC=A({euclideanNorm_:LK});function PK(r){let t={x:E(r,"x","exp")};return $.runKernel(Xs,t)}var hr=A({exp_:PK});function zK(r,e=0){let t=E(r,"x","expandDims","string_or_numeric");D(e<=t.rank,()=>"Axis must be <= rank of the tensor");let o={input:t},n={dim:e};return $.runKernel(Ca,o,n)}var Ze=A({expandDims_:zK});function BK(r){let t={x:E(r,"x","expm1")};return $.runKernel(Ys,t)}var Z0=A({expm1_:BK});function MK(r,e){let t=E(r,"x","tile","string_or_numeric");D(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let o={x:t},n={reps:e};return $.runKernel(ls,o,n)}var Fr=A({tile_:MK});function VK(r,e,t,o="float32"){e==null&&(e=r);let n=Nt([r,e],o),s=r<=e?r:e;for(let a=0;a<s;++a)n.set(1,a,a);let i=B(n.toTensor(),[r,e]);if(t==null)return i;if(t.length===1)return Fr(Ze(i,0),[t[0],1,1]);if(t.length===2)return Fr(Ze(Ze(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return Fr(Ze(Ze(Ze(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Cp=A({eye_:VK});function GK(r){let t={x:E(r,"x","floor","float32")};return $.runKernel(Zs,t)}var Oi=A({floor_:GK});function WK(r,e,t=0,o=0){let n=E(r,"x","gather"),s=E(e,"indices","gather","int32"),i={x:n,indices:s},a={axis:t,batchDims:o};return $.runKernel(ka,i,a)}var xu=A({gather_:WK});function UK(r,e){let t=E(r,"a","greater","string_or_numeric"),o=E(e,"b","greater","string_or_numeric");[t,o]=Gt(t,o),Rt(t.shape,o.shape);let n={a:t,b:o};return $.runKernel(ql,n)}var Ve=A({greater_:UK});function HK(r,e){let t=E(r,"a","greaterEqual","string_or_numeric"),o=E(e,"b","greaterEqual","string_or_numeric");[t,o]=Gt(t,o),Rt(t.shape,o.shape);let n={a:t,b:o};return $.runKernel(Qs,n)}var fo=A({greaterEqual_:HK});function qK(r){let t={input:E(r,"input","imag")};return $.runKernel(Kc,t)}var Ip=A({imag_:qK});function KK(r){let t={x:E(r,"x","isFinite")};return $.runKernel(ti,t)}var J0=A({isFinite_:KK});function jK(r){let t={x:E(r,"x","isInf")};return $.runKernel(ei,t)}var Q0=A({isInf_:jK});function XK(r){let t={x:E(r,"x","isNaN")};return $.runKernel(ri,t)}var tN=A({isNaN_:XK});function YK(r,e=.2){let o={x:E(r,"x","leakyRelu")},n={alpha:e};return $.runKernel(Ea,o,n)}var yu=A({leakyRelu_:YK});function ZK(r,e){let t=E(r,"a","less","string_or_numeric"),o=E(e,"b","less","string_or_numeric");[t,o]=Gt(t,o),Rt(t.shape,o.shape);let n={a:t,b:o};return $.runKernel(Kl,n)}var bu=A({less_:ZK});function JK(r,e){let t=E(r,"a","lessEqual","string_or_numeric"),o=E(e,"b","lessEqual","string_or_numeric");[t,o]=Gt(t,o),Rt(t.shape,o.shape);let n={a:t,b:o};return $.runKernel(jl,n)}var pn=A({lessEqual_:JK});function QK(r,e=5,t=1,o=1,n=.5){let s=E(r,"x","localResponseNormalization");D(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),D(Fs(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=B(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:e,bias:t,alpha:o,beta:n},c=$.runKernel($a,l,u);return a?B(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var PC=A({localResponseNormalization_:QK});function tj(r){let t={x:E(r,"x","log","float32")};return $.runKernel(oi,t)}var Yr=A({log_:tj});function ej(r){let t={x:E(r,"x","log1p")};return $.runKernel(ni,t)}var Cf=A({log1p_:ej});function eN(r,e){D(Tc(r),()=>"The f passed in variableGrads(f) must be a function"),D(e==null||Array.isArray(e)&&e.every(u=>u instanceof ki),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let u in $.registeredVariables)e.push($.registeredVariables[u])}let o=t?e.filter(u=>!u.trainable):null,n=e.length;e=e.filter(u=>u.trainable),D(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let s=!0,{value:i,grads:a}=$.gradients(r,e,null,s);D(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return e.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),o?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function Xo(r){return $.customGrad(r)}function rj(r){let t={x:E(r,"x","neg")};return $.runKernel(La,t)}var Yt=A({neg_:rj});function oj(r){let t={x:E(r,"x","softplus")};return $.runKernel(wi,t)}var hs=A({softplus_:oj});function nj(r){let e=E(r,"x","logSigmoid");return Xo(o=>({value:Yt(hs(Yt(o))),gradFunc:i=>z(i,cn(Yt(o)))}))(e)}var rN=A({logSigmoid_:nj});function sj(r,e){let t=E(r,"a","sub"),o=E(e,"b","sub");[t,o]=Gt(t,o);let n={a:t,b:o};return $.runKernel(Si,n)}var gt=A({sub_:sj});function ij(r,e=-1){let t=E(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Xo((n,s)=>{let a=kr(n,e,!0),l=gt(n,a),u=gt(nt(l,"float32"),Yr(ft(hr(l),e,!0)));return s([u]),{value:u,gradFunc:(p,m)=>{let[f]=m,h=!0,g=hr(f);return gt(p,z(ft(p,e,h),g))}}})(t)}var If=A({logSoftmax_:ij});function aj(r,e=null,t=!1){let o=E(r,"x","logSumExp"),n=sr(e,o.shape),s=kr(o,n,!0),i=gt(o,s),a=hr(i),l=ft(a,n),u=Yr(l),c=tt(B(s,u.shape),u);if(t){let p=fs(c.shape,n);return B(c,p)}return c}var kf=A({logSumExp_:aj});function lj(r,e){let t=E(r,"a","logicalAnd","bool"),o=E(e,"b","logicalAnd","bool");Rt(t.shape,o.shape);let n={a:t,b:o};return $.runKernel(Xl,n)}var Vr=A({logicalAnd_:lj});function uj(r){let t={x:E(r,"x","logicalNot","bool")};return $.runKernel(Yl,t)}var kp=A({logicalNot_:uj});function cj(r,e){let t=E(r,"a","logicalOr","bool"),o=E(e,"b","logicalOr","bool");Rt(t.shape,o.shape);let n={a:t,b:o};return $.runKernel(Zl,n)}var qd=A({logicalOr_:cj});function pj(r,e){let t=E(r,"a","logicalXor","bool"),o=E(e,"b","logicalXor","bool");return Rt(t.shape,o.shape),Vr(qd(r,e),kp(Vr(r,e)))}var zC=A({logicalXor_:pj});function mj(r,e,t,o,n){let s=E(r,"x","maxPool"),i=1,a=s,l=!1;s.rank===3&&(l=!0,a=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),D(Cr(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),ye("maxPool",o,n);let u={x:a},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n},p=$.runKernel(Da,u,c);return l?B(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var wu=A({maxPool_:mj});function fj(r,e=[1,1,1],t,o,n,s="NDHWC"){let i=E(r,"x","maxPool3d"),a=i,l=!1;i.rank===4&&(l=!0,a=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),D(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),ye("maxPool3d",o,n);let u={x:a},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n,dataFormat:s},p=$.runKernel(_a,u,c);return l?B(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var oN=A({maxPool3d_:fj});function hj(r,e){let t=E(r,"a","maximum"),o=E(e,"b","maximum");[t,o]=Gt(t,o),t.dtype==="bool"&&(t=nt(t,"int32"),o=nt(o,"int32")),Rt(t.shape,o.shape);let n={a:t,b:o};return $.runKernel(si,n)}var $o=A({maximum_:hj});function dj(r,e=null,t=!1){let n={x:E(r,"x","mean")},s={axis:e,keepDims:t};return $.runKernel(Ra,n,s)}var Ie=A({mean_:dj});function ve(r,e="float32"){if(Sr(r),e==="complex64"){let o=ve(r,"float32"),n=ve(r,"float32");return Ho(o,n)}let t=vc(Qt(r),e);return $.makeTensor(t,r,e)}function Zr(r,e="float32"){if(Sr(r),e==="complex64"){let o=Zr(r,"float32"),n=ve(r,"float32");return Ho(o,n)}let t=rf(Qt(r),e);return $.makeTensor(t,r,e)}function gj(r,e){let t=E(r,"a","minimum"),o=E(e,"b","minimum");[t,o]=Gt(t,o),t.dtype==="bool"&&(t=nt(t,"int32"),o=nt(o,"int32")),Rt(t.shape,o.shape);let n={a:t,b:o};return $.runKernel(ii,n)}var ds=A({minimum_:gj});function xj(r,e,t){D(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let o=E(r,"x","mirrorPad");if(o.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(e.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${e.length}.`);let n=t==="reflect"?1:0;for(let a=0;a<o.rank;a++)D(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(e[a][0]>=0&&e[a][0]<=o.shape[a]-n&&e[a][1]>=0&&e[a][1]<=o.shape[a]-n,()=>`Padding in dimension ${a} cannot be greater than or equal to ${o.shape[a]-n} or less than 0 for input of shape ${o.shape}`);let s={paddings:e,mode:t},i={x:o};return $.runKernel(Oa,i,s)}var BC=A({mirrorPad_:xj});function yj(r,e){let t=E(r,"a","mod"),o=E(e,"b","mod");[t,o]=Gt(t,o);let n={a:t,b:o};return $.runKernel(ai,n)}var MC=A({mod_:yj});function bj(r,e=null,t=!1){r=E(r,"x","moments");let o=sr(e,r.shape),n=Ie(r,o,t),s=n.shape;t||(s=fs(n.shape,o));let i=Vt(gt(nt(r,"float32"),B(n,s))),a=Ie(i,o,t);return{mean:n,variance:a}}var Ep=A({moments_:bj});function wj(r,e){let t=E(r,"a","notEqual","string_or_numeric"),o=E(e,"b","notEqual","string_or_numeric");[t,o]=Gt(t,o),Rt(t.shape,o.shape);let n={a:t,b:o};return $.runKernel(Jl,n)}var cl=A({notEqual_:wj});function Nj(r,e,t=1,o=0,n="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let i={indices:E(r,"indices","oneHot","int32")},a={dtype:n,depth:e,onValue:t,offValue:o};return $.runKernel(za,i,a)}var $p=A({oneHot_:Nj});function Tj(r){let t={x:E(r,"x","onesLike")};return $.runKernel(Pa,t)}var dr=A({onesLike_:Tj});function Sj(r,e,t=0){let o=E(r,"x","pad");if(o.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:e,constantValue:t},s={x:o};return $.runKernel(Ma,s,n)}var Nu=A({pad_:Sj});function vj(r,e,t){let o=E(r,"x","spaceToBatchND");D(o.rank>=1+e.length,()=>`input rank ${o.rank} should be > than [blockShape] ${e.length}`),D(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),D(o.shape.reduce((i,a,l)=>l>0&&l<=e.length?i&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let n={x:o},s={blockShape:e,paddings:t};return $.runKernel(Ya,n,s)}var Ap=A({spaceToBatchND_:vj});function Cj(r,e,t,o,n,s,i){n==null&&(n=[1,1]),s==null&&(s=1),o===0&&(o="valid");let a=E(r,"x","maxPool"),l=a,u=!1;a.rank===3&&(u=!0,l=B(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(Cr(s,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${n}'`);let c=F0(l.shape,e,s,n,o),p=[c.dilationHeight,c.dilationWidth],m;o==="same"?m=kj([c.filterHeight,c.filterWidth],p):m=[[0,0],[0,0]];let f=p[0]===1&&p[1]===1,[h,g]=Ij([c.inHeight,c.inWidth],p,m),d=f?o:"valid",x=f?l:Ap(l,p,h),w=(t==="avg"?()=>hu(x,e,s,d,i):()=>wu(x,e,s,d,i))(),N=f?w:Tp(w,p,g);return u?B(N,[N.shape[1],N.shape[2],N.shape[3]]):N}function Ij(r,e,t){let o=t.map(c=>c[0]),n=t.map(c=>c[1]),s=r.concat(o,n),i=e.map((c,p)=>(c-s[p]%c)%c),a=n.map((c,p)=>c+i[p]),l=e.map((c,p)=>[o[p],a[p]]),u=e.map((c,p)=>[0,i[p]]);return[l,u]}function kj(r,e){let o=r.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),n=o.map(i=>Math.floor(i/2)),s=o.map((i,a)=>i-n[a]);return o.map((i,a)=>[n[a],s[a]])}var VC=A({pool_:Cj});function Ej(r,e){let t=E(r,"x","prelu"),o=E(e,"alpha","prelu"),n={x:t,alpha:o};return $.runKernel(Va,n)}var Tu=A({prelu_:Ej});function $j(r,e=null,t=!1){let o=E(r,"x","prod");o.dtype==="bool"&&(o=nt(o,"int32"));let n={x:o},s={axis:e,keepDims:t};return $.runKernel(Ga,n,s)}var GC=A({prod_:$j});var cN=Ml(Dp());var _p=class{constructor(e,t,o,n,s){this.mean=e,this.stdDev=t,this.dtype=o,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=cN.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let e,t,o=!1;for(;!o;){let n,s,i;do n=2*this.random()-1,s=2*this.random()-1,i=n*n+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*n*a,t=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(e))&&(o=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}};var jd=class{constructor(e=0,t=1,o,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=o,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=cN.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function Lj(r,e=0,t=1,o,n){if(Sr(r),o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);let s=new _p(e,t,o,!1,n),i=Nt(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Xd=A({randomNormal_:Lj});function Pj(r,e=0,t=1,o="float32",n){Sr(r);let s=Nt(r,o),i=new jd(e,t,null,n);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var Bn=A({randomUniform_:Pj});function Li(r,e,t=1,o="float32"){if(t===0)throw new Error("Cannot have a step of zero");let n={start:r,stop:e,step:t,dtype:o};return $.runKernel(tp,{},n)}function zj(r){let t={input:E(r,"input","real")};return $.runKernel(ep,t)}var vu=A({real_:zj});function Bj(r){let t={x:E(r,"x","reciprocal")};return $.runKernel(ci,t)}var pN=A({reciprocal_:Bj});function Mj(r){let t={x:E(r,"x","relu")};return $.runKernel(pi,t)}var Ao=A({relu_:Mj});function Vj(r){let t={x:E(r,"x","relu6")};return $.runKernel(mi,t)}var Yd=A({relu6_:Vj});function Gj(r,e){let o={x:E(r,"x","reverse")},n={dims:e};return $.runKernel(qa,o,n)}var Yo=A({reverse_:Gj});function Wj(r){let t={x:E(r,"x","round")};return $.runKernel(fi,t)}var Ef=A({round_:Wj});function Uj(r){let t={x:E(r,"x","rsqrt","float32")};return $.runKernel(hi,t)}var $f=A({rsqrt_:Uj});function Hj(r){let t={x:E(r,"x","selu")};return $.runKernel(di,t)}var Af=A({selu_:Hj});function qj(r,e,t,o,n,s=[1,1],i="NHWC"){let a=E(r,"x","separableConv2d"),l=E(e,"depthwiseFilter","separableConv2d"),u=E(t,"pointwiseFilter","separableConv2d"),c=a,p=!1;if(a.rank===3&&(p=!0,c=B(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),D(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),D(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),D(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let m=l.shape[2],f=l.shape[3];D(u.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${u.shape[2]}.`);let h=Ri(c,l,o,n,i,s),d=ko(h,u,1,"valid",i);return p?B(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Df=A({separableConv2d_:qj});function Kj(r){let t={x:E(r,"x","sign")};return $.runKernel(yi,t)}var mN=A({sign_:Kj});function jj(r){let t={x:E(r,"x","sin","float32")};return $.runKernel(gi,t)}var _f=A({sin_:jj});function Xj(r){let t={x:E(r,"x","sinh")};return $.runKernel(xi,t)}var Rf=A({sinh_:Xj});function Yj(r,e,t){let o=E(r,"x","slice1d");return D(o.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${o.rank} tensor`),qt(o,[e],[t])}var Ff=A({slice1d_:Yj});function Zj(r,e,t){let o=E(r,"x","slice2d");return D(o.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${o.rank} tensor`),qt(o,e,t)}var Zd=A({slice2d_:Zj});function Jj(r,e,t){let o=E(r,"x","slice3d");return D(o.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${o.rank} tensor`),qt(o,e,t)}var Of=A({slice3d_:Jj});function Qj(r,e,t){let o=E(r,"x","slice4d");return D(o.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${o.rank} tensor`),qt(o,e,t)}var Rp=A({slice4d_:Qj});function t6(r,e=-1){let t=E(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let o={logits:t},n={dim:e};return $.runKernel(Ja,o,n)}var Cu=A({softmax_:t6});function e6(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return $.runKernel(Wc,e)}var Lf=A({fft_:e6});function r6(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return $.runKernel(qc,e)}var Fp=A({ifft_:r6});function o6(r){let e=r.shape[r.shape.length-1],t=r.size/e,o;if(e<=2){let n=B(r,[t,e]);o=Fp(n)}else{let n=[t,2*(e-1)],s=B(vu(r),[t,e]),i=B(Ip(r),[t,e]),a=Yo(qt(s,[0,1],[t,e-2]),1),l=z(Yo(qt(i,[0,1],[t,e-2]),1),Ct(-1)),u=Te([s,a],1),c=Te([i,l],1),p=B(Ho(u,c),[n[0],n[1]]);o=Fp(p)}if(o=vu(o),r.rank===3&&r.shape[0]!==0){let n=o,s=r.shape[0];o=B(o,[s,o.shape[0]/s,o.shape[1]]),n.dispose()}return o}var fN=A({irfft_:o6});function n6(r,e,t=0){let n={x:E(r,"x","split")},s={numOrSizeSplits:e,axis:t};return $.runKernel(Za,n,s)}var ur=A({split_:n6});function s6(r,e){D(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],o=r.size/t,n;if(e!=null&&e<t){let h=r.shape.map(d=>0),g=r.shape.map(d=>d);g[r.shape.length-1]=e,n=qt(r,h,g),t=e}else if(e!=null&&e>t){let h=r.shape.map(g=>g);h[r.shape.length-1]=e-t,n=Te([r,ve(h)],r.shape.length-1),t=e}else n=r;let s=Tt(n),i=B(Ho(n,s),[o,t]),a=Lf(i),l=Math.floor(t/2)+1,u=vu(a),c=Ip(a),p=ur(u,[l,t-l],u.shape.length-1),m=ur(c,[l,t-l],c.shape.length-1),f=n.shape.slice();return f[n.shape.length-1]=l,B(Ho(p[0],m[0]),f)}var hN=A({rfft_:s6});function i6(r,e){let t=E(r,"a","squaredDifference"),o=E(e,"b","squaredDifference");[t,o]=Gt(t,o),Rt(t.shape,o.shape);let n={a:t,b:o},s={};return $.runKernel(Ti,n,s)}var nI=A({squaredDifference_:i6});function a6(r,e){let t=E(r,"x","squeeze","string_or_numeric");return B(t,jw(t.shape,e).newShape)}var Mn=A({squeeze_:a6});function l6(r,e=0){let t=Fd(r,"tensors","stack","string_or_numeric");D(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&D(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let o=t,n={axis:e};return $.runKernel(Ba,o,n)}var ir=A({stack_:l6});function u6(r,e=0){let o={x:E(r,"x","step")},n={alpha:e};return $.runKernel(Ii,o,n)}var Vn=A({step_:u6});function c6(r,e,t,o,n=0,s=0,i=0,a=0,l=0){let c={x:E(r,"x","stridedSlice","string_or_numeric")},p={begin:e,end:t,strides:o,beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return $.runKernel(sp,c,p)}var dN=A({stridedSlice_:c6});function p6(r){let t={x:E(r,"x","tan","float32")};return $.runKernel(vi,t)}var gN=A({tan_:p6});function Je(r,e){ef(r);let t=lu(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sl(r,null,t,e)}function Pf(r,e,t){if(ef(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let o=lu(r,t);if(o.length!==2&&o.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sl(r,e,o,t)}function sI(r,e,t){let o=e.rank>1?e.shape[e.rank-1]:1,n=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${o}, and batchDim: ${n}.`;if(t.rank<n)throw new Error(s+` update.rank < ${n}. `);if(r.length<o+(t.rank-n))throw new Error(s+` Output shape length < ${o+(t.rank-n)}`);if(t.rank!==n+r.length-o)throw new Error(s+` update.rank != ${n+r.length-o}`);for(let i=0;i<n;++i)if(t.shape[i]!==e.shape[i])throw new Error(s+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-n;++i)if(t.shape[i+n]!==r[i+o])throw new Error(s+` updates.shape[${i+n}] (${t.shape[i+n]}) != shape[${i+n}] (${r[i+n]})`)}function m6(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}sI(t,e,r)}function f6(r,e,t){let o=e.shape.length,n=o>1?e.shape[o-1]:1,s=t.length,i=1;for(let p=n;p<s;++p)i*=t[p];let a=n<1?1:n,l=Qt(e.shape)/a,u=[...ss(t.slice(0,n)),1],c=Qt(t);return{sliceRank:n,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}function h6(r,e=1,t=!0){let o=E(r,"x","topk");if(o.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=o.shape[o.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${e}`);let s={x:o},i={k:e,sorted:t},[a,l]=$.runKernel(ip,s,i);return{values:a,indices:l}}var iI=A({topk_:h6});function d6(r,e=0,t=1,o,n){if(Sr(r),o!=null&&o==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new _p(e,t,o,!0,n),i=Nt(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var zf=A({truncatedNormal_:d6});function g6(r,e=0){let t=E(r,"x","unique","string_or_numeric");D(t.rank>0,()=>"The input tensor must be at least 1D");let o={x:t},n={axis:e},[s,i]=$.runKernel(lp,o,n);return{values:s,indices:i}}var aI=A({unique_:g6});function x6(r,e,t){let o=E(r,"x","unsortedSegmentSum"),n=E(e,"segmentIds","unsortedSegmentSum","int32");D(Fs(t),()=>"numSegments must be of dtype int");let s={x:o,segmentIds:n},i={numSegments:t};return $.runKernel(tl,s,i)}var Jd=A({unsortedSegmentSum_:x6});function y6(r,e=0){let t=E(r,"x","unstack","string_or_numeric");D(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let o={value:t},n={axis:e};return $.runKernel(Qa,o,n)}var Gr=A({unstack_:y6});function xN(r,e=!0,t,o){return $.makeVariable(r,e,t,o)}function lI(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let o=Nt(r,"int32"),n=Nt([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let i=o.indexToLoc(t[s]),a=s*r.length;n.values.set(i,a)}return n.toTensor()}function b6(r,e,t){let o=E(r,"x","transpose");if(e==null&&(e=o.shape.map((i,a)=>a).reverse()),D(o.rank===e.length,()=>`Error in transpose: rank of input ${o.rank} must match length of perm ${e}.`),e.forEach(i=>{D(i>=0&&i<o.rank,()=>`All entries in 'perm' must be between 0 and ${o.rank-1} but got ${e}`)}),o.rank<=1)return o.clone();let n={x:o},s={perm:e};return o.dtype==="complex64"?U(()=>{let i=vu(o),a=Ip(o);return i=$.runKernel(us,{x:i},s),a=$.runKernel(us,{x:a},s),t&&(a=Yt(a)),Ho(i,a)}):$.runKernel(us,n,s)}var Bt=A({transpose_:b6});function uI(r,e){if(e==null)return r.shape.slice();if(la(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let o=0;o<r.shape.length;o++)e[o]==null&&r.shape[o]!=null?t.push(r.shape[o]):t.push(e[o]);return t}return e}function w6(r,e,t,o){let n=E(r,"x","dropout");if(D(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),D(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof te?n.clone():n;let s=uI(n,t),i=1-e,a=lt(Oi(tt(Bn(s,0,1,"float32",o),i)),i);return z(n,a)}var cI=A({dropout_:w6});var Au={};le(Au,{conv2d:()=>pI,depthwiseConv2d:()=>mI,matMul:()=>fI});function N6(r,e,t,o,n,s="NHWC",i){let a=r;r.rank===3&&(a=B(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=B(e,[1,e.shape[0],e.shape[1],e.shape[2]])),D(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),D(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),D(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let u=s==="NHWC"?a.shape[3]:a.shape[1],c=s==="NHWC"?l.shape[3]:l.shape[1];D(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),D(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),ye("conv2dDerFilter",n,i);let p={x:a,dy:l},m={strides:o,pad:n,dataFormat:s,dimRoundingMode:i,filterShape:t};return $.runKernel(_c,p,m)}var Op=A({conv2DBackpropFilter_:N6});function Iu(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return z(r,Vn(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function ku(r,e){let t=e,o=fe(r.shape,e.shape);return o.length>0&&(t=ft(t,o)),B(t,r.shape)}function Eu(r,e,t,o){if(e==="linear")return r;if(e==="relu")return Ao(r);if(e==="elu")return Fi(r);if(e==="relu6")return Yd(r);if(e==="prelu")return Tu(r,t);if(e==="leakyrelu")return yu(r,o);if(e==="sigmoid")return cn(r);throw new Error(`Unknown fused activation ${e}.`)}var $u=(r,e)=>!(r>0)||e==="linear";function T6({x:r,filter:e,strides:t,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",$u($.state.gradientDepth,l)===!1){D(n==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${n} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=ko(r,e,t,o,n,s,i);return a!=null&&(k=tt(k,a)),Eu(k,l,u,c)}let p=E(r,"x","conv2d","float32"),m=E(e,"filter","conv2d","float32"),f=p,h=!1;p.rank===3&&(h=!0,f=B(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),D(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),ye("fused conv2d",o,i);let g=n==="NHWC"?f.shape[3]:f.shape[1];D(m.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${m.shape[2]}.`),D(Cr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let d=fu(f.shape,m.shape,t,s,o,i),x;a!=null&&(x=E(a,"bias","fused conv2d"),[x]=Gt(x,p),n==="NHWC"?Rt(d.outShape,x.shape):(D(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),D(x.shape.length===0||x.shape[0]===d.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${d.outChannels})`)));let y;if(u!=null){let k=u.shape;if(D(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)D(k[0]===1||k[0]===d.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${d.outChannels}).`);else if(k.length===3)try{Rt(k,d.outShape)}catch{let O=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${d.outShape}).`;throw Error(O)}y=E(u,"prelu weights","fused conv2d")}let w=(k,R)=>{D(n==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${n} but only NHWC is currently supported.`);let[O,L,M,H]=R,q=Iu(k,M,l);D(Ko(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let K=Sp(L.shape,q,O,t,o),X=Op(L,q,O.shape,t,o),Y=[K,X];if(H!=null){let Q=ku(H,q);Y.push(Q)}return Y},N={x:f,filter:m,bias:x,preluActivationWeights:y},v={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?Xo((R,O,L)=>{let M=$.runKernel(tu,N,v);return L([O,R,M]),h&&(M=B(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:w}})(f,m):Xo((R,O,L,M)=>{let H=$.runKernel(tu,N,v);return M([O,R,H,L]),h&&(H=B(H,[H.shape[1],H.shape[2],H.shape[3]])),{value:H,gradFunc:w}})(f,m,x)}var pI=A({fusedConv2d_:T6});function S6(r,e,t,o,n,s=[1,1],i){let a=r;r.rank===3&&(a=B(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={x:a,dy:l},c={strides:o,pad:n,dimRoundingMode:i,dilations:s,filterShape:t};return $.runKernel(Bc,u,c)}var Qd=A({depthwiseConv2dNativeBackpropFilter_:S6});function v6(r,e,t,o,n,s=[1,1],i){let a=e,l=!1;e.rank===3&&(l=!0,a=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={dy:a,filter:t},c={strides:o,pad:n,dimRoundingMode:i,dilations:s,inputShape:r},p=$.runKernel(Mc,u,c);return l?B(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var tg=A({depthwiseConv2dNativeBackpropInput_:v6});function C6({x:r,filter:e,strides:t,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if($u($.state.gradientDepth,l)===!1){let v=Ri(r,e,t,o,n,s,i);return a!=null&&(v=tt(v,a)),Eu(v,l,u,c)}let p=E(r,"x","depthwiseConv2d","float32"),m=E(e,"filter","depthwiseConv2d","float32"),f=p,h=!1;p.rank===3&&(h=!0,f=B(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),D(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),D(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),D(Cr(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),ye("fused depthwiseConv2d",o,i);let g=fu(f.shape,m.shape,t,s,o,i,!0),d;a!=null&&(d=E(a,"bias","fused conv2d"),[d]=Gt(d,p),Rt(g.outShape,d.shape));let x;u!=null&&(x=E(u,"prelu weights","fused depthwiseConv2d"));let y=(v,k)=>{D(Ko(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[R,O,L,M]=k,H=Iu(v,L,l),q=tg(O.shape,H,R,t,o,s,i),K=Qd(O,H,R.shape,t,o,s,i);if(M!=null){let X=ku(d,H);return[q,K,X]}return[q,K]},w={x:f,filter:m,bias:d,preluActivationWeights:x},N={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?Xo((k,R,O)=>{let L=$.runKernel(eu,w,N);return O([R,k,L]),h&&(L=B(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:y}})(f,m):Xo((k,R,O,L)=>{let M=$.runKernel(eu,w,N);return L([R,k,M,O]),h&&(M=B(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:y}})(f,m,d)}var mI=A({fusedDepthwiseConv2d_:C6});function I6({a:r,b:e,transposeA:t=!1,transposeB:o=!1,bias:n,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if($u($.state.gradientDepth,s)===!1){let H=Xt(r,e,t,o);return n!=null&&(H=tt(H,n)),Eu(H,s,i,a)}let l=E(r,"a","fused matMul"),u=E(e,"b","fused matMul");[l,u]=Gt(l,u);let c=t?l.shape[l.rank-2]:l.shape[l.rank-1],p=o?u.shape[u.rank-1]:u.shape[u.rank-2],m=t?l.shape[l.rank-1]:l.shape[l.rank-2],f=o?u.shape[u.rank-2]:u.shape[u.rank-1],h=l.shape.slice(0,-2),g=u.shape.slice(0,-2),d=Qt(h),x=Qt(g);D(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${o} must match.`);let w=Rt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([m,f]),N=t?B(l,[d,c,m]):B(l,[d,m,c]),v=o?B(u,[x,f,p]):B(u,[x,p,f]),k;n!=null&&(k=E(n,"bias","fused matMul"),[k]=Gt(k,l),Rt(w,k.shape));let R;i!=null&&(R=E(i,"prelu weights","fused matMul"));let O=(H,q)=>{let[K,X,Y,Q]=q,et=Iu(B(H,Y.shape),Y,s),Z,ot;if(!t&&!o?(Z=Xt(et,X,!1,!0),ot=Xt(K,et,!0,!1)):!t&&o?(Z=Xt(et,X,!1,!1),ot=Xt(et,K,!0,!1)):t&&!o?(Z=Xt(X,et,!1,!0),ot=Xt(K,et,!1,!1)):(Z=Xt(X,et,!0,!0),ot=Xt(et,K,!0,!0)),n!=null){let it=ku(Q,et);return[Z,ot,it]}else return[Z,ot]},L={a:N,b:v,bias:k,preluActivationWeights:R},M={transposeA:t,transposeB:o,activation:s,leakyreluAlpha:a};return n==null?Xo((q,K,X)=>{let Y=$.runKernel(Ql,L,M);return X([q,K,Y]),{value:B(Y,w),gradFunc:O}})(N,v):Xo((q,K,X,Y)=>{let Q=$.runKernel(Ql,L,M);return Y([q,K,Q,X]),{value:B(Q,w),gradFunc:O}})(N,v,k)}var fI=A({fusedMatMul_:I6});function k6(r,e,t,o,n="bilinear",s=0){let i=E(r,"image","cropAndResize"),a=E(e,"boxes","cropAndResize","float32"),l=E(t,"boxInd","cropAndResize","int32"),u=a.shape[0];D(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),D(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),D(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),D(o.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),D(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),D(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let c={image:i,boxes:a,boxInd:l},p={method:n,extrapolationValue:s,cropSize:o};return $.runKernel(Lc,c,p)}var hI=A({cropAndResize_:k6});function E6(r){let e=E(r,"image","flipLeftRight","float32");D(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return $.runKernel(Hc,t,{})}var dI=A({flipLeftRight_:E6});function $6(r){let e=E(r,"image","grayscaleToRGB"),t=e.rank-1,o=e.shape[t];D(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),D(o===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${o}.`);let n=new Array(e.rank);return n.fill(1,0,t),n[t]=3,Fr(e,n)}var gI=A({grayscaleToRGB_:$6});function A6(r){let e=E(r,"image","RGBToGrayscale"),t=e.rank-1,o=e.shape[t];D(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),D(o===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${o}.`);let n=e.dtype,s=nt(e,"float32"),i=Je([.2989,.587,.114]),a;switch(e.rank){case 2:a=vp("ij,j->i",s,i);break;case 3:a=vp("ijk,k->ij",s,i);break;case 4:a=vp("ijkl,l->ijk",s,i);break;case 5:a=vp("ijklm,m->ijkl",s,i);break;case 6:a=vp("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return a=Ze(a,-1),nt(a,n)}var xI=A({rgbToGrayscale_:A6});function D6(r,e,t=0,o=.5){let n=E(r,"image","rotateWithOffset","float32");D(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let s={image:n},i={radians:e,fillValue:t,center:o};return $.runKernel(up,s,i)}var yI=A({rotateWithOffset_:D6});function mn(r,e,t,o,n,s){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return t=Math.min(t,i),D(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),D(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),D(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),D(e.rank===1,()=>"scores must be a 1D tensor"),D(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),D(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:o,scoreThreshold:n,softNmsSigma:s}}function _6(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY){let s=E(r,"boxes","nonMaxSuppression","float32"),i=E(e,"scores","nonMaxSuppression","float32"),a=mn(s,i,t,o,n);t=a.maxOutputSize,o=a.iouThreshold,n=a.scoreThreshold;let l={maxOutputSize:t,iouThreshold:o,scoreThreshold:n};return $.runKernel(Zc,{boxes:s,scores:i},l)}var bI=A({nonMaxSuppression_:_6});function wI(r,e,t){let o=R6(r,e,t),n=o<0?-(o+1):o;r.splice(n,0,e)}function R6(r,e,t){return O6(r,e,t||F6)}function F6(r,e){return r>e?1:r<e?-1:0}function O6(r,e,t){let o=0,n=r.length,s=0,i=!1;for(;o<n;){s=o+(n-o>>>1);let a=t(e,r[s]);a>0?o=s+1:(n=s,i=!a)}return i?o:-o-1}function eg(r,e,t,o,n){return yN(r,e,t,o,n,0)}function rg(r,e,t,o,n,s){return yN(r,e,t,o,n,0,!1,s,!0)}function og(r,e,t,o,n,s){return yN(r,e,t,o,n,s,!0)}function yN(r,e,t,o,n,s,i=!1,a=!1,l=!1){let u=[];for(let d=0;d<e.length;d++)e[d]>n&&u.push({score:e[d],boxIndex:d,suppressBeginIndex:0});u.sort(NI);let c=s>0?-.5/s:0,p=[],m=[];for(;p.length<t&&u.length>0;){let d=u.pop(),{score:x,boxIndex:y,suppressBeginIndex:w}=d;if(x<n)break;let N=!1;for(let v=p.length-1;v>=w;--v){let k=L6(r,y,p[v]);if(k>=o){N=!0;break}if(d.score=d.score*P6(o,c,k),d.score<=n)break}d.suppressBeginIndex=p.length,N||(d.score===x?(p.push(y),m.push(d.score)):d.score>n&&wI(u,d,NI))}let f=p.length,h=t-f;a&&h>0&&(p.push(...new Array(h).fill(0)),m.push(...new Array(h).fill(0)));let g={selectedIndices:p};return i&&(g.selectedScores=m),l&&(g.validOutputs=f),g}function L6(r,e,t){let o=r.subarray(e*4,e*4+4),n=r.subarray(t*4,t*4+4),s=Math.min(o[0],o[2]),i=Math.min(o[1],o[3]),a=Math.max(o[0],o[2]),l=Math.max(o[1],o[3]),u=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),m=Math.max(n[1],n[3]),f=(a-s)*(l-i),h=(p-u)*(m-c);if(f<=0||h<=0)return 0;let g=Math.max(s,u),d=Math.max(i,c),x=Math.min(a,p),y=Math.min(l,m),w=Math.max(x-g,0)*Math.max(y-d,0);return w/(f+h-w)}function P6(r,e,t){let o=Math.exp(e*t*t);return t<=r?o:0}function NI(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}function z6(s,i,a){return V(this,arguments,function*(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY){let l=E(r,"boxes","nonMaxSuppressionAsync"),u=E(e,"scores","nonMaxSuppressionAsync"),c=mn(l,u,t,o,n);t=c.maxOutputSize,o=c.iouThreshold,n=c.scoreThreshold;let p=yield Promise.all([l.data(),u.data()]),m=p[0],f=p[1],{selectedIndices:h}=eg(m,f,t,o,n);return l!==r&&l.dispose(),u!==e&&u.dispose(),Je(h,"int32")})}var TI=z6;function B6(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=E(r,"boxes","nonMaxSuppression"),a=E(e,"scores","nonMaxSuppression"),l=mn(i,a,t,o,n,s);t=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:a},c={maxOutputSize:t,iouThreshold:o,scoreThreshold:n,softNmsSigma:s},p=$.runKernel(Qc,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var SI=A({nonMaxSuppressionWithScore_:B6});function M6(i,a,l){return V(this,arguments,function*(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let u=E(r,"boxes","nonMaxSuppressionAsync"),c=E(e,"scores","nonMaxSuppressionAsync"),p=mn(u,c,t,o,n,s);t=p.maxOutputSize,o=p.iouThreshold,n=p.scoreThreshold,s=p.softNmsSigma;let m=yield Promise.all([u.data(),c.data()]),f=m[0],h=m[1],{selectedIndices:g,selectedScores:d}=og(f,h,t,o,n,s);return u!==r&&u.dispose(),c!==e&&c.dispose(),{selectedIndices:Je(g,"int32"),selectedScores:Je(d)}})}var vI=M6;function V6(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=E(r,"boxes","nonMaxSuppression"),a=E(e,"scores","nonMaxSuppression"),l=mn(i,a,t,o,n,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,m={boxes:i,scores:a},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},h=$.runKernel(Jc,m,f);return{selectedIndices:h[0],validOutputs:h[1]}}var CI=A({nonMaxSuppressionPadded_:V6});function G6(i,a,l){return V(this,arguments,function*(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let u=E(r,"boxes","nonMaxSuppressionAsync"),c=E(e,"scores","nonMaxSuppressionAsync"),p=mn(u,c,t,o,n,null),m=p.maxOutputSize,f=p.iouThreshold,h=p.scoreThreshold,[g,d]=yield Promise.all([u.data(),c.data()]),{selectedIndices:x,validOutputs:y}=rg(g,d,m,f,h,s);return u!==r&&u.dispose(),c!==e&&c.dispose(),{selectedIndices:Je(x,"int32"),validOutputs:Ct(y,"int32")}})}var II=G6;function W6(r,e,t=!1,o=!1){let n=E(r,"images","resizeBilinear");D(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),D(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),D(o===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=B(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=e,a={images:s},l={alignCorners:t,halfPixelCenters:o,size:e},u=$.runKernel(Ha,a,l);return i?B(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var ng=A({resizeBilinear_:W6});function U6(r,e,t=!1,o=!1){let n=E(r,"images","resizeNearestNeighbor");D(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),D(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),D(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(o===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=B(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=e,a={images:s},l={alignCorners:t,halfPixelCenters:o,size:e},u=$.runKernel(Ua,a,l);return i?B(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var sg=A({resizeNearestNeighbor_:U6});function H6(r,e="binary",t=!1,o=.5){let n=E(r,"image","threshold"),s=.2989,i=.587,a=.114,l=n.shape[0]*n.shape[1],u=z(Je([o]),255),c,p,m,f;if(D(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),D(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),D(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),D(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),n.shape[2]===3){[c,p,m]=ur(n,[1,1,1],-1);let d=z(c,s),x=z(p,i),y=z(m,a);f=tt(tt(d,x),y)}else f=r;if(e==="otsu"){let d=EC(nt(Ef(f),"int32"),qo([]),256);u=q6(d,l)}let h=t?pn(f,u):Ve(f,u);return nt(z(h,255),"int32")}function q6(r,e){let t=Je([-1]),o=Je([0]),n=Je([0]),s,i,a,l,u,c;for(let p=0;p<r.size-1;p++){s=qt(r,0,p+1),i=qt(r,p+1),u=lt(ft(s),e),c=lt(ft(i),e);let m=ft(z(s,Li(0,s.size)));a=lt(m,ft(s));let f=_i(i.shape,s.size),h=tt(Li(0,i.size),f),g=z(i,h);l=lt(ft(g),ft(i));let d=gt(a,l),x=gt(a,l),y=z(u,c);n=z(z(y,d),x);let w=Ve(n,o);o=Se(w,n,o),t=Se(w,Je([p]),t)}return t}var kI=A({threshold_:H6});function K6(r,e,t="nearest",o="constant",n=0,s){let i=E(r,"image","transform","float32"),a=E(e,"transforms","transform","float32");D(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),D(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:a},u={interpolation:t,fillMode:o,fillValue:n,outputShape:s};return $.runKernel(ap,l,u)}var EI=A({transform_:K6});function j6(r,e,t){let o=E(r,"a","bandPart");D(o.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${o.rank}.`);let n=o.shape,[s,i]=o.shape.slice(-2),a,l;typeof e=="number"?(D(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),D(e<=s,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`),a=E(e<0?s:e,"numLower","bandPart")):(D(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=Se(bu(e,0),s,ds(e,s))),typeof t=="number"?(D(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),D(t<=i,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`),l=E(t<0?i:t,"numUpper","bandPart")):(D(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Se(bu(t,0),i,ds(t,i)));let u=B(Li(0,s,1,"int32"),[-1,1]),c=Li(0,i,1,"int32"),p=gt(u,c),m=Vr(pn(p,a),fo(p,Yt(l))),f=ve([s,i],o.dtype);return B(ir(Gr(B(o,[-1,s,i])).map(h=>Se(m,h,f))),n)}var $I=A({bandPart_:j6});function X6(r){let e;if(Array.isArray(r)){e=!1,D(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=r[0].shape[0];for(let s=1;s<r.length;++s)D(r[s].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${n})`)}else e=!0,r=ur(r,r.shape[0],0).map(n=>Mn(n,[0]));D(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],o=r;for(let n=0;n<r.length;++n)t.push($.tidy(()=>{let s=o[n];if(n>0)for(let i=0;i<n;++i){let a=z(ft(z(t[i],s)),t[i]);s=gt(s,a)}return lt(s,zn(s,"euclidean"))}));return e?ir(t,0):t}var AI=A({gramSchmidt_:X6});function Y6(r,e=!1){if(D(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return DI(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),o=Gr(B(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),n=[],s=[];o.forEach(l=>{let[u,c]=DI(l,e);n.push(u),s.push(c)});let i=B(ir(n,0),r.shape),a=B(ir(s,0),r.shape);return[i,a]}}function DI(r,e=!1){return $.tidy(()=>{D(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],o=r.shape[1],n=Cp(t),s=Io(r),i=Pf([[1]],[1,1]),a=Io(i),l=t>=o?o:t;for(let u=0;u<l;++u){let c=s,p=a,m=n;[a,s,n]=$.tidy(()=>{let f=qt(s,[u,u],[t-u,1]),h=zn(f),g=qt(s,[u,u],[1,1]),d=Se(Ve(g,0),Pf([[-1]]),Pf([[1]])),x=gt(g,z(d,h)),y=lt(f,x);y.shape[0]===1?a=Io(i):a=Te([i,qt(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let w=Yt(lt(Xt(d,x),h)),N=qt(s,[u,0],[t-u,o]),v=z(w,a),k=Bt(a);if(u===0)s=gt(N,Xt(v,Xt(k,N)));else{let L=gt(N,Xt(v,Xt(k,N)));s=Te([qt(s,[0,0],[u,o]),L],0)}let R=Bt(v),O=qt(n,[0,u],[t,n.shape[1]-u]);if(u===0)n=gt(O,Xt(Xt(O,a),R));else{let L=gt(O,Xt(Xt(O,a),R));n=Te([qt(n,[0,0],[t,u]),L],1)}return[a,s,n]}),Dt([c,p,m])}return!e&&t>o&&(n=qt(n,[0,0],[t,o]),s=qt(s,[0,0],[o,o])),[n,s]})}var _I=A({qr_:Y6});var Do={flipLeftRight:dI,grayscaleToRGB:gI,resizeNearestNeighbor:sg,resizeBilinear:ng,rgbToGrayscale:xI,rotateWithOffset:yI,cropAndResize:hI,nonMaxSuppression:bI,nonMaxSuppressionAsync:TI,nonMaxSuppressionWithScore:SI,nonMaxSuppressionWithScoreAsync:vI,nonMaxSuppressionPadded:CI,nonMaxSuppressionPaddedAsync:II,threshold:kI,transform:EI},RI={bandPart:$I,gramSchmidt:AI,qr:_I};var J={};le(J,{Serializable:()=>Bf,SerializationMap:()=>ig,getRegisteredName:()=>J6,registerClass:()=>wN});var Z6=new Map,bN=new Map,Bf=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ig=class r{constructor(){this.classNameMap={}}static getMap(){return r.instance==null&&(r.instance=new r),r.instance}static register(e){r.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function wN(r,e,t){D(r.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),D(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=r.className);let o=t,n=e+">"+o;return ig.register(r),Z6.set(n,r),bN.set(r,n),r}function J6(r){return bN.has(r)?bN.get(r):r.className}var Or=class extends Bf{minimize(e,t=!1,o){let{value:n,grads:s}=this.computeGradients(e,o);if(o!=null){let i=o.map(a=>({name:a.name,tensor:s[a.name]}));this.applyGradients(i)}else this.applyGradients(s);return Dt(s),t?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return eN(e,t)}dispose(){this.iterations_!=null&&Dt(this.iterations_)}saveIterations(){return V(this,null,function*(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ct(this.iterations_,"int32")}})}getWeights(){return V(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(e){return V(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(e){return V(this,null,function*(){return this.iterations_=(yield e[0].tensor.data())[0],e.slice(1)})}};Object.defineProperty(Or,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var Lp=class extends Or{static get className(){return"Adadelta"}constructor(e,t,o=null){super(),this.learningRate=e,this.rho=t,this.epsilon=o,this.accumulatedGrads=[],this.accumulatedUpdates=[],o==null&&(this.epsilon=$.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,n)=>{let s=$.registeredVariables[o],i=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accum_grad`,variable:U(()=>Tt(s).variable(i))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${o}/accum_var`,variable:U(()=>Tt(s).variable(i))});let a=Array.isArray(e)?e[n].tensor:e[o];if(a==null)return;let l=this.accumulatedGrads[n].variable,u=this.accumulatedUpdates[n].variable;U(()=>{let c=tt(z(l,this.rho),z(Vt(a),1-this.rho)),p=z(lt(he(tt(u,this.epsilon)),he(tt(l,this.epsilon))),a),m=tt(z(u,this.rho),z(Vt(p),1-this.rho));l.assign(c),u.assign(m);let f=tt(z(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Dt(this.accumulatedGrads.map(e=>e.variable)),Dt(this.accumulatedUpdates.map(e=>e.variable)))}getWeights(){return V(this,null,function*(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(e){return V(this,null,function*(){e=yield this.extractIterations(e);let t=e.length/2,o=!1;this.accumulatedGrads=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedUpdates=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};var Pp=class extends Or{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,n)=>{let s=$.registeredVariables[o];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accumulator`,variable:U(()=>_i(s.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(e)?e[n].tensor:e[o];if(i==null)return;let a=this.accumulatedGrads[n].variable;U(()=>{let l=tt(a,Vt(i));a.assign(l);let u=tt(z(lt(i,he(tt(l,$.backend.epsilon()))),-this.learningRate),s);s.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Dt(this.accumulatedGrads.map(e=>e.variable))}getWeights(){return V(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(e){return V(this,null,function*(){e=yield this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(o=>({originalName:o.name,variable:o.tensor.variable(t)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};var zp=class extends Or{static get className(){return"Adam"}constructor(e,t,o,n=null){super(),this.learningRate=e,this.beta1=t,this.beta2=o,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],U(()=>{this.accBeta1=Ct(t).variable(),this.accBeta2=Ct(o).variable()}),n==null&&(this.epsilon=$.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);U(()=>{let o=gt(1,this.accBeta1),n=gt(1,this.accBeta2);t.forEach((s,i)=>{let a=$.registeredVariables[s],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:U(()=>Tt(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${s}/v`,variable:U(()=>Tt(a).variable(l))});let u=Array.isArray(e)?e[i].tensor:e[s];if(u==null)return;let c=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=tt(z(c,this.beta1),z(u,1-this.beta1)),f=tt(z(p,this.beta2),z(Vt(u),1-this.beta2)),h=lt(m,o),g=lt(f,n);c.assign(m),p.assign(f);let d=tt(z(lt(h,tt(he(g),this.epsilon)),-this.learningRate),a);a.assign(d)}),this.accBeta1.assign(z(this.accBeta1,this.beta1)),this.accBeta2.assign(z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Dt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Dt(this.accumulatedSecondMoment.map(e=>e.variable))}getWeights(){return V(this,null,function*(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(e){return V(this,null,function*(){e=yield this.extractIterations(e),U(()=>{this.accBeta1.assign(mo(this.beta1,this.iterations_+1)),this.accBeta2.assign(mo(this.beta2,this.iterations_+1))});let t=e.length/2,o=!1;this.accumulatedFirstMoment=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};var Bp=class extends Or{static get className(){return"Adamax"}constructor(e,t,o,n=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=o,this.epsilon=n,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],U(()=>{this.iteration=Ct(0).variable(),this.accBeta1=Ct(t).variable()}),n==null&&(this.epsilon=$.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);U(()=>{let o=gt(1,this.accBeta1),n=lt(-this.learningRate,tt(z(this.iteration,this.decay),1));t.forEach((s,i)=>{let a=$.registeredVariables[s],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:Tt(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${s}/v`,variable:Tt(a).variable(l)});let u=Array.isArray(e)?e[i].tensor:e[s];if(u==null)return;let c=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=tt(z(c,this.beta1),z(u,1-this.beta1)),f=z(p,this.beta2),h=rr(u),g=$o(f,h);c.assign(m),p.assign(g);let d=tt(z(lt(n,o),lt(m,tt(g,this.epsilon))),a);a.assign(d)}),this.iteration.assign(tt(this.iteration,1)),this.accBeta1.assign(z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Dt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Dt(this.accumulatedWeightedInfNorm.map(e=>e.variable))}getWeights(){return V(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(e){return V(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};var pl=class extends Or{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,n)=>{let s=Array.isArray(e)?e[n].tensor:e[o];if(s==null)return;let i=$.registeredVariables[o];U(()=>{let a=tt(z(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=mr(Ct(-e))}dispose(){this.c.dispose()}getWeights(){return V(this,null,function*(){return[yield this.saveIterations()]})}setWeights(e){return V(this,null,function*(){if(e=yield this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};var Mp=class extends pl{static get className(){return"Momentum"}constructor(e,t,o=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=o,this.accumulations=[],this.m=Ct(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,n)=>{let s=$.registeredVariables[o];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${o}/momentum`,variable:U(()=>Tt(s).variable(!1))});let i=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[o];a!=null&&U(()=>{let l,u=tt(z(this.m,i),a);this.useNesterov?l=tt(z(this.c,tt(a,z(u,this.m))),s):l=tt(z(this.c,u),s),i.assign(u),s.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Dt(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}getWeights(){return V(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(e){return V(this,null,function*(){e=yield this.extractIterations(e);let t=!1;this.accumulations=e.map(o=>({originalName:o.name,variable:o.tensor.variable(t)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};var Vp=class extends Or{static get className(){return"RMSProp"}constructor(e,t=.9,o=0,n=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=o,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,n==null&&(this.epsilon=$.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,n)=>{let s=$.registeredVariables[o],i=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${o}/rms`,variable:U(()=>Tt(s).variable(i))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${o}/momentum`,variable:U(()=>Tt(s).variable(i))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${o}/mg`,variable:U(()=>Tt(s).variable(i))});let a=Array.isArray(e)?e[n].tensor:e[o];if(a==null)return;let l=this.accumulatedMeanSquares[n].variable,u=this.accumulatedMoments[n].variable;U(()=>{let c=tt(z(l,this.decay),z(Vt(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,m=tt(z(p,this.decay),z(a,1-this.decay)),f=lt(z(a,this.learningRate),he(gt(c,tt(Vt(m),this.epsilon)))),h=tt(z(u,this.momentum),f);l.assign(c),p.assign(m),u.assign(h);let g=gt(s,h);s.assign(g)}else{let p=tt(z(l,this.decay),z(Vt(a),1-this.decay)),m=tt(z(u,this.momentum),lt(z(a,this.learningRate),he(tt(p,this.epsilon))));l.assign(p),u.assign(m);let f=gt(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Dt(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Dt(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Dt(this.accumulatedMoments.map(e=>e.variable))}getWeights(){return V(this,null,function*(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(e){return V(this,null,function*(){e=yield this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,o=!1;this.accumulatedMeanSquares=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedMoments=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};var Q6=[Lp,Pp,zp,Bp,Mp,Vp,pl];function FI(){for(let r of Q6)wN(r)}var Pi={};le(Pi,{CompositeArrayBuffer:()=>Rr,browserFiles:()=>LI,browserHTTPRequest:()=>VI,concatenateArrayBuffers:()=>sC,copyModel:()=>bC,decodeWeights:()=>Pd,decodeWeightsStream:()=>d0,encodeWeights:()=>eC,fromMemory:()=>GI,fromMemorySync:()=>kN,getLoadHandlers:()=>uC,getModelArtifactsForJSON:()=>gp,getModelArtifactsForJSONSync:()=>y0,getModelArtifactsInfoForJSON:()=>ps,getSaveHandlers:()=>lC,getWeightSpecs:()=>df,http:()=>lg,isHTTPScheme:()=>ag,listModels:()=>xC,loadWeights:()=>zI,moveModel:()=>wC,registerLoadRouter:()=>aC,registerSaveRouter:()=>iC,removeModel:()=>yC,weightsLoaderFactory:()=>CN,withSaveHandler:()=>WI,withSaveHandlerSync:()=>UI});var tX="model",eX=".json",rX=".weights.bin";function OI(r){return new Promise(e=>setTimeout(e)).then(r)}var NN=(()=>{class r{constructor(t){if(!W().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(r.URL_SCHEME)&&(t=t.slice(r.URL_SCHEME.length)),(t==null||t.length===0)&&(t=tX),this.modelJsonFileName=t+eX,this.weightDataFileName=t+rX}save(t){return V(this,null,function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let o=Rr.join(t.weightData),n=window.URL.createObjectURL(new Blob([o],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let s=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],i=zd(t,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=a,yield OI(()=>l.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=n,yield OI(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ps(t)}}})}}return r.URL_SCHEME="downloads://",r})();var TN=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}load(){return V(this,null,function*(){return new Promise((e,t)=>{let o=new FileReader;o.onload=n=>{let s=JSON.parse(n.target.result),i=s.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}let l=gp(s,u=>this.loadWeights(u));e(l)},o.onerror=n=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(this.jsonFile)})})}loadWeights(e){let t=[],o=[];for(let i of e)t.push(...i.weights),o.push(...i.paths);let n=this.checkManifestAndWeightFiles(e),s=o.map(i=>this.loadWeightsFile(i,n[i]));return Promise.all(s).then(i=>[t,i])}loadWeightsFile(e,t){return new Promise((o,n)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;o(a)},s.onerror=i=>n(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],o=this.weightsFiles.map(s=>x0(s.name)),n={};for(let s of e)s.paths.forEach(i=>{let a=x0(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),o.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);n[i]=this.weightsFiles[o.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},oX=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(NN.URL_SCHEME)?nX(r.slice(NN.URL_SCHEME.length)):null;fr.registerSaveRouter(oX);function nX(r="model"){return new NN(r)}function LI(r){return new TN(r)}function SN(r,e,t,o){i(r),t=t??0,o=o??1,a(t,o);let n=0,s=l=>(l.then(u=>{let c=t+ ++n/r.length*(o-t);return e(c),u}),l);function i(l){D(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){D(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),D(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(s))}function vN(r,e){return V(this,null,function*(){e==null&&(e={});let t=e.fetchFunc==null?W().platform.fetch:e.fetchFunc,o=r.map(p=>t(p,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?yield Promise.all(o):yield SN(o,e.onProgress,0,.5)).map(p=>p.arrayBuffer());return e.onProgress==null?yield Promise.all(a):yield SN(a,e.onProgress,.5,1)})}function PI(r,e){var t;let o=e.fetchFunc==null?W().platform.fetch:e.fetchFunc,n=0,s;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:i=>V(this,null,function*(){for(var a;n<r.length;){s||(s=(yield o(r[n],e.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:u}=yield s.read();if(l){n++,s=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,n/r.length);continue}i.enqueue(u);return}i.close()})})}function zI(r,e="",t,o){return V(this,null,function*(){return CN(i=>vN(i,{requestInit:o}))(r,e,t)})}function CN(r){return(e,t="",o)=>V(this,null,function*(){let n=e.map(()=>!1),s={},i=o!=null?o.map(()=>!1):[],a=[];if(e.forEach((f,h)=>{let g=0;f.weights.forEach(d=>{let x="quantization"in d?d.quantization.dtype:d.dtype,y=Ei[x]*Qt(d.shape),w=()=>{n[h]=!0,s[h]==null&&(s[h]=[]),s[h].push({manifestEntry:d,groupOffset:g,sizeBytes:y})};o!=null?o.forEach((N,v)=>{N===d.name&&(w(),i[v]=!0)}):w(),a.push(d.name),g+=y})}),!i.every(f=>f)){let f=o.filter((h,g)=>!i[g]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let l=n.reduce((f,h,g)=>(h&&f.push(g),f),[]),u=[];l.forEach(f=>{e[f].paths.forEach(h=>{let g=t+(t.endsWith("/")?"":"/")+h;u.push(g)})});let c=yield r(u),p={},m=0;return l.forEach(f=>{let h=e[f].paths.length,g=new Rr(c.slice(m,m+h));s[f].forEach(x=>{let y=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),w=Pd(y,[x.manifestEntry]);for(let N in w)p[N]=w[N]}),m+=h}),p})}var sX="application/octet-stream",iX="application/json",BI=(()=>{class r{constructor(t,o){if(this.DEFAULT_METHOD="POST",o==null&&(o={}),this.weightPathPrefix=o.weightPathPrefix,this.weightUrlConverter=o.weightUrlConverter,o.fetchFunc!=null?(D(typeof o.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=o.fetchFunc):this.fetch=W().platform.fetch,D(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&D(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,o.requestInit!=null&&o.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=o.requestInit||{},this.loadOptions=o}save(t){return V(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let o=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);o.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],s=zd(t,n);if(o.body.append("model.json",new Blob([JSON.stringify(s)],{type:iX}),"model.json"),t.weightData!=null){let a=Rr.join(t.weightData);o.body.append("model.weights.bin",new Blob([a],{type:sX}),"model.weights.bin")}let i=yield this.fetch(this.path,o);if(i.ok)return{modelArtifactsInfo:ps(t),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)})}loadModelJSON(){return V(this,null,function*(){let t=yield this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let o;try{o=yield t.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=o.modelTopology,s=o.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return o})}load(){return V(this,null,function*(){if(this.loadOptions.streamWeights)return this.loadStream();let t=yield this.loadModelJSON();return gp(t,o=>this.loadWeights(o))})}loadStream(){return V(this,null,function*(){let t=yield this.loadModelJSON(),o=yield this.getWeightUrls(t.weightsManifest),n=df(t.weightsManifest),s=()=>PI(o,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:n,getWeightStream:s})})}getWeightUrls(t){return V(this,null,function*(){let o=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=aX(o),i=this.weightPathPrefix||n,a=[],l=[];for(let u of t)for(let c of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(c)):a.push(i+c+s);return this.weightUrlConverter&&a.push(...yield Promise.all(l)),a})}loadWeights(t){return V(this,null,function*(){let o=yield this.getWeightUrls(t),n=df(t),s=yield vN(o,this.loadOptions);return[n,s]})}}return r.URL_SCHEME_REGEX=/^https?:\/\//,r})();function aX(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),o=r.substring(0,e),n=t>e?r.substring(t):"";return[o+"/",n]}function ag(r){return r.match(BI.URL_SCHEME_REGEX)!=null}var MI=(r,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(o=>ag(o)):t=ag(r),t)return lg(r,e)}return null};fr.registerSaveRouter(MI);fr.registerLoadRouter(MI);function lg(r,e){return new BI(r,e)}function VI(r,e){return lg(r,e)}var Mf=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},ug=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},IN=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function GI(r,e,t,o){let n=arguments;return new IN(kN(...n))}function kN(r,e,t,o){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Mf(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Mf({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Mf({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:o}))}function WI(r){return new ug(r)}function UI(r){return new ug(r)}function lX(r,e){let t=r.shape.length,o=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(o<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${o}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[o-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[o-1]} vs. ${t}`);if(Qt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let n=e.shape,s=n[n.length-1],i=1;for(let p=0;p<n.length-1;++p)i*=n[p];let a=r.shape,l=n.slice();l.pop();let u=1;for(let p=s;p<t;++p)u*=a[p],l.push(a[p]);let c=[...ss(r.shape).map(p=>p/u),1].slice(0,s);return[l,i,u,c]}var gr={};le(gr,{assertParamsValid:()=>cX,computeFlatOffset:()=>dX,computeOutShape:()=>mX,getNormalizedAxes:()=>fX,isSliceContinous:()=>hX,maskToAxes:()=>pX,parseSliceParams:()=>$N,sliceInfo:()=>gX,startForAxis:()=>JI,startIndicesWithElidedDims:()=>XI,stopForAxis:()=>QI,stopIndicesWithElidedDims:()=>YI,stridesForAxis:()=>ZI,stridesWithElidedDims:()=>qI});var EN=-2,uX=-1;function cX(r,e,t){let o=r.shape.length;D(o===e.length,()=>`Error in slice${o}D: Length of begin ${e} must match the rank of the array (${o}).`),D(o===t.length,()=>`Error in slice${o}D: Length of size ${t} must match the rank of the array (${o}).`);for(let n=0;n<o;++n)D(e[n]+t[n]<=r.shape[n],()=>`Error in slice${o}D: begin[${n}] + size[${n}] (${e[n]+t[n]}) would overflow input.shape[${n}] (${r.shape[n]})`)}function pX(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function mX(r,e,t){let o=[];for(let n=0;n<r.length;n++)o[n]=Math.ceil((e[n]-r[n])/t[n]);return o}function qI(r,e,t,o){let n=[...r];for(let s=n.length;s<o.length;s++)n.push(1);for(let s=0;s<t;s++)s===0?n[e]=1:(n.splice(e,0,1),n.pop());return n}function KI(r,e,t){return t<=r?t:t-(e-1)}function jI(r,e){let t=[];for(let o=0;o<r;o++)t.push(e+o);return t}function fX(r,e,t,o,n,s,i,a,l){let u=r.length,c=new Array(u),p=new Array(u),m=new Array(u);if(e.length&&t>0){let f=e[0],h=t+1;c=XI(i,f,h,o,r),p=YI(a,f,h,n,r),m=qI(s,f,h,r)}else for(let f=0;f<u;f++)c[f]=JI(i,o,s,r,f,l),p[f]=QI(a,n,s,r,f,l),m[f]=ZI(s,f,l);return{begin:c,end:p,strides:m}}function XI(r,e,t,o,n){let s=[...n],i=jI(t,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let l=KI(e,t,a),u=o[l];r&1<<l&&(u=0),s[a]=u}return s}function YI(r,e,t,o,n){let s=[...n],i=jI(t,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let l=KI(e,t,a),u=o[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[a]=u}for(let a=0;a<s.length;a++){let l=n[a];s[a]<0&&(s[a]+=l),s[a]=bc(0,s[a],n[a])}return s}function ZI(r,e,t){let o=r[e];return(t&1<<e||o==null)&&(o=1),o}function JI(r,e,t,o,n,s){let i=e[n],a=t[n]||1;(r&1<<n||s&1<<n||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=o[n];return i<0&&(i+=l),i=bc(0,i,l-1),i}function QI(r,e,t,o,n,s){let i=e[n],a=t[n]||1;(r&1<<n||s&1<<n||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=o[n];return i<0&&(i+=l),a>0?i=bc(0,i,l):i=bc(-1,i,l-1),i}function hX(r,e,t){let o=t.length;for(let n=0;n<t.length;n++)if(t[n]>1){o=n;break}for(let n=o+1;n<t.length;n++)if(e[n]>0||t[n]!==r[n])return!1;return!0}function dX(r,e){let t=r.length>0?r[r.length-1]:1;for(let o=0;o<r.length-1;o++)t+=r[o]*e[o];return t}function $N(r,e,t){let o,n=r.shape.length;typeof e=="number"?o=[e,...new Array(n-1).fill(0)]:e.length<n?o=e.concat(new Array(n-e.length).fill(0)):o=e.slice(),o.forEach(i=>{D(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(n).fill(-1):typeof t=="number"?s=[t,...new Array(n-1).fill(-1)]:t.length<n?s=t.concat(new Array(n-t.length).fill(-1)):s=t,s=s.map((i,a)=>i>=0?i:(D(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),r.shape[a]-o[a])),[o,s]}function gX(r,e,t,o,n,s,i,a,l){let u;if(o==null?(u=new Array(e.length),u.fill(1)):u=o,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let w=0;w<p.dims;w++)c&&(1<<w&a)!==0&&p.numAddAxisAfterEllipsis++,1<<w&i&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let m={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};xX(p,m);let f=!0,h=!0,g=!0,d=[],x=[];for(let w=0;w<r.length;++w){if(m.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);let N=!!(m.shrinkAxisMask&1<<w),v=r[w];if(v===-1){d.push(N?1:-1);continue}let k=[m.beginMask&1<<w,m.endMask&1<<w],R=[m.strides[w]>0?0:-1,m.strides[w]>0?v:v-1];if(N&&m.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&m.strides[w]===1;let O=!!(m.beginMask&1<<w&&m.endMask&1<<w);if(m.beginValid&&m.endValid){if(N){let q=m.begin[w]<0?v+m.begin[w]:m.begin[w];if(m.begin[w]=q,m.end[w]=m.begin[w]+1,q<0||q>=v)throw Error(`slice index ${m.begin[w]} of dimension ${w} out of bounds.`)}else m.begin[w]=HI(m.begin[w],0,m.strides[w],v,k,R),m.end[w]=HI(m.end[w],1,m.strides[w],v,k,R);let H=m.strides[w]===1&&m.begin[w]===0&&m.end[w]===v;f=f&&H,h=h&&(w===0&&m.strides[w]===1||H)}else f=f&&m.strides[w]===1&&O,h=h&&(w===0&&m.strides[w]===1||O);let L,M=!1;if(m.beginValid&&m.endValid?(L=m.end[w]-m.begin[w],M=!0):N?(L=1,M=!0):O&&v>=0&&(m.strides[w]<0?L=-v:L=v,M=!0),M){let H;L===0||L<0!=m.strides[w]<0?H=0:H=Math.trunc(L/m.strides[w])+(L%m.strides[w]!==0?1:0),d.push(H)}else d.push(-1)}for(let w=0;w<m.finalShapeGatherIndices.length;++w){let N=m.finalShapeGatherIndices[w];N>=0?x.push(d[N]):N===EN&&x.push(1)}return{finalShapeSparse:x.filter((w,N)=>m.finalShapeGatherIndices[N]!==EN),finalShape:x,isIdentity:f,sliceDim0:h,isSimpleSlice:g,begin:m.begin,end:m.end,strides:m.strides}}function xX(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let o=0;o<r.dims;o++)if(1<<o&r.ellipsisMask){let n=Math.min(e.dims-(r.dims-o)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<n;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=o}else if(1<<o&r.newAxisMask)e.finalShapeGatherIndices.push(EN),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[o]),r.end!=null&&(e.end[t]=r.end[o]),e.strides[t]=r.strides[o],r.beginMask&1<<o&&(e.beginMask|=1<<t),r.endMask&1<<o&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<o?(e.finalShapeGatherIndices.push(uX),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(o)),e.inputShapeGatherIndicesSparse[t]=o,t++}}function HI(r,e,t,o,n,s){if(n[e])return t>0?s[e]:s[e+1&1];{let i=r<0?o+r:r;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var cg=class{static sgd(e){return new pl(e)}static momentum(e,t,o=!1){return new Mp(e,t,o)}static rmsprop(e,t=.9,o=0,n=null,s=!1){return new Vp(e,t,o,n,s)}static adam(e=.001,t=.9,o=.999,n=null){return new zp(e,t,o,n)}static adadelta(e=.001,t=.95,o=null){return new Lp(e,t,o)}static adamax(e=.002,t=.9,o=.999,n=null,s=0){return new Bp(e,t,o,n,s)}static adagrad(e,t=.1){return new Pp(e,t)}};var Du=cg;var yX=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r();function Vf(){return new Promise(r=>yX(()=>r()))}var I={};le(I,{ERF_A1:()=>RX,ERF_A2:()=>FX,ERF_A3:()=>OX,ERF_A4:()=>LX,ERF_A5:()=>PX,ERF_P:()=>_X,PARALLELIZE_THRESHOLD:()=>pg,RowPartitionType:()=>zi,SELU_SCALE:()=>DN,SELU_SCALEALPHA:()=>AN,applyActivation:()=>Eu,assertAndGetBroadcastShape:()=>Rt,assertAxesAreInnerMostDims:()=>kK,assertParamsConsistent:()=>bX,assignToTypedArray:()=>WX,axesAreInnerMostDims:()=>K0,calculateShapes:()=>f6,checkEinsumDimSizes:()=>XX,checkPadOnDimRoundingMode:()=>ye,combineLocations:()=>FC,combineRaggedTensorToTensorShapes:()=>NX,complexWithEvenIndex:()=>MX,complexWithOddIndex:()=>VX,computeConv2DInfo:()=>fu,computeConv3DInfo:()=>CC,computeDefaultPad:()=>O0,computeDilation2DInfo:()=>Dq,computeOptimalWindowSize:()=>CX,computeOutAndReduceShapes:()=>j0,computeOutShape:()=>wX,computePool2DInfo:()=>F0,computePool3DInfo:()=>_q,convertConv2DDataFormat:()=>IC,decodeEinsumEquation:()=>KX,eitherStridesOrDilationsAreOne:()=>Cr,expandShapeToKeepDim:()=>fs,exponent:()=>HX,exponents:()=>UX,fromStringArrayToUint8:()=>g5,fromUint8ToStringArray:()=>d5,getAxesPermutation:()=>X0,getBroadcastDims:()=>DC,getComplexWithIndex:()=>GX,getEinsumComputePath:()=>YX,getEinsumPermutation:()=>jX,getFusedBiasGradient:()=>ku,getFusedDyActivation:()=>Iu,getImageCenter:()=>IX,getInnerMostAxes:()=>EK,getPermuted:()=>EX,getRaggedRank:()=>SX,getReductionAxes:()=>fe,getReshaped:()=>kX,getReshapedPermuted:()=>$X,getRowPartitionTypesHelper:()=>TX,getSliceBeginCoords:()=>AX,getSliceSize:()=>DX,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>t5,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>e5,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>r5,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>s5,getSparseReshapeInputOutputMismatchErrorMessage:()=>a5,getSparseReshapeInputOutputMultipleErrorMessage:()=>i5,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>o5,getSparseReshapeNegativeOutputDimErrorMessage:()=>n5,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>p5,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>l5,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>u5,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>c5,getUndoAxesPermutation:()=>vf,isIdentityPermutation:()=>ZX,log:()=>TH,mergeRealAndImagArrays:()=>zX,prepareAndValidate:()=>lX,prepareSplitSize:()=>QX,segment_util:()=>RN,shouldFuse:()=>$u,slice_util:()=>gr,splitRealAndImagArrays:()=>BX,stridesOrDilationsArePositive:()=>ms,tupleValuesAreOne:()=>Ko,upcastType:()=>er,validateDefaultValueShape:()=>vX,validateInput:()=>m6,validateUpdateShape:()=>sI,warn:()=>cs});function bX(r,e){let t=r[0].length;r.forEach((n,s)=>{D(n.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),D(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let o=r[0];r.forEach((n,s)=>{for(let i=0;i<t;i++)D(i===e||n[i]===o[i],()=>`Error in concat${t}D: Shape of tensors[${s}] (${n}) does not match the shape of the rest (${o}) along the non-concatenated axis ${s}.`)})}function wX(r,e){let t=r[0].slice();for(let o=1;o<r.length;o++)t[e]+=r[o][e];return t}var zi=function(r){return r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS",r}(zi||{});function NX(r,e,t){let o=new Array;if(t==null&&e==null)return o;if(e==null)for(;o.length<r+t.length;)o.push(-1);else o=e.slice();if(t==null)return o;if(r+t.length!==o.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${r+t.length}, but shape.rank = ${o.length}`);for(let n=1;n<t.length;++n){let s=t[n],i=o[o.length-t.length+n],a=o[i];if(s>=0)if(a>=0){if(a!==s)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${n+r}] = ${s} but shape[${n+r}] = ${a}`)}else o[i]=s}return o}function TX(r){let e={FIRST_DIM_SIZE:zi.FIRST_DIM_SIZE,VALUE_ROWIDS:zi.VALUE_ROWIDS,ROW_LENGTHS:zi.ROW_LENGTHS,ROW_SPLITS:zi.ROW_SPLITS,ROW_LIMITS:zi.ROW_LIMITS,ROW_STARTS:zi.ROW_STARTS},t=[];for(let o of r)if(o in e)t.push(e[o]);else break;return t}function SX(r){return r.length===0?0:r[0]===zi.FIRST_DIM_SIZE?r.length-1:r.length}function vX(r,e){if(r==null||e==null)return;let t=r.length,o=e.length;if(t>=o)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${o})`);for(let n=0;n<Math.min(t,o-1);++n){let s=r[n],i=e[n+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${n-r.length}] = ${s} but ragged tensor input.flatValues.shape[${n-r.length}] = ${i}`)}}var pg=30;function CX(r){return r<=pg?r:Sc(r,Math.floor(Math.sqrt(r)))}function IX(r,e,t){let o=t*(typeof r=="number"?r:r[0]),n=e*(typeof r=="number"?r:r[1]);return[o,n]}function kX(r,e,t,o=!0){let n=[];if(o)n=n.concat(e.slice(0)),n.push(r[0]/t),n=n.concat(r.slice(1));else{n=n.concat(r[0]);let s=e.length;for(let i=0;i<s;++i)n=n.concat([r[i+1]/e[i],e[i]]);n=n.concat(r.slice(s+1))}return n}function EX(r,e,t=!0){let o=[];if(t){o.push(e);for(let n=e+1;n<r;++n)n<=2*e?(o.push(n),o.push(n-(e+1))):o.push(n)}else{let n=[],s=[];for(let i=1;i<r;++i)i>=e*2+1||i%2===1?s.push(i):n.push(i);o.push(...n),o.push(0),o.push(...s)}return o}function $X(r,e,t,o=!0){let n=[];o?n.push(r[0]/t):n.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?o?n.push(e[s-1]*r[s]):n.push(r[s]/e[s-1]):n.push(r[s]);return n}function AX(r,e){let t=[0];for(let o=0;o<e;++o)t.push(r[o][0]);return t}function DX(r,e,t){let o=r.slice(0,1);for(let n=0;n<t;++n)o.push(r[n+1]-e[n][0]-e[n][1]);return o}var AN=1.7580993408473768,DN=1.0507009873554805;var _X=.3275911,RX=.254829592,FX=-.284496736,OX=1.421413741,LX=-1.453152027,PX=1.061405429;function zX(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let o=0;o<t.length;o+=2)t[o]=r[o/2],t[o+1]=e[o/2];return t}function BX(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let o=0;o<r.length;o+=2)e[o/2]=r[o],t[o/2]=r[o+1];return{real:e,imag:t}}function MX(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),o=new Float32Array(e);for(let n=0;n<r.length;n+=4)t[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:t,imag:o}}function VX(r){let e=Math.floor(r.length/4),t=new Float32Array(e),o=new Float32Array(e);for(let n=2;n<r.length;n+=4)t[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:t,imag:o}}function GX(r,e){let t=r[e*2],o=r[e*2+1];return{real:t,imag:o}}function WX(r,e,t,o){r[o*2]=e,r[o*2+1]=t}function UX(r,e){let t=new Float32Array(r/2),o=new Float32Array(r/2);for(let n=0;n<Math.ceil(r/2);n++){let s=(e?2:-2)*Math.PI*(n/r);t[n]=Math.cos(s),o[n]=Math.sin(s)}return{real:t,imag:o}}function HX(r,e,t){let o=(t?2:-2)*Math.PI*(r/e),n=Math.cos(o),s=Math.sin(o);return{real:n,imag:s}}var _N="->",qX=/->/g,tk=",",ek="...";function KX(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(qX,"").length)/_N.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${_N}").`);let[o,n]=r.split(_N);D(o.indexOf(ek)===-1,()=>`The ellipsis notation ("${ek}") is not supported yet.`);let s=o.split(tk),i=s.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let m=0;m<n.length;++m){let f=n[m];if(!s.some(h=>h.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let m=0;m<o.length;++m){let f=o[m];a.indexOf(f)===-1&&f!==tk&&a.push(f)}let l=new Array(s.length);for(let m=0;m<i;++m){if(new Set(s[m].split("")).size!==s[m].length)throw new Error(`Found duplicate axes in input component ${s[m]}. Support for duplicate axes in input is not implemented yet.`);l[m]=[];for(let f=0;f<s[m].length;++f)l[m].push(a.indexOf(s[m][f]))}let u=a.length,c=n.length,p=[];for(let m=c;m<u;++m)p.push(m);return{allDims:a,summedDims:p,idDims:l}}function jX(r,e){let t=new Array(r);t.fill(-1);for(let n=0;n<e.length;++n)t[e[n]]=n;let o=[];for(let n=0;n<r;++n)t[n]===-1&&o.push(n);return t=t.filter(n=>n!==-1),{permutationIndices:t,expandDims:o}}function XX(r,e,t){let o=new Array(r);for(let n=0;n<t.length;++n){let s=t[n].shape;for(let i=0;i<e[n].length;++i)o[e[n][i]]===void 0?o[e[n][i]]=s[i]:D(o[e[n][i]]===s[i],()=>`Expected dimension ${o[e[n][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function YX(r,e){let t=r,o=[],n=0;r.length===0&&t.push(-1),n=r.length+1;for(let i=0;i<n;++i)o.push([]);let s=[];for(let i=0;i<t.length;++i){let a=t[i],l=JX(e,a);for(let u of l)s.indexOf(u)===-1&&(o[i].push(u),s.push(u))}return{path:t,steps:o}}function ZX(r){return r.every((e,t)=>e===t)}function JX(r,e){let t=[];for(let o=0;o<r.length;++o)(r[o].length===0||r[o].indexOf(e)!==-1||e===-1)&&t.push(o);return t}function QX(r,e,t=0){let o=[];if(typeof e=="number")D(r.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),o=new Array(e).fill(r.shape[t]/e);else{let n=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);D(n<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let i=e.reduce((a,l)=>l>0?a+l:a);e[s]=r.shape[t]-i}D(r.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),o=e}return o}function t5(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function e5(r,e){return`indices(${r}, 0) is invalid: ${e} < 0`}function r5(r,e,t){return`indices(${r}, 0) is invalid: ${e} >= ${t}`}function o5(r,e){return`only one output dimension may be -1, not both ${r} and ${e}`}function n5(r,e){return`size ${r} must be non-negative, not ${e}`}function s5(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function i5(r,e){let t=Qt(r),o=Qt(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${o}. inputShape=${r} outputShape= ${e}`}function a5(r,e){let t=Qt(r),o=Qt(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${o}. inputShape=${r} outputShape=${e}`}function l5(){return"segment ids must be >= 0"}function u5(){return"segment ids are not increasing"}function c5(r,e){return`Segment id ${r} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function p5(r,e,t){return`Bad: indices[${r}] == ${e} out of range [0, ${t})`}var RN={};le(RN,{collectGatherOpShapeInfo:()=>h5,computeOutShape:()=>f5,segOpComputeOptimalWindowSize:()=>m5});function m5(r,e){let t=!1,o;for(r<=pg?(o=r,t=!0):o=Sc(r,Math.floor(Math.sqrt(r)));!t;)o>e||o===r?t=!0:o=Sc(r,o+1);return o}function f5(r,e,t){let o=[],n=r.length;for(let s=0;s<n;s++)s!==e?o.push(r[s]):o.push(t);return o}function h5(r,e,t,o){let n=e.shape.length,s=r.shape.length;if(o!==0&&(o<-n||o>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${o}`);if(o<0&&(o+=n),o>s)throw new Error(`batchDims (${o}) must be less than rank(x) (
    ${s}).`);if(t<o)throw new Error(`batchDims (${o}) must be less than or equal to axis (${t}).`);for(let p=0;p<o;++p)if(r.shape[p]!==e.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${e.shape[p]}.`);let i=r.shape[t],a=[],l=1,u=1,c=1;for(let p=0;p<o;++p)a.push(r.shape[p]),l*=r.shape[p];for(let p=o;p<t;p++)a.push(r.shape[p]),u*=r.shape[p];for(let p=o;p<n;p++)a.push(e.shape[p]);for(let p=t+1;p<s;p++)a.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:a}}function d5(r){try{return r.map(e=>hp(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function g5(r){return r.map(e=>fp(e))}var Lr={};le(Lr,{nonMaxSuppressionV3Impl:()=>eg,nonMaxSuppressionV4Impl:()=>rg,nonMaxSuppressionV5Impl:()=>og,whereImpl:()=>lI});FI();var mg={kernelName:ca,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(r,Vn(nt(t,"float32"),-1))}}};var rk={kernelName:Os,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let o=Vt(nt(t,"float32")),n=he(gt(Ct(1),o));return Yt(lt(r,n))}}}};var ok={kernelName:Ls,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let o=he(gt(Vt(nt(t,"float32")),1));return lt(r,o)}}}};var nk={kernelName:Fn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Rt(t.shape,o.shape);return{a:()=>{let a=r,l=fe(t.shape,n);return l.length>0&&(a=ft(a,l)),B(a,t.shape)},b:()=>{let a=r,l=fe(o.shape,n);return l.length>0&&(a=ft(a,l)),B(a,o.shape)}}}};var sk={kernelName:Cc,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((o,n)=>{t[n]=()=>r.clone()}),t}};var ik={kernelName:pa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Tt(t)}}};var ak={kernelName:ma,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Tt(t)}}};var lk={kernelName:Ps,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>lt(r,he(gt(Ct(1),Vt(nt(t,"float32")))))}}};var uk={kernelName:zs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let o=he(tt(Ct(1),Vt(nt(t,"float32"))));return lt(r,o)}}}};var ck={kernelName:Vs,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Rt(t.shape,o.shape);return{a:()=>{let a=tt(Vt(t),Vt(o)),l=z(r,lt(o,a)),u=fe(t.shape,n);return u.length>0&&(l=ft(l,u)),B(l,t.shape)},b:()=>{let a=tt(Vt(t),Vt(o)),l=Yt(z(r,lt(t,a))),u=fe(o.shape,n);return u.length>0&&(l=ft(l,u)),B(l,o.shape)}}}};var pk={kernelName:Bs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>lt(r,tt(Vt(nt(t,"float32")),1))}}};var mk={kernelName:Ms,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>lt(r,gt(Ct(1),Vt(nt(t,"float32"))))}}};function x5(r,e,t,o,n,s){let i=E(r,"dy","avgPool3dGrad"),a=E(e,"input","avgPool3dGrad"),l=i,u=a,c=!1;a.rank===4&&(c=!0,l=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=B(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),D(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),ye("avgPool3dGrad",n,s);let p={dy:l,input:u},m={filterSize:t,strides:o,pad:n,dimRoundingMode:s},f=$.runKernel($c,p,m);return c?B(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var fk=A({avgPool3dGrad_:x5});var hk={kernelName:ha,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{filterSize:n,strides:s,pad:i,dimRoundingMode:a}=t;return{x:()=>fk(r,o,n,s,i,a)}}};function y5(r,e,t,o,n){let s=E(r,"dy","avgPoolGrad"),i=E(e,"input","avgPoolGrad");D(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let a=i,l=s,u=!1;i.rank===3&&(u=!0,a=B(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),D(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);let c={dy:l,input:a},p={filterSize:t,strides:o,pad:n},m=$.runKernel(Ec,c,p);return u?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var dk=A({avgPoolGrad_:y5});var gk={kernelName:fa,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{filterSize:n,strides:s,pad:i}=t;return{x:()=>dk(r,o,n,s,i)}}};var xk={kernelName:da,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[o,n]=e,{transposeA:s,transposeB:i}=t;return!s&&!i?{a:()=>Xt(r,n,!1,!0),b:()=>Xt(o,r,!0,!1)}:!s&&i?{a:()=>Xt(r,n,!1,!1),b:()=>Xt(r,o,!0,!1)}:s&&!i?{a:()=>Xt(n,r,!1,!0),b:()=>Xt(o,r,!1,!1)}:{a:()=>Xt(n,r,!0,!0),b:()=>Xt(r,o,!0,!0)}}};var yk={kernelName:ga,gradFunc:(r,e,t)=>{let{blockShape:o,crops:n}=t;return{x:()=>Ap(r,o,n)}}};var bk={kernelName:g1,gradFunc:(r,e,t)=>{let o=t,n=o.inputShape,s=o.shape,i=Array.from(s);for(let l=n.length-1;l>=0;l--)if(n[l]===s[l])i[l]=1;else if(n[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${s}].`);let a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>ft(r,a,!0)}}};var wk={kernelName:is,gradFunc:r=>({x:()=>r.clone()})};var Nk={kernelName:Gs,gradFunc:r=>({x:()=>Tt(r)})};var Tk={kernelName:Ws,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{clipValueMin:n,clipValueMax:s}=t;return{x:()=>Se(Vr(fo(o,n),pn(o,s)),r,Tt(r))}}};var Sk={kernelName:xa,inputsToSave:["x"],gradFunc:mg.gradFunc};var vk={kernelName:ya,saveAllInputs:!0,gradFunc:(r,e,t)=>{let o=e.map(l=>l.shape),{axis:n}=t,s=sr(n,e[0].shape)[0],i=o.map(l=>l[s]);return ur(r,i,s).map(l=>()=>l)}};var Ck={kernelName:ba,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[o,n]=e,{dilations:s,strides:i,pad:a,dataFormat:l}=t;return D(Ko(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Sp(o.shape,r,n,i,a,l),filter:()=>Op(o,r,n.shape,i,a,l)}}};var Ik={kernelName:wa,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[o,n]=e,{strides:s,pad:i,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>ko(r,n,s,i,a,1,l),filter:()=>Op(r,o,n.shape,s,i,a,l)}}};function b5(r,e,t,o,n){let s=r;r.rank===4&&(s=B(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let i=e;i.rank===4&&(i=B(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),D(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),D(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),D(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),D(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),D(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);let a={x:s,dy:i},l={strides:o,pad:n,filterShape:t};return $.runKernel(Rc,a,l)}var kk=A({conv3DBackpropFilter_:b5});var Ek={kernelName:Na,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:o,strides:n,pad:s}=t;D(Ko(o),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);let[i,a]=e;return{x:()=>Wd(i.shape,r,a,n,s),filter:()=>kk(i,r,a.shape,n,s)}}};var $k={kernelName:Us,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(Yt(_f(nt(t,"float32"))),r)}}};var Ak={kernelName:Hs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(Rf(nt(t,"float32")),r)}}};var Dk={kernelName:Ta,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{axis:n,exclusive:s,reverse:i}=t;return{x:()=>{let a=X0([n],o.rank),l=Ud(r,n,s,!i);return a!=null&&(l=Bt(l,a)),l}}}};var _k={kernelName:Sa,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:o,strides:n,pad:s,dimRoundingMode:i}=t,a=o??[1,1];D(Ko(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[l,u]=e;return D(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),D(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),D(Cr(n,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${n} and dilations '${a}'.`),ye("depthwiseConv2d",s,i),{x:()=>tg(l.shape,r,u,n,s,a,i),filter:()=>Qd(l,r,u.shape,n,s,a,i)}}};var Rk={kernelName:va,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[o,n]=e,s={x:o,filter:n,dy:r},i={x:o,filter:n,dy:r};return{x:()=>$.runKernel(af,s,t),filter:()=>$.runKernel(lf,i,t)}}};var Fk={kernelName:Ks,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,o={dy:r,y:t};return{x:()=>$.runKernel(Gc,o)}}};var Ok={kernelName:js,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,o=z(hr(Yt(Vt(t))),2/Math.sqrt(Math.PI));return{x:()=>z(r,o)}}};var Lk={kernelName:Xs,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(r,t)}}};var Pk={kernelName:Ca,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>B(r,t.shape)}}};var zk={kernelName:Ys,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(r,hr(t))}}};var Bk={kernelName:Zs,gradFunc:r=>({x:()=>Tt(r)})};var Mk={kernelName:Js,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Rt(t.shape,o.shape);return{a:()=>{let a=lt(r,nt(o,"float32")),l=fe(t.shape,n);return l.length>0?B(ft(a,l),t.shape):a},b:()=>{let a=z(r,nt(t,"float32")),l=fe(o.shape,n);l.length>0&&(a=B(ft(a,l),o.shape));let u=Vt(o);return Yt(lt(a,nt(u,"float32")))}}}};var Vk={kernelName:Ia,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:o}=t,[n,s,i,a]=e,l=a??Ct(1),u=fe(s.shape,n.shape),c=[];if(s.rank===1){for(let N=0;N<n.shape.length-1;++N)c.push(n.shape[N]);c.push(1)}let p=gt(n,s),m=z(r,l),f=$f(tt(i,Ct(o))),h=z(z(z(f,f),f),Ct(-.5));return{x:()=>s.rank===1?B(z(z(r,Fr(B(f,[1,1,1,s.shape[0]]),c)),l),n.shape):B(z(z(r,f),l),n.shape),mean:()=>{let N=z(z(f,Ct(-1)),m);return s.rank===1&&(N=ft(N,u)),B(N,s.shape)},variance:()=>{let N=z(z(h,p),m);return s.rank===1&&(N=ft(N,u)),B(N,s.shape)},scale:()=>{let N=z(p,f),v=z(r,N);return s.rank===1&&(v=ft(v,u)),B(v,s.shape)},offset:()=>{let N=r;return s.rank===1&&(N=ft(N,u)),B(N,s.shape)}}}};var Uk={kernelName:ka,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[o,n]=e,{axis:s,batchDims:i}=t,a=sr(s,o.shape)[0],l=(u,c,p)=>()=>{let m=u.shape,f=c.size,h=m.slice(0,a),g=h.length,d=m.slice(s,m.length).slice(1),x=d.length,y=Gk(0,g),w=Gk(g+1,g+1+x),N=Wk([h,[f],d]),v=B(p,N),k=B(c,[f]),R=Wk([[g],y,w]),O=Bt(v,R),L=Jd(O,k,u.shape[a]),M=vf(R);return L=Bt(L,M),L};if(i===1){let u=o.shape[0],c=o.split(u,0);return{x:()=>ir(c.map((f,h)=>l(f,n.slice(h,1),r.slice(h,1))())).reshape(o.shape),indices:()=>n}}else return{x:l(o,n,r),indices:()=>n}}};function Gk(r,e){let t=[];for(let o=r;o<e;++o)t.push(o);return t}function Wk(r){let e=[];for(let t=0;t<r.length;++t)for(let o=0;o<r[t].length;++o)e.push(r[t][o]);return e}var Hk={kernelName:Qs,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e;return{a:()=>Tt(t),b:()=>Tt(o)}}};var qk={kernelName:as,gradFunc:r=>({x:()=>nt(r,"float32")})};var Kk={kernelName:ti,gradFunc:r=>({x:()=>Tt(r)})};var jk={kernelName:ei,gradFunc:r=>({x:()=>Tt(r)})};var Xk={kernelName:ri,gradFunc:r=>({x:()=>Tt(r)})};var Yk={kernelName:Ea,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{alpha:n}=t,s=Ve(o,0);return{x:()=>Se(s,r,z(r,n))}}};var Zk={kernelName:ni,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>lt(r,tt(t,1))}}};var Jk={kernelName:oi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>lt(r,nt(t,"float32"))}}};var Qk={kernelName:y1,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[o]=e,{axis:n}=t;return{logits:()=>{let i=hr(o);return gt(r,z(ft(r,n,!0),i))}}}};function w5(r,e,t,o=5,n=1,s=1,i=.5){let a={x:r,y:e,dy:t},l={depthRadius:o,bias:n,alpha:s,beta:i};return $.runKernel(jc,a,l)}var tE=A({localResponseNormalizationBackprop_:w5});var eE={kernelName:$a,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[o,n]=e,{depthRadius:s,bias:i,alpha:a,beta:l}=t;return{x:()=>tE(o,n,r,s,i,a,l)}}};function fg(r,e,t,o){return e.rank<t.rank&&(e=B(e,fs(e.shape,o))),r.rank<t.rank&&(r=B(r,fs(r.shape,o))),{x:()=>z(r,nt(Xr(t,e),r.dtype))}}var FN={kernelName:Aa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let o=t,{reductionIndices:n}=o,s=e[0],i=e[1],a=sr(n,s.shape),l=fg(r,i,s,a);return{x:()=>l.x()}}};var rE={kernelName:si,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e;return{a:()=>z(r,nt(fo(t,o),"float32")),b:()=>z(r,nt(bu(t,o),"float32"))}}};function N5(r,e,t,o,n,s,i){let a=E(r,"dy","maxPool3dGrad"),l=E(e,"input","maxPool3dGrad"),u=E(t,"output","maxPool3dGrad"),c=a,p=l,m=u,f=!1;l.rank===4&&(f=!0,c=B(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),p=B(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=B(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),D(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),D(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),D(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),ye("maxPool3dGrad",s,i);let h={dy:c,input:p,output:m},g={filterSize:o,strides:n,pad:s,dimRoundingMode:i},d=$.runKernel(Yc,h,g);return f?B(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var oE=A({maxPool3dGrad_:N5});var nE={kernelName:_a,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[o,n]=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=t;return{x:()=>oE(r,o,n,s,i,a,l)}}};function T5(r,e,t,o,n,s,i){let a=E(r,"dy","maxPoolGrad"),l=E(e,"input","maxPoolGrad"),u=E(t,"output","maxPoolGrad");D(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),D(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),D(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),ye("maxPoolGrad",s,i);let c={dy:a,input:l,output:u},p={filterSize:o,strides:n,pad:s,dimRoundingMode:i};return $.runKernel(Xc,c,p)}var sE=A({maxPoolGrad_:T5});var iE={kernelName:Da,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[o,n]=e,{filterSize:s,strides:i,pad:a}=t;return{x:()=>sE(r,o,n,s,i,a)}}};var aE={kernelName:Ra,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{axis:n}=t,s=sr(n,o.shape),a=j0(o.shape,s)[1],l=Qt(a);return{x:()=>{let c=o.shape.slice();s.forEach(f=>{c[f]=1});let p=B(r,c);return lt(z(p,Zr(o.shape,"float32")),l)}}}};var lE={kernelName:Fa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let o=t,{axis:n}=o,[s,i]=e,a=sr(n,s.shape),l=fg(r,i,s,a);return{x:()=>l.x()}}};var uE={kernelName:ii,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e;return{a:()=>z(r,nt(pn(t,o),"float32")),b:()=>z(r,nt(Ve(t,o),"float32"))}}};var cE={kernelName:Oa,inputsToSave:["x"],gradFunc:(r,e,t)=>{let o=e[0],{paddings:n}=t,s=n.map(i=>i[0]);return{x:()=>qt(r,s,o.shape)}}};var pE={kernelName:ai,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Rt(t.shape,o.shape);return{a:()=>{let a=fe(t.shape,n);return a.length>0?B(ft(r,a),t.shape):r},b:()=>{let a=z(r,Yt(Oi(lt(t,o)))),l=fe(o.shape,n);return l.length>0?B(ft(a,l),o.shape):a}}}};var mE={kernelName:li,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Rt(t.shape,o.shape);return{a:()=>{let a=z(r,nt(o,"float32")),l=fe(t.shape,n);return l.length>0?B(ft(a,l),t.shape):a},b:()=>{let a=z(r,nt(t,"float32")),l=fe(o.shape,n);return l.length>0?B(ft(a,l),o.shape):a}}}};var fE={kernelName:La,gradFunc:r=>({x:()=>Yt(r)})};var hE={kernelName:za,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>ve(t.shape,"float32")}}};var dE={kernelName:Pa,gradFunc:r=>({x:()=>Tt(r)})};var gE={kernelName:Ba,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:o}=t;return Gr(r,o).map(s=>()=>s)}};var ON={kernelName:Ma,inputsToSave:["x"],gradFunc:(r,e,t)=>{let o=e[0],{paddings:n}=t,s=n.map(i=>i[0]);return{x:()=>qt(r,s,o.shape)}}};var xE={kernelName:ui,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,o,n]=e,s=t,i=o,a=Rt(s.shape,i.shape);return{a:()=>{let c=nt(i,"float32"),p=z(r,z(c,mo(s,gt(c,Ct(1))))),m=fe(s.shape,a);return m.length>0&&(p=ft(p,m)),B(p,s.shape)},b:()=>{let c=Ve(s,0),p=Se(c,Yr(s),Tt(s)),m=z(r,z(n,p)),f=fe(i.shape,a);return f.length>0&&(m=ft(m,f)),B(m,i.shape)}}}};var yE={kernelName:Va,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,o]=e,n=Ve(t,0);return{x:()=>Se(n,r,z(r,o)),alpha:()=>{let s=Se(n,Tt(r),z(r,t)),i=fe(o.shape,r.shape);return i.length>0&&(s=ft(s,i)),B(s,o.shape)}}}};function S5(r,e,t){let o=r.shape.slice();o[t]=1;let n=B(e,o),s=Tf(r,t,!0,!1),i=Tf(r,t,!0,!0),a=z(s,i);return z(n,a)}function v5(r,e,t){let o=r.shape.length,n=o-t.length,s=I.getAxesPermutation(t,o),i=r;s!=null&&(i=Bt(r,s));let a=i.shape.slice(),u=a.splice(o-t.length,t.length).reduce((m,f)=>m*f,1);a.push(u);let c=i.reshape(a),p=S5(c,e,n);if(p=p.reshape(i.shape),s!=null){let m=I.getUndoAxesPermutation(s);p=Bt(p,m)}return p}var bE={kernelName:Ga,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{axis:n}=t,s=[];return n==null?s=o.shape.map((i,a)=>a):typeof n=="number"?s=[n]:s=n,{x:()=>v5(o,r,s)}}};var wE={kernelName:qs,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Rt(t.shape,o.shape);return{a:()=>{let a=lt(r,nt(o,"float32")),l=fe(t.shape,n);return l.length>0?B(ft(a,l),t.shape):a},b:()=>{let a=z(r,nt(t,"float32")),l=fe(o.shape,n);l.length>0&&(a=B(ft(a,l),o.shape));let u=Vt(o);return Yt(lt(a,nt(u,"float32")))}}}};var NE={kernelName:ci,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>lt(r,Yt(Vt(t)))}}};var TE={kernelName:mi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,o=z(pn(t,6),Vn(t));return{x:()=>z(r,nt(o,"float32"))}}};var SE={kernelName:pi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(r,nt(Vn(t),"float32"))}}};var vE={kernelName:Wa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>B(r,t.shape)}}};var CE={kernelName:Ha,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[o]=e,n={dy:r,images:o};return{images:()=>$.runKernel(op,n,t)}}};var IE={kernelName:Ua,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[o]=e,n={dy:r,images:o};return{images:()=>$.runKernel(rp,n,t)}}};var kE={kernelName:qa,gradFunc:(r,e,t)=>{let{dims:o}=t,n=sr(o,r.shape);return{x:()=>Yo(r,n)}}};var EE={kernelName:fi,gradFunc:r=>({x:()=>Tt(r)})};var $E={kernelName:hi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Yt(lt(r,z(mo(t,1.5),2)))}}};var AE={kernelName:Ka,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>nt(Tt(t),"float32"),t:()=>z(r,nt(t,r.dtype)),e:()=>z(r,nt(kp(t),r.dtype))}}};var DE={kernelName:di,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let o=Ve(t,Ct(0)),n=Ct(AN),s=Ct(DN),i=z(r,s),a=z(z(r,n),hr(nt(t,"float32")));return Se(o,i,a)}}}};var _E={kernelName:bi,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(r,z(t,gt(Ct(1),t)))}}};var RE={kernelName:yi,gradFunc:r=>({x:()=>Tt(r)})};var FE={kernelName:gi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(gu(nt(t,"float32")),r)}}};var OE={kernelName:xi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(Nf(nt(t,"float32")),r)}}};var LE={kernelName:ja,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{begin:n,size:s}=t,i=o.shape,[a,l]=$N(o,n,s),u=[];for(let c=0;c<r.rank;c++)u.push([a[c],i[c]-a[c]-l[c]]);return{x:()=>Nu(r,u)}}};var PE={kernelName:Ja,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[o]=e,{dim:n}=t,s=!0,i=z(r,o);return{logits:()=>gt(i,z(ft(i,[n],s),o))}}};var zE={kernelName:wi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(r,cn(t))}}};var LN={kernelName:Ya,gradFunc:(r,e,t)=>{let{blockShape:o,paddings:n}=t;return{x:()=>Tp(r,o,n)}}};var PN={kernelName:Za,gradFunc:(r,e,t)=>{let{axis:o}=t;return{x:()=>Te(r,o)}}};var BE={kernelName:Ni,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>lt(r,z(he(nt(t,"float32")),2))}}};var ME={kernelName:np,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(r,z(nt(t,"float32"),2))}}};var VE={kernelName:Ti,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Ct(2);return{a:()=>z(r,z(n,gt(t,o))),b:()=>z(r,z(n,gt(o,t)))}}};var GE={kernelName:Ii,gradFunc:r=>({x:()=>Tt(r)})};var WE={kernelName:Si,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,o]=e,n=Rt(t.shape,o.shape);return{a:()=>{let a=r,l=fe(t.shape,n);return l.length>0&&(a=ft(a,l)),B(a,t.shape)},b:()=>{let a=r,l=fe(o.shape,n);return l.length>0&&(a=ft(a,l)),B(Yt(a),o.shape)}}}};var UE={kernelName:Xa,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,n=o.shape.slice(),{axis:s}=t;sr(s,o.shape).forEach(u=>{n[u]=1});let a=B(r,n),l=z(a,Zr(o.shape,"float32"));return{x:()=>l}}};var HE={kernelName:vi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>lt(r,Vt(gu(t)))}}};var qE={kernelName:Ci,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(gt(Ct(1),Vt(t)),r)}}};var KE={kernelName:ls,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[o]=e,{reps:n}=t;return{x:()=>{let i=Tt(o);if(o.rank===1)for(let a=0;a<n[0];++a)i=tt(i,qt(r,[a*o.shape[0]],[o.shape[0]]));else if(o.rank===2)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)i=tt(i,qt(r,[a*o.shape[0],l*o.shape[1]],[o.shape[0],o.shape[1]]));else if(o.rank===3)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)for(let u=0;u<n[2];++u)i=tt(i,qt(r,[a*o.shape[0],l*o.shape[1],u*o.shape[2]],[o.shape[0],o.shape[1],o.shape[2]]));else if(o.rank===4)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)for(let u=0;u<n[2];++u)for(let c=0;c<n[3];++c)i=tt(i,qt(r,[a*o.shape[0],l*o.shape[1],u*o.shape[2],c*o.shape[3]],[o.shape[0],o.shape[1],o.shape[2],o.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${o.rank} tensors yet.`);return i}}}};var jE={kernelName:us,gradFunc:(r,e,t)=>{let o=t,{perm:n}=o,s=vf(n);return{x:()=>Bt(r,s)}}};var XE={kernelName:Qa,gradFunc:(r,e,t)=>{let o=t,{axis:n}=o;return{value:()=>ir(r,n)}}};var YE={kernelName:tl,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>C5(r,t)}}};function C5(r,e){let t=$o(e,Tt(e)),o=xu(r,t),n=fo(e,Ct(0,"int32")),s=o.rank-n.rank;for(let a=0;a<s;++a)n=Ze(n,a+1);n=Vr(n,Zr(o.shape,"bool"));let i=Tt(o);return Se(n,o,i)}var ZE={kernelName:el,gradFunc:r=>({x:()=>Tt(r)})};var I5=[mg,rk,ok,nk,sk,ik,ak,lk,uk,ck,pk,mk,hk,gk,xk,yk,bk,wk,Nk,Tk,Sk,vk,Ik,Ck,Ek,$k,Ak,Dk,_k,Rk,wE,Fk,Ok,Lk,Pk,zk,Mk,Bk,Vk,Uk,Hk,qk,Kk,jk,Xk,Yk,Zk,Jk,Qk,eE,FN,FN,rE,nE,iE,aE,lE,uE,cE,pE,mE,fE,hE,dE,gE,ON,ON,xE,yE,bE,NE,TE,SE,vE,CE,IE,kE,EE,$E,AE,DE,_E,RE,FE,OE,LE,PE,zE,LN,LN,PN,PN,BE,VE,ME,GE,WE,UE,HE,qE,KE,jE,XE,YE,ZE];for(let r of I5)N1(r);P().prototype.abs=function(){return this.throwIfDisposed(),rr(this)};P().prototype.acos=function(){return this.throwIfDisposed(),k0(this)};P().prototype.acosh=function(){return this.throwIfDisposed(),E0(this)};P().prototype.add=function(r){return this.throwIfDisposed(),tt(this,r)};P().prototype.all=function(r,e){return this.throwIfDisposed(),gf(this,r,e)};P().prototype.any=function(r,e){return this.throwIfDisposed(),wp(this,r,e)};P().prototype.argMax=function(r){return this.throwIfDisposed(),Ai(this,r)};P().prototype.argMin=function(r){return this.throwIfDisposed(),SC(this,r)};P().prototype.asScalar=function(){return this.throwIfDisposed(),D(this.size===1,()=>"The array must have only 1 element."),B(this,[])};P().prototype.asType=function(r){return this.throwIfDisposed(),nt(this,r)};P().prototype.as1D=function(){return this.throwIfDisposed(),B(this,[this.size])};P().prototype.as2D=function(r,e){return this.throwIfDisposed(),B(this,[r,e])};P().prototype.as3D=function(r,e,t){return this.throwIfDisposed(),B(this,[r,e,t])};P().prototype.as4D=function(r,e,t,o){return this.throwIfDisposed(),B(this,[r,e,t,o])};P().prototype.as5D=function(r,e,t,o,n){return this.throwIfDisposed(),B(this,[r,e,t,o,n])};P().prototype.asin=function(){return this.throwIfDisposed(),$0(this)};P().prototype.asinh=function(){return this.throwIfDisposed(),A0(this)};P().prototype.atan=function(){return this.throwIfDisposed(),D0(this)};P().prototype.atan2=function(r){return this.throwIfDisposed(),vC(this,r)};P().prototype.atanh=function(){return this.throwIfDisposed(),_0(this)};P().prototype.avgPool=function(r,e,t,o){return this.throwIfDisposed(),hu(this,r,e,t,o)};P().prototype.batchToSpaceND=function(r,e){return this.throwIfDisposed(),Tp(this,r,e)};P().prototype.batchNorm=function(r,e,t,o,n){return this.throwIfDisposed(),ll(this,r,e,t,o,n)};P().prototype.broadcastTo=function(r){return this.throwIfDisposed(),Di(this,r)};P().prototype.cast=function(r){return this.throwIfDisposed(),nt(this,r)};P().prototype.ceil=function(){return this.throwIfDisposed(),M0(this)};P().prototype.clipByValue=function(r,e){return this.throwIfDisposed(),Ir(this,r,e)};P().prototype.concat=function(r,e){return this.throwIfDisposed(),r instanceof te&&(r=[r]),Te([this,...r],e)};P().prototype.conv1d=function(r,e,t,o,n,s){return this.throwIfDisposed(),bf(this,r,e,t,o,n,s)};P().prototype.conv2dTranspose=function(r,e,t,o,n){return this.throwIfDisposed(),wf(this,r,e,t,o,n)};P().prototype.conv2d=function(r,e,t,o,n,s){return this.throwIfDisposed(),ko(this,r,e,t,o,n,s)};P().prototype.cos=function(){return this.throwIfDisposed(),gu(this)};P().prototype.cosh=function(){return this.throwIfDisposed(),Nf(this)};P().prototype.cumprod=function(r,e,t){return this.throwIfDisposed(),Tf(this,r,e,t)};P().prototype.cumsum=function(r,e,t){return this.throwIfDisposed(),Ud(this,r,e,t)};P().prototype.depthToSpace=function(r,e){return this.throwIfDisposed(),$C(this,r,e)};P().prototype.depthwiseConv2d=function(r,e,t,o,n,s){return this.throwIfDisposed(),Ri(this,r,e,t,o,n,s)};P().prototype.dilation2d=function(r,e,t,o,n){return this.throwIfDisposed(),AC(this,r,e,t,o,n)};P().prototype.divNoNan=function(r){return this.throwIfDisposed(),_C(this,r)};P().prototype.div=function(r){return this.throwIfDisposed(),lt(this,r)};P().prototype.dot=function(r){return this.throwIfDisposed(),RC(this,r)};P().prototype.elu=function(){return this.throwIfDisposed(),Fi(this)};P().prototype.equal=function(r){return this.throwIfDisposed(),Xr(this,r)};P().prototype.erf=function(){return this.throwIfDisposed(),Sf(this)};P().prototype.euclideanNorm=function(r,e){return this.throwIfDisposed(),LC(this,r,e)};P().prototype.exp=function(){return this.throwIfDisposed(),hr(this)};P().prototype.expandDims=function(r){return this.throwIfDisposed(),Ze(this,r)};P().prototype.expm1=function(){return this.throwIfDisposed(),Z0(this)};P().prototype.fft=function(){return this.throwIfDisposed(),Lf(this)};P().prototype.flatten=function(){return this.throwIfDisposed(),B(this,[this.size])};P().prototype.floor=function(){return this.throwIfDisposed(),Oi(this)};P().prototype.floorDiv=function(r){return this.throwIfDisposed(),Gd(this,r)};P().prototype.gather=function(r,e,t){return this.throwIfDisposed(),xu(this,r,e,t)};P().prototype.greaterEqual=function(r){return this.throwIfDisposed(),fo(this,r)};P().prototype.greater=function(r){return this.throwIfDisposed(),Ve(this,r)};P().prototype.ifft=function(){return this.throwIfDisposed(),Fp(this)};P().prototype.irfft=function(){return this.throwIfDisposed(),fN(this)};P().prototype.isFinite=function(){return this.throwIfDisposed(),J0(this)};P().prototype.isInf=function(){return this.throwIfDisposed(),Q0(this)};P().prototype.isNaN=function(){return this.throwIfDisposed(),tN(this)};P().prototype.leakyRelu=function(r){return this.throwIfDisposed(),yu(this,r)};P().prototype.lessEqual=function(r){return this.throwIfDisposed(),pn(this,r)};P().prototype.less=function(r){return this.throwIfDisposed(),bu(this,r)};P().prototype.localResponseNormalization=function(r,e,t,o){return this.throwIfDisposed(),PC(this,r,e,t,o)};P().prototype.logSigmoid=function(){return this.throwIfDisposed(),rN(this)};P().prototype.logSoftmax=function(r){return this.throwIfDisposed(),If(this,r)};P().prototype.logSumExp=function(r,e){return this.throwIfDisposed(),kf(this,r,e)};P().prototype.log=function(){return this.throwIfDisposed(),Yr(this)};P().prototype.log1p=function(){return this.throwIfDisposed(),Cf(this)};P().prototype.logicalAnd=function(r){return this.throwIfDisposed(),Vr(this,r)};P().prototype.logicalNot=function(){return this.throwIfDisposed(),kp(this)};P().prototype.logicalOr=function(r){return this.throwIfDisposed(),qd(this,r)};P().prototype.logicalXor=function(r){return this.throwIfDisposed(),zC(this,r)};P().prototype.matMul=function(r,e,t){return this.throwIfDisposed(),Xt(this,r,e,t)};P().prototype.maxPool=function(r,e,t,o){return this.throwIfDisposed(),wu(this,r,e,t,o)};P().prototype.max=function(r,e){return this.throwIfDisposed(),kr(this,r,e)};P().prototype.maximum=function(r){return this.throwIfDisposed(),$o(this,r)};P().prototype.mean=function(r,e){return this.throwIfDisposed(),Ie(this,r,e)};P().prototype.min=function(r,e){return this.throwIfDisposed(),ul(this,r,e)};P().prototype.minimum=function(r){return this.throwIfDisposed(),ds(this,r)};P().prototype.mirrorPad=function(r,e){return this.throwIfDisposed(),BC(this,r,e)};P().prototype.mod=function(r){return this.throwIfDisposed(),MC(this,r)};P().prototype.mul=function(r){return this.throwIfDisposed(),z(this,r)};P().prototype.neg=function(){return this.throwIfDisposed(),Yt(this)};P().prototype.norm=function(r,e,t){return this.throwIfDisposed(),zn(this,r,e,t)};P().prototype.notEqual=function(r){return this.throwIfDisposed(),cl(this,r)};P().prototype.oneHot=function(r,e=1,t=0){return this.throwIfDisposed(),$p(this,r,e,t)};P().prototype.onesLike=function(){return this.throwIfDisposed(),dr(this)};P().prototype.pad=function(r,e){return this.throwIfDisposed(),Nu(this,r,e)};P().prototype.pool=function(r,e,t,o,n,s){return this.throwIfDisposed(),VC(this,r,e,t,o,n,s)};P().prototype.pow=function(r){return this.throwIfDisposed(),mo(this,r)};P().prototype.prelu=function(r){return this.throwIfDisposed(),Tu(this,r)};P().prototype.prod=function(r,e){return this.throwIfDisposed(),GC(this,r,e)};P().prototype.reciprocal=function(){return this.throwIfDisposed(),pN(this)};P().prototype.relu=function(){return this.throwIfDisposed(),Ao(this)};P().prototype.relu6=function(){return this.throwIfDisposed(),Yd(this)};P().prototype.reshapeAs=function(r){return this.throwIfDisposed(),B(this,r.shape)};P().prototype.reshape=function(r){return this.throwIfDisposed(),B(this,r)};P().prototype.resizeBilinear=function(r,e,t){return this.throwIfDisposed(),ng(this,r,e,t)};P().prototype.resizeNearestNeighbor=function(r,e,t){return this.throwIfDisposed(),sg(this,r,e,t)};P().prototype.reverse=function(r){return this.throwIfDisposed(),Yo(this,r)};P().prototype.rfft=function(){return this.throwIfDisposed(),hN(this)};P().prototype.round=function(){return this.throwIfDisposed(),Ef(this)};P().prototype.rsqrt=function(){return this.throwIfDisposed(),$f(this)};P().prototype.selu=function(){return this.throwIfDisposed(),Af(this)};P().prototype.separableConv2d=function(r,e,t,o,n,s){return this.throwIfDisposed(),Df(this,r,e,t,o,n,s)};P().prototype.sigmoid=function(){return this.throwIfDisposed(),cn(this)};P().prototype.sign=function(){return this.throwIfDisposed(),mN(this)};P().prototype.sin=function(){return this.throwIfDisposed(),_f(this)};P().prototype.sinh=function(){return this.throwIfDisposed(),Rf(this)};P().prototype.slice=function(r,e){return this.throwIfDisposed(),qt(this,r,e)};P().prototype.softmax=function(r){return this.throwIfDisposed(),Cu(this,r)};P().prototype.softplus=function(){return this.throwIfDisposed(),hs(this)};P().prototype.spaceToBatchND=function(r,e){return this.throwIfDisposed(),Ap(this,r,e)};P().prototype.split=function(r,e){return this.throwIfDisposed(),ur(this,r,e)};P().prototype.sqrt=function(){return this.throwIfDisposed(),he(this)};P().prototype.square=function(){return this.throwIfDisposed(),Vt(this)};P().prototype.squaredDifference=function(r){return this.throwIfDisposed(),nI(this,r)};P().prototype.squeeze=function(r){return this.throwIfDisposed(),Mn(this,r)};P().prototype.stack=function(r,e){this.throwIfDisposed();let t=r instanceof te?[this,r]:[this,...r];return ir(t,e)};P().prototype.step=function(r){return this.throwIfDisposed(),Vn(this,r)};P().prototype.stridedSlice=function(r,e,t,o,n,s,i,a){return this.throwIfDisposed(),dN(this,r,e,t,o,n,s,i,a)};P().prototype.sub=function(r){return this.throwIfDisposed(),gt(this,r)};P().prototype.sum=function(r,e){return this.throwIfDisposed(),ft(this,r,e)};P().prototype.tan=function(){return this.throwIfDisposed(),gN(this)};P().prototype.tanh=function(){return this.throwIfDisposed(),du(this)};P().prototype.tile=function(r){return this.throwIfDisposed(),Fr(this,r)};P().prototype.toBool=function(){return this.throwIfDisposed(),nt(this,"bool")};P().prototype.toFloat=function(){return this.throwIfDisposed(),nt(this,"float32")};P().prototype.toInt=function(){return this.throwIfDisposed(),nt(this,"int32")};P().prototype.topk=function(r,e){return this.throwIfDisposed(),iI(this,r,e)};P().prototype.transpose=function(r){return this.throwIfDisposed(),Bt(this,r)};P().prototype.unique=function(r){return this.throwIfDisposed(),aI(this,r)};P().prototype.unsortedSegmentSum=function(r,e){return this.throwIfDisposed(),Jd(this,r,e)};P().prototype.unstack=function(r){return this.throwIfDisposed(),Gr(this,r)};P().prototype.where=function(r,e){return this.throwIfDisposed(),Se(r,this,e)};P().prototype.zerosLike=function(){return this.throwIfDisposed(),Tt(this)};var Zo=class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}},Jr=class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}},G=class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}},It=class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}},hg=class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}};var Gf=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let o=this.cache.keys().next().value;this.cache.delete(o)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let o=this.cache.keys().next().value;this.cache.delete(o)}this.maxEntries=e}};function hn(r,e){if(Array.isArray(r)){let t=[];for(let o=0;o<e;o++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Jo(r,e){if(!r)throw new hg(e)}function BN(r,e){let t=0;for(let o of r)o===e&&t++;return t}function xr(r){return r.length===1?r[0]:r}function ee(r){return Array.isArray(r)?r:[r]}function dn(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Bi(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var fn={};function Gp(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function zN(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>zN(e));else{let e=Object.keys(r);for(let t of e){let o=r[t];o!=null&&typeof o=="object"&&(!Array.isArray(o)&&o.type==="ndarray"&&typeof o.value=="number"?r[t]=o.value:zN(o))}}}function gs(r,e={},t={},o="object",n=!1){if(typeof r=="string"){let s=r,i;if(s in t)i=t[s];else if(s in fn)i=fn[s];else if(i=e[s],i==null)throw new G(`Unknown ${o}: ${r}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=r;if(s.className==null||s.config==null)throw new G(`${o}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,a,l;if(i in t?[a,l]=t[i]:i in fn?[a,l]=fn.className:i in e&&([a,l]=e[i]),a==null)throw new G(`Unknown ${o}: ${i}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let f of Object.keys(fn))u[f]=fn[f];for(let f of Object.keys(t))u[f]=t[f];let c=s.config;c.customObjects=u;let p=Object.assign({},fn);for(let f of Object.keys(t))fn[f]=t[f];zN(s.config);let m=l(a,s.config,t,n);return fn=Object.assign({},p),m}else{let u=Object.assign({},fn);for(let p of Object.keys(t))fn[p]=t[p];let c=new a(s.config);return fn=Object.assign({},u),c}}}function k5(r,e){return r<e?-1:r>e?1:0}function Wf(r,e){return-1*k5(r,e)}function gn(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function JE(r){if(r==null)throw new G(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function xs(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new G(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function dg(r,e,t=0,o=1/0){return Jo(t>=0),Jo(o>=t),Array.isArray(r)&&r.length>=t&&r.length<=o&&r.every(n=>typeof n===e)}function qe(r,e){Array.isArray(r)?(b.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,o)=>qe(t,`element ${o+1} of ${e}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${QE(r)}.`)}function QE(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>QE(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function t2(r,e,t){let o=t!=null?t():b.now(),n;return(...i)=>{let a=t!=null?t():b.now();return a-o<e||(o=a,n=r(...i)),n}}function gg(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var E5=0;function yg(){return E5++}var xg={};function ml(r=""){return r in xg||(xg[r]=0),xg[r]+=1,r+xg[r].toString()}var e2=["channelsFirst","channelsLast"],r2=["nearest","bilinear"],o2=["valid","same","causal"],n2=["max","avg"],s2=["sum","mul","concat","ave"];var Wp=new Map;function ke(r){xs(e2,"DataFormat",r)}function a2(r){xs(r2,"InterpolationFormat",r)}function Qr(r){xs(o2,"PaddingMode",r)}function MN(r){xs(n2,"PoolMode",r)}var Uf=[],i2="/";function Wn(r,e){Uf.push(r);try{let t=e();return Uf.pop(),t}catch(t){throw Uf.pop(),t}}function $5(){return Uf.length===0?"":Uf.join(i2)+i2}function bg(r){if(!l2(r))throw new Error("Not a valid tensor name: '"+r+"'");return $5()+r}function wg(r){if(!l2(r))throw new Error("Not a valid tensor name: '"+r+"'");Wp.has(r)||Wp.set(r,0);let e=Wp.get(r);if(Wp.set(r,Wp.get(r)+1),e>0){let t=`${r}_${e}`;return Wp.set(t,1),t}else return r}var A5=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function l2(r){return!!r.match(A5)}function u2(r){return r===parseInt(r.toString(),10)}function xn(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let o=1;for(let n=e;n<t;++n)o*=r[n];return o}function _u(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let o=r[t];o<e&&(e=o)}return e}function Un(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let o=r[t];o>e&&(e=o)}return e}function to(r,e){if(e<r)throw new G(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let o=r;o<e;++o)t.push(o);return t}var VN;function or(){return VN==null&&(VN=Ld().epsilon()),VN}function eo(){return"channelsLast"}function Wr(r,e){return nt(r,e)}function Vi(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),B(r,t)}function c2(r,e){return U(()=>{if(r.shape.length!==2)throw new G(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=Vi(r,1);return Tg(t,[1,e,1])})}function p2(r){let e=[xn(r.shape)];return B(r,e)}function m2(r){if(r.rank<=1)throw new G(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],xn(r.shape,1)];return B(r,e)}function Mi(r,e,t){return U(()=>{switch(r.rank){case 1:return Ff(r,e,t);case 2:return Zd(r,[e,0],[t,r.shape[1]]);case 3:return Of(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Rp(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return qt(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return qt(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new G(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function GN(r,e,t){return U(()=>{switch(r.rank){case 1:return Ff(r,e,t);case 2:return Zd(r,[0,e],[r.shape[0],t]);case 3:return Of(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Rp(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new G(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Hf(r,e,t,o){return U(()=>{switch(r.rank){case 1:return Ff(r,e,t);case 2:switch(o){case 1:return Mi(r,e,t);case 2:return GN(r,e,t);default:throw new G(`The axis is not within the rank of the tensor ${o}`)}case 3:switch(o){case 1:return Mi(r,e,t);case 2:return Of(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return GN(r,e,t);default:throw new G(`The axis is not within the rank of the tensor ${o}`)}case 4:switch(o){case 1:return Mi(r,e,t);case 2:return Rp(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Rp(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return GN(r,e,t);default:throw new G(`The axis is not within the rank of the tensor ${o}`)}default:throw new G(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Up(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),Te(r,e)}function UN(r,e){switch(r.rank){case 1:return V0([r,e]);case 2:return G0([r,e],0);case 3:return W0([r,e],0);case 4:return U0([r,e],0);default:throw new G(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function Tg(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new G(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Fr(r,e)}function Hp(r,e=0,t=1,o,n){return Xd(r,e,t,o,n)}function yn(r,e,t,o){if(r.rank<2||e.rank<2)throw new It(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let n=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(n!==s)throw new It(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2)return Au.matMul({a:r,b:e,transposeA:!1,transposeB:!1,bias:o?WN(r.rank,o,eo()):null,activation:t});{let n=r.shape.slice(),s=n.pop();r=B(r,[-1,s]);let i=e.shape.slice(),a=i.pop(),l=i.pop(),u=[...i,a],c=Array.from({length:e.rank},(h,g)=>g===0?e.rank-2:g<=e.rank-2?g-1:g);e=B(Bt(e,c),[l,-1]);let p=[...n,...u];return B(Au.matMul({a:r,b:e,transposeA:!1,transposeB:!1,bias:o?WN(r.rank,o,eo()):null,activation:t}),p)}}function Sg(r,e,t){return U(()=>(Array.isArray(e)?e=Je(e,"int32"):e=nt(e,"int32"),xu(r,e,t)))}function Ru(r){return z(r,r)}function WN(r,e,t){let o=e.shape;if(e.rank!==1&&e.rank!==r)throw new G(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return o.length===1?B(e,[1,o[0],1,1,1]):B(e,[1,o[3],o[0],o[1],o[2]]);if(t==="channelsLast")return o.length===1?B(e,[1,1,1,1,o[0]]):B(e,[1].concat(o))}else if(r===4){if(t==="channelsFirst")return o.length===1?B(e,[1,o[0],1,1]):B(e,[1,o[2],o[0],o[1]]);if(t==="channelsLast")return o.length===1?B(e,[1,1,1,o[0]]):B(e,[1].concat(o))}else if(r===3){if(t==="channelsFirst")return o.length===1?B(e,[1,o[0],1]):B(e,[1,o[1],o[0]]);if(t==="channelsLast")return o.length===1?B(e,[1,1,o[0]]):B(e,[1].concat(o))}else if(r<3)return e;throw new G(`Unsupported input rank by biasAdd: ${e.rank}`)}function ro(r,e,t){return U(()=>(t==null&&(t=eo()),ke(t),tt(r,WN(r.rank,e,t))))}function f2(r,e=1){if(e!==1)throw new It(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Fi(r)}function h2(r){return U(()=>lt(r,tt(rr(r),1)))}function vg(r,e,t,o){return U(()=>cI(r,e,t,o))}function d2(r){return U(()=>{let e=tt(.5,z(.2,r));return Ir(e,0,1)})}function fl(r,e,t=!1){return t?r():e()}var g2=["fanIn","fanOut","fanAvg"],x2=["normal","uniform","truncatedNormal"];function D5(r){xs(g2,"FanMode",r)}function _5(r){xs(x2,"Distribution",r)}var oo=class extends J.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},w2=(()=>{class r extends oo{apply(t,o){return ve(t,o)}}return r.className="Zeros",r})();J.registerClass(w2);var Cg=(()=>{class r extends oo{apply(t,o){return Zr(t,o)}}return r.className="Ones",r})();J.registerClass(Cg);var N2=(()=>{class r extends oo{constructor(t){if(super(),typeof t!="object")throw new G(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new G(`config must have value set but got ${t}`);this.value=t.value}apply(t,o){return U(()=>z(Ct(this.value),Zr(t,o)))}getConfig(){return{value:this.value}}}return r.className="Constant",r})();J.registerClass(N2);var T2=(()=>{class r extends oo{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,o){return Bn(t,this.minval,this.maxval,o,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return r.className="RandomUniform",r})();J.registerClass(T2);var S2=(()=>{class r extends oo{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,o){if(o=o||"float32",o!=="float32"&&o!=="int32")throw new It(`randomNormal does not support dType ${o}.`);return Hp(t,this.mean,this.stddev,o,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return r.className="RandomNormal",r})();J.registerClass(S2);var v2=(()=>{class r extends oo{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,o){if(o=o||"float32",o!=="float32"&&o!=="int32")throw new It(`truncatedNormal does not support dType ${o}.`);return zf(t,this.mean,this.stddev,o,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return r.className="TruncatedNormal",r})();J.registerClass(v2);var C2=(()=>{class r extends oo{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,o){return U(()=>{if(t.length!==2||t[0]!==t[1])throw new G("Identity matrix initializer can only be used for 2D square matrices.");return z(this.gain,Cp(t[0]))})}getConfig(){return{gain:this.gain}}}return r.className="Identity",r})();J.registerClass(C2);function R5(r,e="channelsLast"){let t,o;if(ke(e),r.length===2)t=r[0],o=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let n=xn(r,2);t=r[1]*n,o=r[0]*n}else if(e==="channelsLast"){let n=xn(r,0,r.length-2);t=r[r.length-2]*n,o=r[r.length-1]*n}}else{let n=xn(r);t=Math.sqrt(n),o=Math.sqrt(n)}return[t,o]}var _o=(()=>{class r extends oo{constructor(t){if(super(),t.scale<0)throw new G(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,D5(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,_5(this.distribution),this.seed=t.seed}apply(t,o){let n=R5(t),s=n[0],i=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,i):a/=Math.max(1,(s+i)/2),this.distribution==="normal"){let l=Math.sqrt(a);if(o=o||"float32",o!=="float32"&&o!=="int32")throw new It(`${this.getClassName()} does not support dType ${o}.`);return zf(t,0,l,o,this.seed)}else{let l=Math.sqrt(3*a);return Bn(t,-l,l,o,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return r.className="VarianceScaling",r})();J.registerClass(_o);var HN=(()=>{class r extends _o{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return _o.className}}return r.className="GlorotUniform",r})();J.registerClass(HN);var qN=(()=>{class r extends _o{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return _o.className}}return r.className="GlorotNormal",r})();J.registerClass(qN);var KN=(()=>{class r extends _o{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return _o.className}}return r.className="HeNormal",r})();J.registerClass(KN);var jN=(()=>{class r extends _o{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return _o.className}}return r.className="HeUniform",r})();J.registerClass(jN);var XN=(()=>{class r extends _o{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return _o.className}}return r.className="LeCunNormal",r})();J.registerClass(XN);var YN=(()=>{class r extends _o{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return _o.className}}return r.className="LeCunUniform",r})();J.registerClass(YN);var I2=(()=>{class r extends oo{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,o){return U(()=>{if(t.length<2)throw new It("Shape must be at least 2D.");if(o!=="int32"&&o!=="float32"&&o!==void 0)throw new TypeError(`Unsupported data type ${o}.`);o=o;let n=b.sizeFromShape(t.slice(0,-1)),s=t[t.length-1],i=n*s;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);let a=[Math.max(s,n),Math.min(s,n)],l=Hp(a,0,1,o,this.seed),u=RI.qr(l,!1),c=u[0],m=u[1].flatten().stridedSlice([0],[Math.min(s,n)*Math.min(s,n)],[Math.min(s,n)+1]);return c=z(c,m.sign()),n<s&&(c=c.transpose()),z(Ct(this.gain),c.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}return r.className="Orthogonal",r})();J.registerClass(I2);var y2={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function b2(r,e={}){return gs(r,J.SerializationMap.getMap().classNameMap,e,"initializer")}function be(r){return Gp(r)}function pe(r){if(typeof r=="string"){let e=r in y2?y2[r]:r;if(e==="GlorotNormal")return new qN;if(e==="GlorotUniform")return new HN;if(e==="HeNormal")return new KN;if(e==="HeUniform")return new jN;if(e==="LeCunNormal")return new XN;if(e==="LeCunUniform")return new YN;{let t={};return t.className=e,t.config={},b2(t)}}else return r instanceof oo?r:b2(r)}function Ig(r){return Array.isArray(r)&&Array.isArray(r[0])}function qp(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function St(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new G(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function Pt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new G(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Kp(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((o,n)=>o*n);return e}var E2="Variable",qf=class{constructor(e,t="float32",o=E2,n=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=yg(),o=o??E2,this.originalName=bg(o),this.name=wg(this.originalName),this.trainable_=n,this.constraint=s,this.val=xN(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),O5(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function O5(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function Kf(r){return r.map(e=>e.read())}function jp(r){r.forEach(e=>{e[0].write(e[1])})}var de=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Ur=class{constructor(e,t,o,n,s,i,a){this.dtype=e,this.shape=t,this.sourceLayer=o,this.inputs=n,this.callArgs=s,this.outputTensorIndex=a,this.id=yg(),i!=null&&(this.originalName=bg(i),this.name=wg(this.originalName)),this.rank=t.length}},L5=0,Gi=class{constructor(e,t){this.callArgs=t,this.id=L5++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let o of e.inboundLayers)o?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},P5=0,kt=class extends J.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=P5++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let o=this.getClassName();t=dn(o)+"_"+ml(o)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let o;if(e.batchInputShape!=null)o=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),o=[s].concat(e.inputShape)}this.batchInputShape=o;let n=e.dtype;n==null&&(n=e.inputDType),n==null&&(n="float32"),this.dtype=n}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Jr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new G(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return xr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return xr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Zo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Zo(`Layer ${this.name} is not connected, no input to return.`);return xr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Zo(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Zo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return xr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=ee(e);if(this.inputSpec==null||this.inputSpec.length===0)return;let o=ee(this.inputSpec);if(t.length!==o.length)throw new G(`Layer ${this.name} expects ${o.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let n=0;n<t.length;n++){let s=t[n],i=o[n];if(i==null)continue;let a=s.rank;if(i.ndim!=null&&a!==i.ndim)throw new G(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new G(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new G(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&s.dtype!==i.dtype)throw new G(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${s.dtype}.`);if(i.axes){let l=s.shape;for(let u in i.axes){let c=Number(u),p=i.axes[u],m=c>=0?l[c]:l[l.length+c];if(p!=null&&[p,null].indexOf(m)===-1)throw new G(`Input ${n} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${p} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){let u=i.shape[l],c=s.shape[l];if(u!=null&&c!=null&&u!==c)throw new G(`Input ${n} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let o=ee(e),n=M5(e),s=V5(e);if(n===s)throw new G("Arguments to apply() must be all SymbolicTensors or all Tensors");return Wn(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let i=[];for(let a of ee(e))i.push(a.shape);this.build(xr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let i=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,i);let a=ee(i),l=[];for(let u of a)o.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(i=xr(l),this.activityRegularizer!=null)throw new It("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=z5(e),a=this.computeOutputShape(i),l,u=B5(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((c,p)=>new Ur(u,c,this,ee(e),t,this.name,p)):l=new Ur(u,a,this,ee(e),t,this.name),this.addInboundNode(e,l,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new It("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((o,n)=>{o!=null&&e[n]!=null&&e[n]!==o&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Zo(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let o=JSON.stringify(t.outputShapes);e.indexOf(o)===-1&&e.push(o)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Zo(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Jr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Kp(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Kf(e?this.trainableWeights:this.weights)}setWeights(e){U(()=>{let t=this.weights;if(t.length!==e.length)throw new G(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let o=[],n=Kf(t);for(let s=0;s<n.length;++s){let i=n[s],a=t[s],l=e[s];if(!b.arraysEqual(i.shape,l.shape))throw new G(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);o.push([a,l])}jp(o)})}addWeight(e,t,o,n,s,i,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new G(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),o==null&&(o="float32"),this.fastWeightInitDuringBuild&&(n=l!=null?l():pe("zeros"));let u=n.apply(t,o),c=new qf(u,o,e,i,a);return u.dispose(),s!=null&&this.addLoss(()=>s.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=ee(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(o=>{if(o!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,o){if(!this.supportsMasking)return;let n=this.computeMask(e,o),s=ee(t),i=ee(n);if(s.length!==i.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let a=0;a<s.length;a++)s[a].kerasMask=i[a]}addInboundNode(e,t,o,n,s,i,a=null){let l=ee(e);t=ee(t),o=ee(o),n=ee(n),s=qp(s),i=qp(i);let u=[],c=[],p=[];for(let m of l)u.push(m.sourceLayer),c.push(m.nodeIndex),p.push(m.tensorIndex);new Gi({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:p,inputTensors:l,outputTensors:t,inputMasks:o,outputMasks:n,inputShapes:s,outputShapes:i},a);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function z5(r){r=ee(r);let e=[];for(let t of r)e.push(t.shape);return xr(e)}function B5(r){return"float32"}function ZN(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let o=e.inboundNodes[t];if(o.inboundLayers.length===0)return o.inputTensors;{let n=[];for(let s=0;s<o.inboundLayers.length;s++){let i=o.inputTensors[s],a=o.inboundLayers[s],l=o.nodeIndices[s],u=ZN(i,a,l);for(let c of u)n.indexOf(c)===-1&&n.push(c)}return n}}}function M5(r){let e=!0;for(let t of ee(r))if(!(t instanceof Ur)){e=!1;break}return e}function V5(r){let e=!0;for(let t of ee(r))if(t instanceof Ur){e=!1;break}return e}var Fu=(()=>{class r extends kt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:ml("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new G("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let o=t.batchInputShape;if(o==null){if(t.inputShape==null)throw new G("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");o=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new G("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=t.dtype||"float32";this.batchInputShape=o,this.dtype=n,this.inputSpec=[{shape:o}];let s=new Ur(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Gi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[o],outputShapes:[o]})}apply(t,o){throw new G(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return r.className="InputLayer",r})();J.registerClass(Fu);function JN(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new G("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new Fu({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function G5(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return nt(e,r.dtype)}catch{throw new G(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var ys=class r{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof r)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,o){if(this.id2Value[e.id]==null)this.id2Value[e.id]=G5(e,t),this.name2Id[e.name]=e.id,o!=null&&(this.id2Mask[e.id]=o);else throw new G(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ur){if(this.id2Value[e.id]==null)throw new G(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new G(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ur){if(this.id2Value[e.id]==null)throw new G(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new G(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Dt(this.id2Mask)}},kg=new Gf,Eg=new Gf;function A2(r){kg?.setMaxEntries(r),Eg?.setMaxEntries(r)}function Ou(r,e,t,o){let n=t==null?!1:t.training,s=Array.isArray(r),i=s?r:[r],a=i.map(h=>h.name),l=[],u=e.names();for(let h of a)u.indexOf(h)!==-1?l.push(e.getValue(h)):l.push(null);o!=null&&(o.maxNumTensors=-1/0,o.minNumTensors=1/0);let c=a.join(",")+"|"+e.names().sort().join(","),p=kg.get(c),m;if(p==null){let h=W5(i,e);p=h.sorted,m=h.recipientCounts,kg.put(c,p),Eg.put(c,m)}m={},n||Object.assign(m,Eg.get(c));let f=new ys(e);for(let h=0;h<p.length;++h){if(o!=null){let L=hf().numTensors;L>o.maxNumTensors&&(o.maxNumTensors=L),L<o.minNumTensors&&(o.minNumTensors=L)}let g=p[h],d=g.sourceLayer;if(d instanceof Fu)continue;let x=[],y=[],w=[],N=!1;for(let L of g.inputs){let M=f.getValue(L),H=f.getMask(L);x.push(M),y.push(H),H!=null&&(N=!0),n||(m[L.name]--,m[L.name]===0&&!e.hasKey(L)&&a.indexOf(L.name)===-1&&!M.isDisposed&&L.sourceLayer.stateful!==!0&&w.push(M))}N&&(t=t||{},t.mask=y[0]);let v=ee(d.apply(x,t)),k=null;d.supportsMasking&&(k=d.computeMask(x,y));let R=H5(g),O=Array.isArray(R)?R:[R];for(let L=0;L<O.length;++L){f.hasKey(O[L])||f.add(O[L],v[L],Array.isArray(k)?k[0]:k);let M=a.indexOf(O[L].name);M!==-1&&(l[M]=v[L])}n||Dt(w)}return f.disposeMasks(),s?l:l[0]}function W5(r,e){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],o={};if(r.length===1){let n=$2(r[0],e);t=n.sorted,o=n.recipientMap}else{let n=new Set;for(let s of r){let{sorted:i,recipientMap:a}=$2(s,e);for(let l of i)n.has(l.name)||(t.push(l),n.add(l.name));for(let l in a)o[l]==null&&(o[l]=new Set),a[l].forEach(u=>o[l].add(u))}}return{sorted:t,recipientCounts:U5(o)}}function U5(r){let e={};for(let t in r)e[t]=r[t].size;return e}function $2(r,e){let t=new Set,o=[],n={};for(let a of e.names())t.add(a);let s=[],i=[];for(s.push(r);s.length>0;){let a=s[s.length-1];if(t.has(a.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(a.inputs.length===0||l)s.pop(),o.push(a),t.add(a.name),l&&i.pop();else{i.push(s.length-1);for(let u of a.inputs)n[u.name]==null&&(n[u.name]=new Set),n[u.name].add(a.name),!t.has(u.name)&&s.push(u)}}return{sorted:o,recipientMap:n}}function H5(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let o=0;o<r.sourceLayer.inboundNodes.length;++o)for(let n of r.sourceLayer.inboundNodes[o].outputTensors)if(n.id===r.id){t=o;break}e=r.sourceLayer.getOutputAt(t)}return e}var q5=W();q5.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,A2);function QN(r,e){return U(()=>he(ft(z(r,r),e,!0)))}var Lu=class extends J.Serializable{getConfig(){return{}}},R2=(()=>{class r extends Lu{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return U(()=>{let o=QN(t,this.axis),n=Ir(o,0,this.maxValue);return z(t,lt(n,tt(or(),o)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return r.className="MaxNorm",r})();J.registerClass(R2);var F2=(()=>{class r extends Lu{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return U(()=>lt(t,tt(or(),QN(t,this.axis))))}getConfig(){return{axis:this.axis}}}return r.className="UnitNorm",r})();J.registerClass(F2);var O2=(()=>{class r extends Lu{apply(t){return Ao(t)}}return r.className="NonNeg",r})();J.registerClass(O2);var L2=(()=>{class r extends Lu{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return U(()=>{let o=QN(t,this.axis),n=tt(z(this.rate,Ir(o,this.minValue,this.maxValue)),z(1-this.rate,o));return z(t,lt(n,tt(or(),o)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return r.className="MinMaxNorm",r})();J.registerClass(L2);var D2={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Re(r){return Gp(r)}function _2(r,e={}){return gs(r,J.SerializationMap.getMap().classNameMap,e,"constraint")}function Fe(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in D2?D2[r]:r,config:{}};return _2(t)}else return r instanceof Lu?r:_2(r)}function Wi(r){return V(this,null,function*(){if(r==null)return;let e=[],t=[],o=[];for(let n in r){let s=r[n];if(typeof s!="number"){let i=s;e.push(i.data()),t.push(n),o.push(i)}}if(e.length>0){let n=yield Promise.all(e);for(let s=0;s<n.length;++s)r[t[s]]=n[s][0];Dt(o)}})}function $g(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var X5=125,hl=class{constructor(){this.validationData=null}setParams(e){this.params=e}onEpochBegin(e,t){return V(this,null,function*(){})}onEpochEnd(e,t){return V(this,null,function*(){})}onBatchBegin(e,t){return V(this,null,function*(){})}onBatchEnd(e,t){return V(this,null,function*(){})}onTrainBegin(e){return V(this,null,function*(){})}onTrainEnd(e){return V(this,null,function*(){})}setModel(e){}},Ag=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}onEpochBegin(e,t){return V(this,null,function*(){t==null&&(t={});for(let o of this.callbacks)yield o.onEpochBegin(e,t)})}onEpochEnd(e,t){return V(this,null,function*(){t==null&&(t={});for(let o of this.callbacks)yield o.onEpochEnd(e,t)})}onBatchBegin(e,t){return V(this,null,function*(){t==null&&(t={});for(let o of this.callbacks)yield o.onBatchBegin(e,t)})}onBatchEnd(e,t){return V(this,null,function*(){t==null&&(t={});for(let o of this.callbacks)yield o.onBatchEnd(e,t)})}onTrainBegin(e){return V(this,null,function*(){e==null&&(e={});for(let t of this.callbacks)yield t.onTrainBegin(e)})}onTrainEnd(e){return V(this,null,function*(){e==null&&(e={});for(let t of this.callbacks)yield t.onTrainEnd(e)})}},tT=class extends hl{constructor(){super()}onEpochBegin(e){return V(this,null,function*(){this.seen=0,this.totals={}})}onBatchEnd(e,t){return V(this,null,function*(){t==null&&(t={});let o=t.size==null?0:t.size;this.seen+=o;for(let n in t){let s=t[n];if(typeof s=="number")this.totals.hasOwnProperty(n)||(this.totals[n]=0),this.totals[n]=this.totals[n]+s*o;else{let i;n in this.totals?i=this.totals[n]:this.totals[n]=0;let a=U(()=>tt(this.totals[n],z(s,o)));this.totals[n]=a,i?.dispose()}}})}onEpochEnd(e,t){return V(this,null,function*(){if(t!=null)for(let o of this.params.metrics)this.totals[o]!=null&&(typeof this.totals[o]=="number"?t[o]=this.totals[o]/this.seen:U(()=>{let n=z(lt(1,this.seen),this.totals[o]);t[o]=n,this.totals[o].dispose(),mr(t[o])}))})}},Dg=class extends hl{onTrainBegin(e){return V(this,null,function*(){this.epoch=[],this.history={}})}onEpochEnd(e,t){return V(this,null,function*(){t==null&&(t={}),this.epoch.push(e);for(let o in t)this.history[o]==null&&(this.history[o]=[]),this.history[o].push(t[o])})}syncData(){return V(this,null,function*(){let e=[],t=[],o=[];for(let s in this.history){let i=this.history[s];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){let l=i[a];e.push(l.data()),t.push(s),o.push(a)}}let n=yield Promise.all(e);for(let s=0;s<n.length;++s)this.history[t[s]][o[s]].dispose(),this.history[t[s]][o[s]]=n[s][0]})}},_g=class extends hl{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Vf,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=X5),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=t2(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}maybeWait(e,t,o){return V(this,null,function*(){let n=[];this.yield!=null&&(yield Wi(o),n.push(this.yield(e,t,o))),n.push(this.nextFrameFunc()),yield Promise.all(n)})}onEpochBegin(e,t){return V(this,null,function*(){this.currentEpoch=e,this.epochBegin!=null&&(yield Wi(t),yield this.epochBegin(e,t))})}onEpochEnd(e,t){return V(this,null,function*(){let o=[];this.epochEnd!=null&&(yield Wi(t),o.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&o.push(this.nextFrameFunc()),yield Promise.all(o)})}onBatchBegin(e,t){return V(this,null,function*(){this.batchBegin!=null&&(yield Wi(t),yield this.batchBegin(e,t))})}onBatchEnd(e,t){return V(this,null,function*(){let o=[];this.batchEnd!=null&&(yield Wi(t),o.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?o.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&o.push(this.maybeWait(this.currentEpoch,e,t)),yield Promise.all(o)})}onTrainBegin(e){return V(this,null,function*(){this.trainBegin!=null&&(yield Wi(e),yield this.trainBegin(e))})}onTrainEnd(e){return V(this,null,function*(){this.trainEnd!=null&&(yield Wi(e),yield this.trainEnd(e))})}};function Rg(r,e){return r==null&&(r={}),r instanceof hl?[r]:Array.isArray(r)&&r[0]instanceof hl?r:ee(r).map(o=>new _g(o,e))}var P2=(()=>{class r{constructor(){}static registerCallbackConstructor(t,o){b.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),r.checkForDuplicate(o),r.constructors[t]==null&&(r.constructors[t]=[]),r.constructors[t].push(o)}static checkForDuplicate(t){for(let o in r.constructors)r.constructors[+o].forEach(s=>{if(s===t)throw new G("Duplicate callback constructor.")})}static clear(){r.constructors={}}static createCallbacks(t){let o=[];for(let n in r.constructors){let s=+n;t>=s&&o.push(...r.constructors[s])}return o.map(n=>new n)}}return r.constructors={},r})();function Fg(r,e,t,o,n,s,i,a,l){let u=new Dg,c=[new tT,...P2.createCallbacks(e)];r!=null&&c.push(...r),c.push(u);let p=new Ag(c);return p.setParams({epochs:t,initialEpoch:o,samples:n,steps:s,batchSize:i,verbose:e,doValidation:a,metrics:l}),{callbackList:p,history:u}}function Ro(r,e={},t=!1){return gs(r,J.SerializationMap.getMap().classNameMap,e,"layer",t)}function jf(r,e){return U(()=>{r.dtype!=="float32"&&(r=nt(r,"float32"));let t=ft(Ru(r),e,!0),o=_i(t.shape,or()),n=he($o(t,o));return lt(r,n)})}function Pu(r,e){return U(()=>Ie(Ru(gt(e,r)),-1))}function Yf(r,e){return U(()=>Ie(rr(gt(e,r)),-1))}function Zf(r,e){return U(()=>{let t=gt(r,e),o=Ir(rr(r),or(),Number.MAX_VALUE),n=rr(lt(t,o));return z(100,Ie(n,-1))})}function Y5(r,e){return U(()=>{let t=Ir(e,or(),Number.MAX_VALUE),o=Yr(tt(1,t)),n=Ir(r,or(),Number.MAX_VALUE),s=Yr(tt(1,n));return Ie(Ru(gt(o,s)),-1)})}function Z5(r,e){return U(()=>{let t=$o(0,gt(1,z(r,e)));return Ie(Ru(t),-1)})}function J5(r,e){return U(()=>{let t=$o(0,gt(1,z(r,e)));return Ie(t,-1)})}function Q5(r,e){return U(()=>{let t=ft(z(r,e),-1),o=kr(z(gt(1,r),e),-1);return $o(0,tt(1,gt(o,t)))})}function t8(r,e){return U(()=>{let t=Math.log(2),o=gt(e,r),n=gt(tt(o,hs(z(-2,o))),t);return Ie(n,-1)})}function zu(r,e,t=!1){return U(()=>{if(t)e=Cu(e);else{let o=ft(e,e.shape.length-1,!0);e=lt(e,o)}return e=Ir(e,or(),1-or()),Yt(ft(z(nt(r,"float32"),Yr(e)),e.shape.length-1))})}function Xp(r,e,t=!1){return U(()=>{let o=nt(Oi(p2(r)),"int32");e=Ir(e,or(),1-or());let n=e.shape,s=B($p(o,n[n.length-1]),n);return zu(s,e,t)})}function e8(r,e){if(!b.arraysEqual(r.shape,e.shape))throw new G(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return U(()=>{let t=Ao(e),o=Yt(rr(e));return tt(gt(t,z(e,r)),Cf(hr(o)))})}function Yp(r,e){return U(()=>{let t;return t=Ir(e,or(),1-or()),t=Yr(lt(t,gt(1,t))),Ie(e8(r,t),-1)})}function r8(r,e){return U(()=>{let t=Ir(r,or(),1),o=Ir(e,or(),1);return ft(z(r,Yr(lt(t,o))),-1)})}function o8(r,e){return U(()=>{let t=Yr(tt(or(),e));return Ie(gt(e,z(r,t)),-1)})}function Og(r,e){return U(()=>{let t=jf(r,-1),o=jf(e,-1),n=z(t,o);return Yt(ft(n,-1))})}var Xf={meanSquaredError:Pu,meanAbsoluteError:Yf,meanAbsolutePercentageError:Zf,meanSquaredLogarithmicError:Y5,squaredHinge:Z5,hinge:J5,categoricalHinge:Q5,logcosh:t8,categoricalCrossentropy:zu,sparseCategoricalCrossentropy:Xp,binaryCrossentropy:Yp,kullbackLeiblerDivergence:r8,poisson:o8,cosineProximity:Og};function Lg(r){if(typeof r=="string"){if(r in Xf)return Xf[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new G(e)}else return r}function zg(r,e){return U(()=>{let t=z(.5,dr(e)),o=Wr(Ve(e,t),r.dtype);return Ie(Xr(r,o),-1)})}function Bg(r,e){return U(()=>Wr(Xr(Ai(r,-1),Ai(e,-1)),"float32"))}function n8(r,e){return U(()=>nt(ft(Vr(Xr(r,1),Xr(e,1))),"float32"))}function s8(r,e){return U(()=>nt(ft(Vr(Xr(r,0),Xr(e,1))),"float32"))}function B2(r,e){return U(()=>{let t=n8(r,e),o=s8(r,e),n=tt(t,o);return nt(Se(Ve(n,0),lt(t,n),0),"float32")})}function eT(r,e){return Yp(r,e)}function rT(r,e){return r.rank===e.rank&&(r=Mn(r,[r.rank-1])),e=Ai(e,-1),e.dtype!==r.dtype&&(e=nt(e,r.dtype)),nt(Xr(r,e),"float32")}var i8=Pu,a8=Pu,l8=Yf,u8=Yf,c8=Zf,p8=Zf,Mg=zu,m8=Og,oT=Xp,Pg={binaryAccuracy:zg,categoricalAccuracy:Bg,precision:B2,categoricalCrossentropy:Mg,sparseCategoricalCrossentropy:oT,mse:i8,MSE:a8,mae:l8,MAE:u8,mape:c8,MAPE:p8,cosine:m8};function M2(r){if(typeof r=="string"&&r in Pg)return Pg[r];if(typeof r!="string"&&r!=null)return r;throw new G(`Unknown metric ${r}`)}function Jf(r){if(Jo(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(Xf))if(Xf[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(Pg))if(Pg[t]===r){e=t;break}return e!==void 0?e:r.name}}function G2(r){let e={Adagrad:()=>Du.adagrad(.01),Adadelta:()=>Du.adadelta(1,.95,or()),Adam:()=>Du.adam(.001,.9,.999,or()),Adamax:()=>Du.adamax(.002,.9,.999,or(),0),RMSProp:()=>Du.rmsprop(.001,.9,0,or()),SGD:()=>Du.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new G(`Unknown Optimizer ${r}`)}function sT(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!nT(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let o=JSON.stringify(r);o.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${o.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function nT(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!nT(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!nT(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function W2(r,e,t,o=console.log){let n=d8(r),s=["Layer (type)","Input Shape","Output shape","Param #"];n?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let i;if(!n){s.push("Receives inputs"),i=[];for(let c in r.nodesByDepth)i.push(...r.nodesByDepth[c])}o("_".repeat(e)),Vg(s,t,o),o("=".repeat(e));let a=r.layers;for(let c=0;c<a.length;++c)n?g8(a[c],t,o):x8(a[c],t,i,o),o((c===a.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let l=h8(r),u=Kp(r.nonTrainableWeights);o(`Total params: ${l+u}`),o(`Trainable params: ${l}`),o(`Non-trainable params: ${u}`),o("_".repeat(e))}function h8(r){let e;return r.collectedTrainableWeights!=null?e=Kp(r.collectedTrainableWeights):e=Kp(r.trainableWeights),e}function d8(r){let e=!0,t=[],o=[];for(let n in r.nodesByDepth)t.push(r.nodesByDepth[n]);for(let n of t){if(n.length>1||n.length===1&&n[0].inboundLayers.length>1){e=!1;break}o.push(...n)}if(e)for(let n of r.layers){let s=!1;for(let i of n.inboundNodes)if(o.indexOf(i)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function Vg(r,e,t=console.log){let o="";for(let n=0;n<r.length;++n)n>0&&(o=o.slice(0,o.length-1)+" "),o+=r[n],o=o.slice(0,e[n]),o+=" ".repeat(e[n]-o.length);t(o)}function g8(r,e,t){let o,n;try{n=r.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{n="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let s=r.name,i=r.getClassName(),a=[`${s} (${i})`,n,o,r.countParams().toString()];Vg(a,e,t)}function x8(r,e,t,o){let n,s;try{s=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{s="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let i=[];for(let p of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){let f=p.inboundLayers[m].name,h=p.nodeIndices[m],g=p.tensorIndices[m];i.push(`${f}[${h}][${g}]`)}let a=r.name,l=r.getClassName(),u=i.length===0?"":i[0],c=[`${a} (${l})`,s,n,r.countParams().toString(),u];Vg(c,e,o);for(let p=1;p<i.length;++p)Vg(["","","","",i[p]],e,o)}function U2(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function Qf(r,e){if(r===null)return null;if(typeof r=="string")return Bi(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],o=r.length;for(let n=0;n<o;++n){let s=r[n];U2(e,n,s)?t.push(s):t.push(Qf(s,e))}return t}else{let t={};for(let o of Object.keys(r)){let n=r[o];if(o==="name"&&typeof n=="string")t[o]=n;else{let s=Bi(o);t[s]=Qf(n,s)}}return t}}function Gg(r,e){if(r==null)return null;if(typeof r=="string")return dn(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],o=r.length;for(let n=0;n<o;++n){let s=r[n];U2(e,n,s)?t.push(s):t.push(Gg(s,e))}return t}else{let t={};for(let o of Object.keys(r)){let n=r[o],s=dn(o);(o==="name"||o==="className")&&typeof n=="string"?t[s]=n:t[s]=Gg(n,o)}return t}}var Zp="4.22.0";var y8=r=>{let e=Object.keys(r);if(e.length===0)return!1;let t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))},Wg=class r extends kt{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=ml(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],gn(this.inputs).length!==this.inputs.length)throw new G(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);gn(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let w=y.sourceLayer,N=y.nodeIndex,v=y.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(N),this.outputLayersTensorIndices.push(v)}for(let y of this.inputs){let w=y.sourceLayer,N=y.nodeIndex,v=y.tensorIndex;Jo(N===0,"input layer has >1 nodes"),Jo(v===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(N),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let w=this.inputLayers[y];if(!(w instanceof Fu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},o={},n={},s={},i={},a=[],l=(y,w,N,v,k,R)=>{(v==null||k==null||R==null)&&(v=y.sourceLayer,k=y.nodeIndex,R=y.tensorIndex);let O=v.inboundNodes[k];if(N.indexOf(O)!==-1)throw new Jr(`The tensor ${y.name} at layer "${v.name}" is part of a cycle.`);if(w.indexOf(O)!==-1)return;this.containerNodes.add(r.nodeKey(v,k)),v.id in i||(i[v.id]=Object.keys(i).length),N.indexOf(O)===-1&&N.push(O);let L=O.inboundLayers.length;for(let M=0;M<L;M++){let H=O.inputTensors[M],q=O.inboundLayers[M],K=O.nodeIndices[M],X=O.tensorIndices[M];l(H,w,N,q,K,X)}for(w.push(O);N.indexOf(O)>=0;)N.splice(N.indexOf(O),1);a.push(O)},u=[],c=[];for(let y of this.outputs)l(y,u,c);let p=a.slice().reverse();for(let y of p){o[y.id]=y,y.id in t||(t[y.id]=0);let w=t[y.id],N=n[y.outboundLayer.id]==null?0:n[y.outboundLayer.id];w=Math.max(w,N),n[y.outboundLayer.id]=w,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=w;for(let v=0;v<y.inboundLayers.length;v++){let k=y.inboundLayers[v],R=y.nodeIndices[v],O=k.inboundNodes[R],L=t[O.id]==null?0:t[O.id];t[O.id]=Math.max(w+1,L),o[O.id]=O}}let m={};for(let y in t){let w=t[y];w in m||(m[w]=[]),m[w].push(o[y])}let f={};for(let y in n){let w=n[y];w in f||(f[w]=[]),f[w].push(s[y])}let h=Object.keys(f).map(y=>parseInt(y,10)).sort(Wf);this.layers=[];for(let y of h){let w=f[y];w.sort((N,v)=>{let k=i[N.id],R=i[v.id];return k<R?-1:k>R?1:0});for(let N of w)N instanceof r&&this.internalContainerRefs.push(N),this.layers.push(N)}this.layersByDepth=f,h=Object.keys(m).map(y=>parseInt(y,10)).sort(Wf);let g=this.inputs.slice(),d=[];for(let y of h)for(let w of m[y]){let N=w.outboundLayer;if(N!=null){for(let v of w.inputTensors)if(g.indexOf(v)===-1)throw new Jr(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${N.name}". The following previous layers were accessed without issue: ${d}`);for(let v of w.outputTensors)g.push(v);d.push(N.name)}}this.nodesByDepth=m;let x=this.layers.map(y=>y.name);for(let y of x){let w=x.filter(N=>N===y).length;if(w!==1)throw new Jr(`The name "${y}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Gi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(o=>o.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new G("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let o of this.layers)t.push(...o.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let o={},n=0,s=y8(e);s&&this.parseWeights(e);for(let a of this.layers)for(let[l,u]of a.weights.entries()){let c=s?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(o[c]!=null)throw new G(`Duplicate weight name: ${c}`);o[c]=u,n++}let i=[];for(let a in e){let l=a;if(o[a]==null){let u=a.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(o[l]!=null)i.push([o[l],e[a]]);else if(t)throw new G(`Provided weight data has no target variable: ${a}`);delete o[l]}if(t){let a=[];for(let l in o)a.push(l);if(a.length>0)throw new G(`${a.length} of ${n} weights are not set: ${a}`)}jp(i)}parseWeights(e){for(let t in Object.keys(e)){let o=t.split("/"),n=["vars","layer_checkpoint_dependencies"],s=o.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!n.includes(i)).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Zp}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let o=Gg(this.updatedConfig());return t?JSON.stringify(o):o}call(e,t){return U(()=>{e=ee(e);let o=new ys;for(let n=0;n<this.inputs.length;++n)o.add(this.inputs[n],e[n]);return Ou(this.outputs,o,t)})}computeMask(e,t){return U(()=>{e=ee(e);let o;return t==null?o=hn(null,e.length):o=ee(t),this.runInternalGraph(e,o)[1]})}computeOutputShape(e){let t=qp(e);if(t.length!==this.inputLayers.length)throw new G(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let o={};for(let a=0;a<t.length;a++){let l=this.inputLayers[a],u=t[a],c=l.name+"_0_0";o[c]=u}let n=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Wf);if(n.length>1)for(let a of n){let l=this.nodesByDepth[a];for(let u of l){let c=u.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(c.id)!==-1)continue;let p=[];for(let g=0;g<u.inboundLayers.length;g++){let d=u.inboundLayers[g],x=u.nodeIndices[g],y=u.tensorIndices[g],w=`${d.name}_${x}_${y}`,N=o[w];p.push(N)}let m=c.computeOutputShape(xr(p)),f=qp(m),h=c.inboundNodes.indexOf(u);for(let g=0;g<f.length;g++){let d=`${c.name}_${h}_${g}`;o[d]=f[g]}}}let s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){let l=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],p=`${l.name}_${u}_${c}`;i.push(p)}for(let a=0;a<i.length;a++){let l=i[a];Jo(l in o),s.push(o[l])}return xr(s)}runInternalGraph(e,t){t==null&&(t=hn(null,e.length));let o={};for(let l=0;l<this.inputs.length;++l){let u=this.inputs[l],c=e[l],p=t[l];o[u.id]=[c,p]}let n=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Wf);for(let l of n){let u=this.nodesByDepth[l];for(let c of u){let p=c.outboundLayer,m=c.inputTensors,f=c.outputTensors,h=new Array;for(let g of m)g.id in o&&h.push(o[g.id]);if(h.length===m.length){let g={},d,x,y,w;if(c.callArgs!=null&&(g=c.callArgs),h.length===1){let[N,v]=h[0];g.mask==null&&(g.mask=v),y=ee(p.call(N,g)),w=ee(p.computeMask(N,v)),d=[N],x=[v]}else d=h.map(N=>N[0]),x=h.map(N=>N[1]),g.mask==null&&(g.mask=x),y=ee(p.call(d,g)),w=ee(p.computeMask(d,x));if(p.activityRegularizer)throw new It("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let N=0;N<f.length;++N){let v=f[N],k=y[N],R=w[N];o[v.id]=[k,R]}}}}let s=[],i=[],a=[];for(let l of this.outputs){Jo(l.id in o,`Could not compute output ${l.name} : ${l.id}`);let[u,c]=o[l.id];a.push(u.shape),s.push(u),i.push(c)}return[s,i,a]}buildNodeConversionMap(e){let t={},o;for(let n of this.layers){o=n instanceof r?1:0;for(let s=0;s<n.inboundNodes.length;s++){let i=r.nodeKey(n,s);this.containerNodes.has(i)&&(t[i]=o,o+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new G("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(let o of this.layers)if(o.name===e)return o;throw new G(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new G(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return U(()=>{let e=[];for(let t of this.layers)for(let o=0;o<t.inboundNodes.length;++o){let n=r.nodeKey(t,o);this.containerNodes.has(n)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),o=[];for(let i of this.layers){let a=i.getClassName(),l=i.getConfig(),u=[];for(let p=0;p<i.inboundNodes.length;p++){let m=i.inboundNodes[p],f=r.nodeKey(i,p),h={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),h=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(m.inboundLayers.length>0){let g=[];for(let d=0;d<m.inboundLayers.length;d++){let x=m.inboundLayers[d],y=m.nodeIndices[d],w=m.tensorIndices[d],N=r.nodeKey(x,y),v=t[N];v==null&&(v=0),g.push([x.name,v,w,h])}u.push(g)}}}let c={};c.name=i.name,c.className=a,c.config=l,c.inboundNodes=u,o.push(c)}e.layers=o;let n=[];for(let i=0;i<this.inputLayers.length;i++){let a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=r.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let p=this.inputLayersTensorIndices[i];n.push([a.name,c,p])}e.inputLayers=n;let s=[];for(let i=0;i<this.outputLayers.length;i++){let a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=r.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let p=this.outputLayersTensorIndices[i];s.push([a.name,c,p])}return e.outputLayers=s,e}static fromConfig(e,t,o={},n=!1){let s={},i={};function a(d,x){d.name in i?i[d.name].push(x):i[d.name]=[x]}function l(d,x){let y=[],w;for(let N of x){let v=N[0],k=N[1],R=N[2];if(w=N[3]==null?{}:N[3],!(v in s)){a(d,x);return}let O=s[v];if(O.inboundNodes.length<=k){a(d,x);return}let L=O.inboundNodes[k];y.push(L.outputTensors[R])}y.length>0&&d.apply(xr(y),w)}function u(d){let x=d.name,y=Ro(d,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(n),s[x]=y,d.inboundNodes.forEach(N=>{if(!(N instanceof Array))throw new G(`Corrupted configuration, expected array for nodeData: ${N}`);a(y,N)})}let c=t.name,p=t.layers;for(let d of p)u(d);for(;!JE(i);)for(let d of p){let x=s[d.name];if(x.name in i){let y=i[x.name];delete i[x.name];for(let w of y)l(x,w)}}let m=[],f=[],h=t.inputLayers;for(let d of h){let x=d[0],y=d[1],w=d[2];Jo(x in s);let v=s[x].inboundNodes[y].outputTensors;m.push(v[w])}let g=t.outputLayers;for(let d of g){let x=d[0],y=d[1],w=d[2];Jo(x in s);let v=s[x].inboundNodes[y].outputTensors;f.push(v[w])}return new e({inputs:m,outputs:f,name:c})}get stateful(){if(this._stateful)throw new G("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){U(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function b8(r,e,t){let o=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>null);if(o===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==o)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${o} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let n=[];return e.forEach(s=>{s in r?n.push(r[s]):n.push(null)}),n}else throw new Error(`The model has multiple (${o}) outputs, so ${t} must be either an array with ${o} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function Ug(r,e){return b8(r,e,"classWeight")}function Hg(r,e,t,o){return V(this,null,function*(){if(e!=null||o!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let n=U(()=>{if(r.shape.length===1)return Io(r);if(r.shape.length===2){if(r.shape[1]>1)return Ai(r,1);if(r.shape[1]===1)return B(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(yield n.data());Dt(n);let i=[];return s.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),Je(i,"float32")}else return null})}function H2(r,e){return z(r,e)}var w8=32;function j2(r,e){let t,o,n=e;t=n.xs,o=n.ys,b.assert(t!=null&&o!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=q2("input",r.inputNames,t),i=q2("output",r.outputNames,o),a=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(i.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let l=0;l<s.length;l++)b.assert(s[l].shape[0]===a,()=>`Batch size mismatch: input ${r.inputNames[l]} has ${s[l].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);for(let l=0;l<i.length;l++)b.assert(i[l].shape[0]===a,()=>`Batch size mismatch: output ${r.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);return{xs:s,ys:i}}function q2(r,e,t){if(t instanceof te)return[t];if(Array.isArray(t))return b.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let o=[];for(let n of e){if(t[n]==null)throw new G(`The feature data generated by the dataset lacks the required ${r} key '${n}'.`);o.push(t[n])}return o}}function N8(r){if(r.length===3)throw new It("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}function X2(r,e,t){return V(this,null,function*(){let o=t.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),b.assert(!o||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),b.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let n=t.validationData!=null,s,i;if(n)if(K2(t.validationData))b.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let d=N8(t.validationData);s=d.xs,i=d.ys}let a=r.makeTrainFunction(),l=r.getDedupedMetricsNames(),u;n?u=l.slice().concat(l.map(d=>"val_"+d)):u=l.slice();let c=Rg(t.callbacks,t.yieldEvery),p=t.verbose==null?1:t.verbose,{callbackList:m,history:f}=Fg(c,p,t.epochs,null,null,T8(e,t),null,n,u);m.setModel(r),r.history=f,yield m.onTrainBegin(),r.stopTraining_=!1;let h=t.initialEpoch==null?0:t.initialEpoch,g=yield e.iterator();for(;h<t.epochs;){let d={};yield m.onEpochBegin(h);let x=0,y=0;for(o||(g=yield e.iterator());!o||x<t.batchesPerEpoch;){let w=yield g.next();if(o&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){let{xs:N,ys:v}=j2(r,w.value),k={};k.batch=y,k.size=N[0].shape[0],yield m.onBatchBegin(y,k);let R=[];if(t.classWeight!=null){let M=Ug(t.classWeight,r.outputNames);for(let H=0;H<M.length;++H)R.push(yield Hg(v[H],null,M[H]))}let O=N.concat(v).concat(R),L=a(O);Dt(O);for(let M=0;M<l.length;++M){let H=l[M],q=L[M];k[H]=q,mr(q)}yield m.onBatchEnd(y,k),$g(k),y++,x++}if(o?x>=t.batchesPerEpoch:w.done){if(n){let N;K2(t.validationData)?N=ee(yield r.evaluateDataset(t.validationData,{batches:t.validationBatches})):N=ee(r.evaluate(s,i,{batchSize:t.validationBatchSize==null?w8:t.validationBatchSize,verbose:0}));for(let v=0;v<r.metricsNames.length;++v)d[`val_${r.metricsNames[v]}`]=N[v]}break}if(r.stopTraining_)break}if(yield m.onEpochEnd(h,d),h++,r.stopTraining_)break}return yield m.onTrainEnd(),yield r.history.syncData(),r.history}finally{r.isTraining=!1}})}function T8(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function K2(r){return typeof r.iterator=="function"}function S8(r){return typeof r.next=="function"}function Y2(r,e,t){return V(this,null,function*(){t=t||{};let o=t.batches!=null,n=r.testFunction,s=[];if(t.verbose>0)throw new It("Verbose mode is not implemented yet.");b.assert(!o||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let i=S8(e)?e:yield e.iterator(),a=0,l=0;for(;!o||l<t.batches;){let u=yield i.next();if(s=U(()=>{if(u.value){let{xs:c,ys:p}=j2(r,u.value),m=c.concat(p),f=U(()=>n(m));if(Dt(m),l===0)for(let g=0;g<f.length;++g)s.push(Ct(0));let h=m[0].shape[0];for(let g=0;g<f.length;++g){let d=f[g],x=s[g];s[g]=U(()=>tt(s[g],z(h,d))),l>0&&Dt(x)}Dt(f),a+=h,++l}return s}),u.done){o&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let c=s[u];s[u]=lt(s[u],a),Dt(c)}return xr(s)})}function qg(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function Jp(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(o=>Mi(o,e,t-e)):Mi(r,e,t-e)}function Kg(r,e){return U(()=>r==null?null:Array.isArray(r)?r.map(t=>Kg(t,e)):Sg(r,e.dtype==="int32"?e:nt(e,"int32")))}function jg(r,e){let t=[],o=0,n=null;for(;o<r;)n=o+e,n>=r&&(n=r),t.push([o,n]),o=n;return t}function iT(r){let e=[];r instanceof te&&(r=[r]);for(let t=0;t<r.length;++t){let o=r[t];if(o.rank===1)e.push(Vi(o,1));else{if(o.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(o)}}return e}function bn(r,e){if(r==null)return;let t=[];if(e instanceof te)t.push(e.id);else if(Array.isArray(e))e.forEach(n=>t.push(n.id));else if(e!=null)for(let n in e){let s=e[n];t.push(s.id)}let o=[];if(r instanceof te)t.indexOf(r.id)===-1&&o.push(r);else if(Array.isArray(r))r.forEach(n=>{t.indexOf(n.id)===-1&&o.push(n)});else if(r!=null)for(let n in r){let s=r[n];t.indexOf(s.id)===-1&&o.push(s)}o.forEach(n=>{n.isDisposed||n.dispose()})}function v8(r){return r instanceof te}function aT(r){return Array.isArray(r)}function Z2(r){return!v8(r)&&!aT(r)}function J2(r,e,t,o=!0,n=""){if(e==null||e.length===0){if(r!=null){let i=!1;if(aT(r)&&r.length>0)i=!0;else if(Z2(r)){for(let a in r)if(r.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new G(`Error when checking model ${n} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(i=>null);let s;if(Z2(r)){r=r,s=[];for(let i of e){if(r[i]==null)throw new G(`No data provided for "${i}". Need data for each key in: ${e}`);s.push(r[i])}}else if(aT(r)){if(r=r,r.length!==e.length)throw new G(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new G(`The model ${n} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=iT(s),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;let a=s[i];if(a.shape.length!==t[i].length)throw new G(`Error when checking ${n}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[i].length;++l){if(l===0&&!o)continue;let u=a.shape[l],c=t[i][l];if(c!=null&&c>=0&&u!==c)throw new G(`${n} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${n} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function C8(r,e,t){let o=gn(r.map(s=>s.shape[0]));o.sort();let n=gn(e.map(s=>s.shape[0]));if(n.sort(),o.length>1)throw new G(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(n.length>1)throw new G(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(o.length>0&&n.length>0&&!b.arraysEqual(o,n))throw new G(`Input Tensors should have the same number of samples as target Tensors. Found ${o[0]} input sample(s) and ${n[0]} target sample(s).`)}function I8(r,e,t){let o=[Pu,Yp,zu];for(let n=0;n<r.length;++n){let s=r[n],i=e[n],a=t[n];if(i!=null){if(i===zu&&s.shape[s.shape.length-1]===1)throw new G(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(o.indexOf(i)!==-1){let l=s.shape.slice(1),u=a.slice(1);for(let c=0;c<l.length;++c){let p=l[c],m=u[c];if(m!=null&&p!==m)throw new G(`A target Tensor with shape ${s.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Q2(r,e,t,o=!0,n=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new G(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new G(`The model expects ${e.length} ${n} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;let a=s[i];if(a.shape.length!==t[i].length)throw new G(`Error when checking ${n}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[i].length;++l){if(l===0&&!o)continue;let u=a.shape[l],c=t[i][l];if(c!=null&&c!==u)throw new G(`Error when checking ${n}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function k8(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(o=>t);{let o=[];for(let n of e){let s=t.hasOwnProperty(n)?t[n]:[];Array.isArray(s)||(s=[s]),o.push(s)}return o}}var E8="layers-model",Ui=(()=>{class r extends Wg{constructor(t){super(t),this.isTraining=!1}summary(t,o,n=console.log){if(!this.built)throw new G("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");W2(this,t,o,n)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=G2(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Or))throw new G("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let o=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(let a in t.loss)if(this.outputNames.indexOf(a)===-1)throw new G(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)t.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),o.push(Lg(t.loss[a]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new G(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);o=t.loss.map(l=>Lg(l))}else{let a=Lg(t.loss);this.outputs.forEach(l=>{o.push(a)})}this.lossFunctions=o,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let l=this.internalOutputShapes[a],u=this.outputNames[a];this.feedOutputNames.push(u),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Wn("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let l=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([l,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=k8(t.metrics,this.outputNames),i=(a,l,u)=>{this.outputNames.length>1&&(l=this.outputNames[a]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([u,a])};Wn("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let l=s[a];(c=>{let p="",m,f,h;for(let g of c){if(typeof g=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(g)!==-1){let x=this.internalOutputShapes[a];x[x.length-1]===1||this.lossFunctions[a]===Yp?["accuracy","acc"].indexOf(g)!==-1?f=zg:["crossentropy","ce"].indexOf(g)!==-1&&(f=eT):this.lossFunctions[a]===Xp?["accuracy","acc"].indexOf(g)!==-1?f=rT:["crossentropy","ce"].indexOf(g)!==-1&&(f=oT):["accuracy","acc"].indexOf(g)!==-1?f=Bg:["crossentropy","ce"].indexOf(g)!==-1&&(f=Mg);let y;["accuracy","acc"].indexOf(g)!==-1?y="acc":["crossentropy","ce"].indexOf(g)!==-1&&(y="ce"),h=f,m=p+y}else h=M2(g),m=p+Jf(g);let d;Wn(m,()=>{d=h}),i(a,m,d)}})(l)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,o,n={}){let s=n.batchSize==null?32:n.batchSize;qg(s);let a=this.standardizeUserDataXY(t,o,!0,s);try{let l=a[0].concat(a[1]);this.makeTestFunction();let u=this.testFunction,c=this.testLoop(u,l,s,n.verbose,n.steps);return xr(c)}finally{bn(a[0],t),bn(a[1],o)}}evaluateDataset(t,o){return V(this,null,function*(){return this.makeTestFunction(),Y2(this,t,o)})}checkNumSamples(t,o,n,s="steps"){let i;if(n!=null){if(i=null,o!=null)throw new G(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${o}`)}else if(t!=null)Array.isArray(t)?i=t[0].shape[0]:i=t.shape[0];else throw new G(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return i}execute(t,o){if(Array.isArray(o)&&o.length===0)throw new G("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(o),s=n?o:[o],i=this.retrieveSymbolicTensors(s),a=new ys;if(t instanceof te&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new G(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],t[u])}else for(let u of this.inputs){let c=t[u.name];if(c==null)throw new G(`No value is provided for the model's input ${u.name}`);a.add(u,c)}let l=Ou(i,a);return n?l:l[0]}retrieveSymbolicTensors(t){let o=hn(null,t.length),n=t.length;for(let s of this.layers){let i=Array.isArray(s.output)?s.output:[s.output],a=i.map(l=>l.name);for(let l=0;l<t.length;++l){let u=a.indexOf(t[l]);if(u!==-1&&(o[l]=i[u],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw o.forEach((i,a)=>{i==null&&s.push(t[a])}),new G(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return o}predictLoop(t,o=32,n=!1){return U(()=>{let s=this.checkNumSamples(t);if(n)throw new It("Verbose predictLoop() is not implemented yet.");let i=jg(s,o),a=this.outputs.map(l=>[]);for(let l=0;l<i.length;++l)U(()=>{let c=i[l][0],p=i[l][1],m=Jp(t,c,p),f=[];if(Array.isArray(m))for(let g=0;g<m.length;++g)f.push({key:this.inputs[g],value:m[g]});else f.push({key:this.inputs[0],value:m});let h=new ys(f);return Ou(this.outputs,h)}).forEach((c,p)=>a[p].push(c));return xr(a.map(l=>Te(l,0)))})}predict(t,o={}){let n=iT(t);Q2(n,this.inputNames,this.feedInputShapes,!1);try{let s=o.batchSize==null?32:o.batchSize;return qg(s),this.predictLoop(n,s)}finally{bn(n,t)}}predictOnBatch(t){Q2(t,this.inputNames,this.feedInputShapes,!0);let o=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,o)}standardizeUserDataXY(t,o,n=!0,s){if(this.optimizer_==null)throw new Jr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let i=[];for(let a=0;a<this.feedOutputShapes.length;++a){let l=this.feedOutputShapes[a];this.feedLossFns[a]===Xp?i.push(l.slice(0,l.length-1).concat([1])):i.push(l)}if(t=J2(t,this.feedInputNames,this.feedInputShapes,!1,"input"),o=J2(o,this.feedOutputNames,i,!1,"target"),C8(t,o,null),I8(o,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&t[0].shape[0]%s!==0)throw new G(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,o]}standardizeUserData(t,o,n,s,i=!0,a){return V(this,null,function*(){let[l,u]=this.standardizeUserDataXY(t,o,i,a);if(n!=null)throw new Error("sample weight is not supported yet.");let c=null;if(s!=null){let p=Ug(s,this.outputNames);c=[];for(let m=0;m<p.length;++m)c.push(yield Hg(u[m],null,p[m]))}return[l,u,c]})}testLoop(t,o,n,s=0,i){return U(()=>{let a=this.checkNumSamples(o,n,i,"steps"),l=[];if(s>0)throw new It("Verbose mode is not implemented yet.");if(i!=null)throw new It("steps mode in testLoop() is not implemented yet");{let u=jg(a,n),c=Je(to(0,a));for(let p=0;p<u.length;++p){let m=u[p][0],f=u[p][1],h=Mi(c,m,f-m),g=Kg(o,h),d=t(g);if(p===0)for(let x=0;x<d.length;++x)l.push(Ct(0));for(let x=0;x<d.length;++x){let y=d[x];l[x]=tt(l[x],z(f-m,y))}}for(let p=0;p<l.length;++p)l[p]=lt(l[p],a)}return l})}getDedupedMetricsNames(){let t=this.metricsNames,o=[];for(let n=0;n<t.length;++n){let s=t[n],i=s;if(BN(t,s)>1){let a=BN(t.slice(0,n),s);i+=`_${a}`}o.push(i)}return o}makeTrainFunction(){return t=>{let o=[],n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],l=()=>{let m=[];for(let d=0;d<this.inputs.length;++d)m.push({key:this.inputs[d],value:n[d]});let f=new ys(m),h=Ou(this.outputs,f,{training:!0}),g;for(let d=0;d<this.lossFunctions.length;++d){let x=this.lossFunctions[d],y=x(s[d],h[d]);i[d]!=null&&(y=H2(y,i[d]));let w=Ie(y);o.push(w),d===0?g=y:g=tt(g,y)}for(let d=0;d<this.metricsTensors.length;++d){let x;if(this.outputs.length>1&&d<this.outputs.length)x=o[d];else{let y=this.metricsTensors[d][0],w=this.metricsTensors[d][1];x=Ie(y(s[w],h[w]))}mr(x),a.push(x)}return g=Ie(g),this.calculateLosses().forEach(d=>{g=tt(g,d)}),g},u=this.collectedTrainableWeights.map(m=>m.read());return[this.optimizer_.minimize(l,!0,u)].concat(a)}}makeTestFunction(){this.testFunction=t=>U(()=>{let o=[],n,s=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:s[c]});let l=new ys(a),u=Ou(this.outputs,l);for(let c=0;c<this.lossFunctions.length;++c){let p=this.lossFunctions[c],m=Ie(p(i[c],u[c]));c===0?n=m:n=tt(n,m),o.push(n)}for(let c=0;c<this.metricsTensors.length;++c){let p=this.metricsTensors[c][0],m=this.metricsTensors[c][1],f=Ie(p(i[m],u[m]));o.push(f)}return o})}fit(s,i){return V(this,arguments,function*(t,o,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let a,l,u,c,p,m,f,h,g;try{let d=n.batchSize==null?32:n.batchSize;qg(d);let y=yield this.standardizeUserData(t,o,n.sampleWeight,n.classWeight,!1,d);a=y[0],l=y[1],g=y[2];let w=!1,N;if(n.validationData!=null&&n.validationData.length>0){if(w=!0,n.validationData.length===2)p=n.validationData[0],m=n.validationData[1];else throw n.validationData.length===3?new It("validationData including sample weights is not supported yet."):new G(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let K=yield this.standardizeUserData(p,m,null,null,!0,d);f=K[0],h=K[1],N=f.concat(h)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){w=!0;let q=Math.floor(a[0].shape[0]*(1-n.validationSplit)),K=a[0].shape[0];f=Jp(a,q,K),u=a,a=Jp(a,0,q),h=Jp(l,q,K),c=l,l=Jp(l,0,q),N=f.concat(h)}else n.validationSteps!=null&&(w=!0);let v=a.concat(l).concat(g);this.checkTrainableWeightsConsistency();let k=this.makeTrainFunction(),R=this.getDedupedMetricsNames(),O,L;w?(this.makeTestFunction(),O=this.testFunction,L=R.slice().concat(R.map(q=>"val_"+q))):(O=null,N=[],L=R.slice());let M=Rg(n.callbacks,n.yieldEvery);return yield this.fitLoop(k,v,R,d,n.epochs,n.verbose,M,O,N,n.shuffle,L,n.initialEpoch,null,null)}finally{this.isTraining=!1,bn(a,t),bn(l,o),bn(u,t),bn(c,o),bn(f,p),bn(h,m),g!=null&&Dt(g)}})}fitLoop(t,o,n,s,i,a,l,u,c,p,m,f,h,g){return V(this,null,function*(){s==null&&(s=32),i==null&&(i=1),p==null&&(p=!0),f==null&&(f=0);let d=!1;if(u!=null&&c!=null&&(d=!0),g!=null&&(d=!0,h==null))throw new G("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let x=this.checkNumSamples(o,s,h,"steps_per_epoch"),y;x!=null&&(y=to(0,x)),a==null&&(a=1);let{callbackList:w,history:N}=Fg(l,a,i,f,x,h,s,d,m);w.setModel(this),this.history=N,yield w.onTrainBegin(),this.stopTraining_=!1;for(let v=f;v<i;++v){yield w.onEpochBegin(v);let k={};if(h!=null)throw new It("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new It("batch shuffling is not implemneted yet");p&&b.shuffle(y);let R=Je(y),O=jg(x,s);for(let L=0;L<O.length;++L){let M={};if(yield w.onBatchBegin(L,M),U(()=>{let H=O[L][0],q=O[L][1],K=Mi(R,H,q-H);M.batch=L,M.size=q-H;let X=Kg(o,K),Y=t(X);for(let Q=0;Q<n.length;++Q){let et=n[Q],Z=Y[Q];M[et]=Z,mr(Z)}if(L===O.length-1&&d){let Q=this.testLoop(u,c,s);for(let et=0;et<n.length;++et){let Z=n[et],ot=Q[et];mr(ot),k["val_"+Z]=ot}}}),yield w.onBatchEnd(L,M),$g(M),this.stopTraining_)break}R.dispose()}if(yield w.onEpochEnd(v,k),this.stopTraining_)break}return yield w.onTrainEnd(),yield this.history.syncData(),this.history})}fitDataset(t,o){return V(this,null,function*(){return X2(this,t,o)})}trainOnBatch(t,o){return V(this,null,function*(){let n=yield this.standardizeUserData(t,o),s=n[0],i=n[1],l=this.makeTrainFunction()(s.concat(i)),u=[];for(let c of l){let p=yield c.data();u.push(p[0])}return Dt(l),bn(n[0],t),bn(n[1],o),xr(u)})}getNamedWeights(t){let o=[],n=t!=null&&t.trainableOnly,s=n?this.trainableWeights:this.weights,i=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||o.push({name:s[a].originalName,tensor:i[a]});return o}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){let t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let o=hf().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=o-hf().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=dn(this.loss);else if(Array.isArray(this.loss)){for(let o of this.loss)if(typeof o!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(o=>dn(o))}else{let o=Object.keys(this.loss);t={};let n=this.loss;for(let s of o)if(typeof n[s]=="string")t[s]=dn(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[dn(Jf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>dn(Jf(t)));{let t={};for(let o in this.metrics)t[o]=dn(Jf(this.metrics[o]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let o=Qf(t.optimizer_config),n=Ro(o),s;if(typeof t.loss=="string")s=Bi(t.loss);else if(Array.isArray(t.loss))s=t.loss.map(a=>Bi(a));else if(t.loss!=null){s={};for(let a in t.loss)s[a]=Bi(t.loss[a])}let i;if(Array.isArray(t.metrics))i=t.metrics.map(a=>Bi(a));else if(t.metrics!=null){i={};for(let a in t.metrics)i[a]=Bi(t.metrics[a])}this.compile({loss:s,metrics:i,optimizer:n})}save(t,o){return V(this,null,function*(){if(typeof t=="string"){let c=Pi.getSaveHandlers(t);if(c.length===0)throw new G(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new G(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new G("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=yield Pi.encodeWeights(this.getNamedWeights(o)),l={modelTopology:this.toJSON(null,!1),format:E8,generatedBy:`TensorFlow.js tfjs-layers v${Zp}`,convertedBy:null};if((o==null?!1:o.includeOptimizer)&&this.optimizer!=null){l.trainingConfig=this.getTrainingConfig();let c="optimizer",{data:p,specs:m}=yield Pi.encodeWeights(yield this.optimizer.getWeights(),c);n.specs.push(...m),n.data=Pi.concatenateArrayBuffers([n.data,p])}return this.userDefinedMetadata!=null&&(sT(this.userDefinedMetadata,this.name,!0),l.userDefinedMetadata=this.userDefinedMetadata),l.weightData=n.data,l.weightSpecs=n.specs,t.save(l)})}setUserDefinedMetadata(t){sT(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}return r.className="Model",r})();J.registerClass(Ui);var $8=(()=>{class r extends Ui{}return r.className="Functional",r})();J.registerClass($8);var lT=(()=>{class r extends Ui{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:ml("sequential_"),t.layers!=null)for(let o of t.layers)this.add(o)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new G(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let o=t instanceof r||t instanceof Ui,n;if(o){if(n=t,n.outputs.length!==1)throw new G("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new G("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new G("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=JN({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(s)}if(o)this.outputs=n.outputs,this.inputs=n.inputs;else{if(t.inboundNodes.length!==1)throw new G(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new G("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=ZN(this.outputs[0])}this.inboundNodes=[],new Gi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:hn(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=t.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,o){return this.model==null&&this.build(),this.model.call(t,o)}build(t){if(Pt(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ui({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,o,n=console.log){this.built||this.build(),super.summary(t,o,n)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,o,n={}){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.evaluate(t,o,n)}evaluateDataset(t,o){return V(this,null,function*(){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,o)})}predict(t,o={}){return this.model==null&&this.build(),this.model.predict(t,o)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}fit(s,i){return V(this,arguments,function*(t,o,n={}){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.fit(t,o,n)})}fitDataset(t,o){return V(this,null,function*(){if(!this.built)throw new Jr("The model needs to be compiled before being used.");return this.model.fitDataset(t,o)})}trainOnBatch(t,o){return V(this,null,function*(){return this.model.trainOnBatch(t,o)})}static fromConfig(t,o,n={},s=!1){let i,a={};if(o instanceof Array){if(o[0].className==null||o[0].className==="Merge")throw new G("Legacy serialization format not supported yet.");i=o}else b.assert(o.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=o.layers,delete o.layers,a=o;let l=new t(a);if(!(l instanceof r))throw new It(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(let u of i){let p=Ro(u,void 0,s);s&&p.setFastWeightInitDuringBuild(!0),l.add(p)}return l}set stopTraining(t){if(this.model==null)throw new G("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new G("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(let o of this.layers){let n={};n.className=o.getClassName(),n.config=o.getConfig(),t.push(n)}return{name:this.name,layers:t}}}return r.className="Sequential",r})();J.registerClass(lT);var Er=class extends J.Serializable{getConfig(){return{}}},D8=(()=>{class r extends Er{apply(t,o=1){return f2(t,o)}}return r.className="elu",r})();J.registerClass(D8);var _8=(()=>{class r extends Er{apply(t){return Af(t)}}return r.className="selu",r})();J.registerClass(_8);var R8=(()=>{class r extends Er{apply(t){return Ao(t)}}return r.className="relu",r})();J.registerClass(R8);var F8=(()=>{class r extends Er{apply(t){return U(()=>ds(6,Ao(t)))}}return r.className="relu6",r})();J.registerClass(F8);var O8=(()=>{class r extends Er{apply(t){return t}}return r.className="linear",r})();J.registerClass(O8);var L8=(()=>{class r extends Er{apply(t){return cn(t)}}return r.className="sigmoid",r})();J.registerClass(L8);var P8=(()=>{class r extends Er{apply(t){return d2(t)}}return r.className="hardSigmoid",r})();J.registerClass(P8);var z8=(()=>{class r extends Er{apply(t){return hs(t)}}return r.className="softplus",r})();J.registerClass(z8);var B8=(()=>{class r extends Er{apply(t){return h2(t)}}return r.className="softsign",r})();J.registerClass(B8);var M8=(()=>{class r extends Er{apply(t){return du(t)}}return r.className="tanh",r})();J.registerClass(M8);var cT=(()=>{class r extends Er{apply(t,o=-1){return Cu(t,o)}}return r.className="softmax",r})();J.registerClass(cT);var V8=(()=>{class r extends Er{apply(t,o=-1){return If(t,o)}}return r.className="logSoftmax",r})();J.registerClass(V8);var G8=(()=>{class r extends Er{apply(t){return U(()=>U(()=>{let o=Math.sqrt(2),n=z(.5,tt(1,Sf(lt(t,o))));return z(t,n)}))}}return r.className="gelu",r})();J.registerClass(G8);var W8=(()=>{class r extends Er{apply(t){return U(()=>z(.5,z(t,tt(1,du(z(he(lt(2,Math.PI)),tt(t,z(.044715,mo(t,3)))))))))}}return r.className="gelu_new",r})();J.registerClass(W8);var U8=(()=>{class r extends Er{apply(t){return U(()=>z(t,du(hs(t))))}}return r.className="mish",r})();J.registerClass(U8);var H8=(()=>{class r extends Er{apply(t,o=1){return U(()=>z(cn(z(t,o)),t))}}return r.className="swish",r})();J.registerClass(H8);function Hn(r){return r.getClassName()}function uT(r,e={}){return gs(r,J.SerializationMap.getMap().classNameMap,e,"activation")}function qn(r){if(r==null){let e={};return e.className="linear",e.config={},uT(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},uT(e)}else return r instanceof Er?r:uT(r)}function q8(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var Xg=class extends J.Serializable{},r$=(()=>{class r extends Xg{constructor(t){super(),q8(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return U(()=>{let o=ve([1]);return this.hasL1&&(o=tt(o,ft(z(this.l1,rr(t))))),this.hasL2&&(o=tt(o,ft(z(this.l2,Ru(t))))),B(o,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,o){return new t({l1:o.l1,l2:o.l2})}}return r.className="L1L2",r})();J.registerClass(r$);var t$={l1l2:"L1L2"};function ie(r){return Gp(r)}function e$(r,e={}){return gs(r,J.SerializationMap.getMap().classNameMap,e,"regularizer")}function ge(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in t$?t$[r]:r,config:{}};return e$(t)}else return r instanceof Xg?r:e$(r)}var o$=(()=>{class r extends kt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,o){t=St(t);let n=Ao(t);return this.maxValue!=null&&(n=Ir(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){let t={maxValue:this.maxValue},o=super.getConfig();return Object.assign(t,o),t}}return r.className="ReLU",r})();J.registerClass(o$);var n$=(()=>{class r extends kt{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,o){let n=St(t);return yu(n,this.alpha)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},o=super.getConfig();return Object.assign(t,o),t}}return r.className="LeakyReLU",r})();J.registerClass(n$);var s$=(()=>{class r extends kt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=pe(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ge(t.alphaRegularizer),this.alphaConstraint=Fe(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new G(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Pt(t);let o=t.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)o[s-1]=1;this.alpha=this.addWeight("alpha",o,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<t.length;++s)n[s]=t[s];this.inputSpec=[new de({ndim:t.length,axes:n})],this.built=!0}call(t,o){return t=St(t),Tu(t,this.alpha.read())}getConfig(){let t={alphaInitializer:be(this.alphaInitializer),alphaRegularizer:ie(this.alphaRegularizer),alphaConstraint:Re(this.alphaConstraint),sharedAxes:this.sharedAxes},o=super.getConfig();return Object.assign(t,o),t}}return r.className="PReLU",r})();J.registerClass(s$);var i$=(()=>{class r extends kt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new It(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,o){let n=St(t);return Fi(n)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},o=super.getConfig();return Object.assign(t,o),t}}return r.className="ELU",r})();J.registerClass(i$);var a$=(()=>{class r extends kt{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,o){let n=St(t);return z(n,nt(Ve(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){let t={theta:this.theta},o=super.getConfig();return Object.assign(t,o),t}}return r.className="ThresholdedReLU",r})();J.registerClass(a$);var l$=(()=>{class r extends kt{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new cT().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,o){return U(()=>{let n=St(t),s=o.mask;if(s!=null){let i=z(gt(Zr(n.shape),nt(s,n.dtype)),Ct(-1e9));n=tt(n,i)}return this.axis instanceof Array?this.axis.length>1?hr(gt(n,kf(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(t){return t}getConfig(){let t={axis:this.axis},o=super.getConfig();return Object.assign(t,o),t}}return r.className="Softmax",r})();J.registerClass(l$);function dl(r,e,t){if(typeof r=="number")return hn(r,e);if(r.length!==e)throw new G(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let o=0;o<e;++o){let n=r[o];if(!u2(n))throw new G(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${n}`)}return r}function ho(r,e,t,o,n=1){if(r==null)return r;let s=e+(e-1)*(n-1),i;return t==="same"?i=r:i=r-s+1,Math.floor((i+o-1)/o)}function Kn(r,e,t,o){if(r==null)return null;if(o==="valid")r=r*e+Un([t-e,0]);else if(o==="same")r=r*e;else throw new G(`Unsupport padding mode: ${o}.`);return r}function eh(r,e){return U(()=>(ke(e),e==="channelsFirst"?Bt(r,[0,2,3,1]):r))}function pT(r,e){return U(()=>(ke(e),e==="channelsFirst"?Bt(r,[0,2,3,4,1]):r))}function j8(r,e,t,o=1,n="valid",s,i=1){return U(()=>{if(s==null&&(s=eo()),ke(s),r.shape.length!==3)throw new G(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new G(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new G(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(r=Bt(r,[0,2,1])),n==="causal")throw new It("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=bf(r,e,o,n==="same"?"same":"valid","NWC",i);return t!=null&&(a=ro(a,t)),a})}function u$(r,e,t,o=[1,1],n="valid",s,i,a=null){return U(()=>{if(s==null&&(s=eo()),ke(s),r.rank!==3&&r.rank!==4)throw new G(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new G(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let l=eh(r,s);if(n==="causal")throw new It("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Au.conv2d({x:l,filter:e,strides:o,pad:n==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),s==="channelsFirst"&&(l=Bt(l,[0,3,1,2])),l})}function X8(r,e,t,o=[1,1,1],n="valid",s,i){return U(()=>{if(s==null&&(s=eo()),ke(s),r.rank!==4&&r.rank!==5)throw new G(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new G(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let a=pT(r,s);if(n==="causal")throw new It("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=H0(a,e,o,n==="same"?"same":"valid","NDHWC",i),t!=null&&(a=ro(a,t)),s==="channelsFirst"&&(a=Bt(a,[0,4,1,2,3])),a})}var th=class r extends kt{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",r.verifyArgs(t),this.rank=e,qe(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new It(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=dl(t.kernelSize,e,"kernelSize"),this.strides=dl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Qr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ke(this.dataFormat),this.activation=qn(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=pe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Fe(t.biasConstraint),this.biasRegularizer=ge(t.biasRegularizer),this.activityRegularizer=ge(t.activityRegularizer),this.dilationRate=dl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new G(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new G(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new G(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Jo("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!dg(e.kernelSize,"number",1,3))throw new G(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Hn(this.activation),useBias:this.useBias,biasInitializer:be(this.biasInitializer),biasRegularizer:ie(this.biasRegularizer),activityRegularizer:ie(this.activityRegularizer),biasConstraint:Re(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Qp=class r extends th{constructor(e,t){super(e,t),this.kernel=null,r.verifyArgs(t),this.filters=t.filters,qe(this.filters,"filters"),this.kernelInitializer=pe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Fe(t.kernelConstraint),this.kernelRegularizer=ge(t.kernelRegularizer)}build(e){e=Pt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new G(`The channel dimension of the input should be defined. Found ${e[t]}`);let o=e[t],n=this.kernelSize.concat([o,this.filters]);this.kernel=this.addWeight("kernel",n,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:o}}],this.built=!0}call(e,t){return U(()=>{e=St(e);let o,n=this.bias==null?null:this.bias.read(),s=gg(this.activation.getClassName());if(s!=null&&this.rank===2)o=u$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)o=j8(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)o=u$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)o=X8(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new It("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(o=this.activation.apply(o))}return o})}computeOutputShape(e){e=Pt(e);let t=[],o=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<o.length;++s){let i=ho(o[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(i)}let n=[e[0]];return this.dataFormat==="channelsLast"?(n=n.concat(t),n.push(this.filters)):(n.push(this.filters),n=n.concat(t)),n}getConfig(){let e={filters:this.filters,kernelInitializer:be(this.kernelInitializer),kernelRegularizer:ie(this.kernelRegularizer),kernelConstraint:Re(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new G(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},mT=(()=>{class r extends Qp{constructor(t){super(2,t),r.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!dg(t.kernelSize,"number",1,2))throw new G(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}return r.className="Conv2D",r})();J.registerClass(mT);var fT=(()=>{class r extends Qp{constructor(t){super(3,t),r.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new G(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}return r.className="Conv3D",r})();J.registerClass(fT);var c$=(()=>{class r extends mT{constructor(t){if(super(t),this.inputSpec=[new de({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new G(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Pt(t),t.length!==4)throw new G("Input should have rank 4; Received input shape: "+JSON.stringify(t));let o=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[o]==null)throw new G("The channel dimension of the inputs should be defined. Found `None`.");let n=t[o],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new de({ndim:4,axes:{[o]:n}})],this.built=!0}call(t,o){return U(()=>{let n=St(t);if(n.shape.length!==4)throw new G(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,i=s[0],a,l;this.dataFormat==="channelsFirst"?(a=2,l=3):(a=1,l=2);let u=s[a],c=s[l],p=this.kernelSize[0],m=this.kernelSize[1],f=this.strides[0],h=this.strides[1],g=Kn(u,f,p,this.padding),d=Kn(c,h,m,this.padding),x=[i,g,d,this.filters];this.dataFormat!=="channelsLast"&&(n=Bt(n,[0,2,3,1]));let y=wf(n,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Bt(y,[0,3,1,2])),this.bias!=null&&(y=ro(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(t){t=Pt(t);let o=t.slice(),n,s,i;this.dataFormat==="channelsFirst"?(n=1,s=2,i=3):(n=3,s=1,i=2);let a=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return o[n]=this.filters,o[s]=Kn(o[s],u,a,this.padding),o[i]=Kn(o[i],c,l,this.padding),o}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}}return r.className="Conv2DTranspose",r})();J.registerClass(c$);var p$=(()=>{class r extends fT{constructor(t){if(super(t),this.inputSpec=[new de({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new G(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Pt(t),t.length!==5)throw new G("Input should have rank 5; Received input shape: "+JSON.stringify(t));let o=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[o]==null)throw new G("The channel dimension of the inputs should be defined. Found `None`.");let n=t[o],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new de({ndim:5,axes:{[o]:n}})],this.built=!0}call(t,o){return U(()=>{let n=St(t);if(n.shape.length!==5)throw new G(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,i=s[0],a,l,u;this.dataFormat==="channelsFirst"?(u=2,a=3,l=4):(u=1,a=2,l=3);let c=s[u],p=s[a],m=s[l],f=this.kernelSize[0],h=this.kernelSize[1],g=this.kernelSize[2],d=this.strides[0],x=this.strides[1],y=this.strides[2],w=Kn(c,d,f,this.padding),N=Kn(p,x,h,this.padding),v=Kn(m,y,g,this.padding),k=[i,w,N,v,this.filters];this.dataFormat!=="channelsLast"&&(n=Bt(n,[0,2,3,4,1]));let R=q0(n,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(R=Bt(R,[0,4,1,2,3])),this.bias!==null&&(R=ro(R,this.bias.read(),this.dataFormat)),this.activation!==null&&(R=this.activation.apply(R)),R})}computeOutputShape(t){t=Pt(t);let o=t.slice(),n,s,i,a;this.dataFormat==="channelsFirst"?(n=1,s=2,i=3,a=4):(n=4,s=1,i=2,a=3);let l=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],p=this.strides[0],m=this.strides[1],f=this.strides[2];return o[n]=this.filters,o[s]=Kn(o[s],p,l,this.padding),o[i]=Kn(o[i],m,u,this.padding),o[a]=Kn(o[a],f,c,this.padding),o}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}}return r.className="Conv3DTranspose",r})();J.registerClass(p$);var Y8=(()=>{class r extends Qp{constructor(t,o){if(super(t,o),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,o.filters==null)throw new G("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(o.kernelInitializer!=null||o.kernelRegularizer!=null||o.kernelConstraint!=null)throw new G("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(o.padding!=null&&o.padding!=="same"&&o.padding!=="valid")throw new G(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(o.padding)}`);this.depthMultiplier=o.depthMultiplier==null?1:o.depthMultiplier,this.depthwiseInitializer=pe(o.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ge(o.depthwiseRegularizer),this.depthwiseConstraint=Fe(o.depthwiseConstraint),this.pointwiseInitializer=pe(o.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ge(o.pointwiseRegularizer),this.pointwiseConstraint=Fe(o.pointwiseConstraint)}build(t){if(t=Pt(t),t.length<this.rank+2)throw new G(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);let o=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[o]==null||t[o]<0)throw new G(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[o])}`);let n=t[o],s=this.kernelSize.concat([n,this.depthMultiplier]),i=[];for(let l=0;l<this.rank;++l)i.push(1);i.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new de({ndim:this.rank+2,axes:{[o]:n}})],this.built=!0}call(t,o){return U(()=>{t=St(t);let n;if(this.rank===1)throw new It("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Bt(t,[0,2,3,1])),n=Df(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=ro(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Bt(n,[0,3,1,2])),n})}getConfig(){let t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=be(this.depthwiseInitializer),t.pointwiseInitializer=be(this.pointwiseInitializer),t.depthwiseRegularizer=ie(this.depthwiseRegularizer),t.pointwiseRegularizer=ie(this.pointwiseRegularizer),t.depthwiseConstraint=Re(this.depthwiseConstraint),t.pointwiseConstraint=Re(this.pointwiseConstraint),t}}return r.className="SeparableConv",r})();var m$=(()=>{class r extends Y8{constructor(t){super(2,t)}}return r.className="SeparableConv2D",r})();J.registerClass(m$);var f$=(()=>{class r extends Qp{constructor(t){super(1,t),r.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!dg(t.kernelSize,"number",1,1))throw new G(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}return r.className="Conv1D",r})();J.registerClass(f$);var h$=(()=>{class r extends kt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,o){return U(()=>{if(t=St(t),this.dataFormat==="channelsLast"){let n=Hf(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Hf(n,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Hf(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Hf(n,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let t={cropping:this.cropping,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(t,o),t}}return r.className="Cropping2D",r})();J.registerClass(h$);var d$=(()=>{class r extends kt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ke(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,a2(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){let o=t[2]==null?null:this.size[0]*t[2],n=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],o,n]}else{let o=t[1]==null?null:this.size[0]*t[1],n=t[2]==null?null:this.size[1]*t[2];return[t[0],o,n,t[3]]}}call(t,o){return U(()=>{let n=St(t),s=n.shape;if(this.dataFormat==="channelsFirst"){n=Bt(n,[0,2,3,1]);let i=this.size[0]*s[2],a=this.size[1]*s[3],l=this.interpolation==="nearest"?Do.resizeNearestNeighbor(n,[i,a]):Do.resizeBilinear(n,[i,a]);return Bt(l,[0,3,1,2])}else{let i=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Do.resizeNearestNeighbor(n,[i,a]):Do.resizeBilinear(n,[i,a])}})}getConfig(){let t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},o=super.getConfig();return Object.assign(t,o),t}}return r.className="UpSampling2D",r})();J.registerClass(d$);function Z8(r,e,t=[1,1],o="valid",n,s){return U(()=>{n==null&&(n=eo()),ke(n);let i=eh(r,n);if(r.rank!==4)throw new G(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new G(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Ri(i,e,t,o==="same"?"same":"valid","NHWC",s),n==="channelsFirst"&&(i=Bt(i,[0,3,1,2])),i})}var g$=(()=>{class r extends th{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=pe(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Fe(t.depthwiseConstraint),this.depthwiseRegularizer=ge(t.depthwiseRegularizer)}build(t){if(t=Pt(t),t.length<4)throw new G(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);let o=this.dataFormat==="channelsFirst"?1:3;if(t[o]==null||t[o]<0)throw new G(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[o]}).`);let n=t[o],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,o){return U(()=>{t=St(t);let n=Z8(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=ro(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(t){t=Pt(t);let o=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],s=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=ho(o,this.kernelSize[0],this.padding,this.strides[0]),a=ho(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],s,i,a]:[t[0],i,a,s]}getConfig(){let t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=be(this.depthwiseInitializer),t.depthwiseRegularizer=ie(this.depthwiseRegularizer),t.depthwiseConstraint=Re(this.depthwiseRegularizer),t}}return r.className="DepthwiseConv2D",r})();J.registerClass(g$);function hT(r,e,t,o){if(Array.isArray(r)){if(e!=null||t!=null)throw new G("When inputs is an array, neither initialState or constants should be provided");o!=null&&(t=r.slice(r.length-o,r.length),r=r.slice(0,r.length-o)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function n(s){return s==null||Array.isArray(s)?s:[s]}return e=n(e),t=n(t),{inputs:r,initialState:e,constants:t}}function dT(r,e,t,o=!1,n,s,i=!1,a=!1){return U(()=>{let l=e.shape.length;if(l<3)throw new G(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(to(2,l));if(e=Bt(e,u),s!=null)throw new It("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),n!=null&&(n=nt(nt(n,"bool"),"float32"),n.rank===l-1&&(n=Ze(n,-1)),n=Bt(n,u)),o&&(e=Yo(e,0),n!=null&&(n=Yo(n,0)));let c=[],p,m=t,f=e.shape[0],h=Gr(e),g;n!=null&&(g=Gr(n));for(let x=0;x<f;++x){let y=h[x],w=U(()=>r(y,m));if(n==null)p=w[0],m=w[1];else{let N=U(()=>{let v=g[x],k=gt(dr(v),v),R=tt(z(w[0],v),z(m[0],k)),O=m.map((L,M)=>tt(z(w[1][M],v),z(L,k)));return{output:R,newStates:O}});p=N.output,m=N.newStates}a&&c.push(p)}let d;return a&&(d=ir(c,1)),[p,d,m]})}var xl=(()=>{class r extends kt{constructor(t){super(t);let o;if(t.cell==null)throw new G("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?o=new yT({cells:t.cell}):o=t.cell,o.stateSize==null)throw new G("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=o,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new de({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return to(0,t).map(o=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Ig(t)&&(t=t[0]),t=t;let o=this.cell.stateSize;Array.isArray(o)||(o=[o]);let n=o[0],s;if(this.returnSequences?s=[t[0],t[1],n]:s=[t[0],n],this.returnState){let i=[];for(let a of o)i.push([t[0],a]);return[s].concat(i)}else return s}computeMask(t,o){return U(()=>{Array.isArray(o)&&(o=o[0]);let n=this.returnSequences?o:null;if(this.returnState){let s=this.states.map(i=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,o=[];for(let n=0;n<t;++n)o.push(null);return o}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new It("Constants support is not implemented in RNN yet.");Ig(t)&&(t=t[0]),t=t;let n=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new de({shape:[n,null,...s]});let i=[t[0]].concat(t.slice(2));this.cell.build(i);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(l=>l.shape[l.shape.length-1]),a))throw new G(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(l=>new de({shape:[null,l]}));this.stateful&&this.resetStates()}resetStates(t,o=!1){U(()=>{if(!this.stateful)throw new Zo("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new G("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>ve([n,s])):this.states_=[ve([n,this.cell.stateSize])];else if(t==null)Dt(this.states_),this.keptStates!=null&&(Dt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>ve([n,s])):this.states_[0]=ve([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new G(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);o===!0?this.keptStates.push(this.states_.slice()):Dt(this.states_);for(let s=0;s<this.states_.length;++s){let i=t[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,l=[n,a];if(!b.arraysEqual(i.shape,l))throw new G(`State ${s} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>mr(s.clone()))})}apply(t,o){let n=o==null?null:o.initialState,s=o==null?null:o.constants;o==null&&(o={});let i=hT(t,n,s,this.numConstants);t=i.inputs,n=i.initialState,s=i.constants;let a=[],l=[];if(n!=null){o.initialState=n,a=a.concat(n),this.stateSpec=[];for(let c of n)this.stateSpec.push(new de({shape:c.shape}));l=l.concat(this.stateSpec)}if(s!=null&&(o.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Ur){let c=[t].concat(a),p=this.inputSpec.concat(l),m=this.inputSpec;this.inputSpec=p;let f=super.apply(c,o);return this.inputSpec=m,f}else return super.apply(t,o)}call(t,o){return U(()=>{let n=o==null?null:o.mask,s=o==null?null:o.training,i=o==null?null:o.initialState;t=St(t),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(t));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new G(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let l={training:s},c=dT((g,d)=>{let x=this.cell.call([g].concat(d),l);return[x[0],x.slice(1)]},t,i,this.goBackwards,n,null,this.unroll,this.returnSequences),p=c[0],m=c[1],f=c[2];this.stateful&&this.resetStates(f,s);let h=this.returnSequences?m:p;return this.returnState?[h].concat(f):h})}getInitialState(t){return U(()=>{let o=ve(t.shape);return o=ft(o,[1,2]),o=Vi(o),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Tg(o,[1,n]):o):this.cell.stateSize>1?[Tg(o,[1,this.cell.stateSize])]:[o]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){let t=super.getConfig(),o={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(o.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===r.className&&(o.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),o)}static fromConfig(t,o,n={}){let s=o.cell,i=Ro(s,n);return new t(Object.assign(o,{cell:i}))}}return r.className="RNN",r})();J.registerClass(xl);var gl=class extends kt{},gT=(()=>{class r extends gl{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,qe(this.units,"units"),this.activation=qn(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=pe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ge(t.kernelRegularizer),this.recurrentRegularizer=ge(t.recurrentRegularizer),this.biasRegularizer=ge(t.biasRegularizer),this.kernelConstraint=Fe(t.kernelConstraint),this.recurrentConstraint=Fe(t.recurrentConstraint),this.biasConstraint=Fe(t.biasConstraint),this.dropout=_u([1,Un([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=_u([1,Un([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Pt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,o){return U(()=>{if(t=t,t.length!==2)throw new G(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];let s=o.training==null?!1:o.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Hi({ones:()=>dr(t),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Hi({ones:()=>dr(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let i,a=this.dropoutMask,l=this.recurrentDropoutMask;a!=null?i=yn(z(t,a),this.kernel.read()):i=yn(t,this.kernel.read()),this.bias!=null&&(i=ro(i,this.bias.read())),l!=null&&(n=z(n,l));let u=tt(i,yn(n,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let t=super.getConfig(),o={units:this.units,activation:Hn(this.activation),useBias:this.useBias,kernelInitializer:be(this.kernelInitializer),recurrentInitializer:be(this.recurrentInitializer),biasInitializer:be(this.biasInitializer),kernelRegularizer:ie(this.kernelRegularizer),recurrentRegularizer:ie(this.recurrentRegularizer),biasRegularizer:ie(this.biasRegularizer),activityRegularizer:ie(this.activityRegularizer),kernelConstraint:Re(this.kernelConstraint),recurrentConstraint:Re(this.recurrentConstraint),biasConstraint:Re(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),o)}}return r.className="SimpleRNNCell",r})();J.registerClass(gT);var x$=(()=>{class r extends xl{constructor(t){t.cell=new gT(t),super(t)}call(t,o){return U(()=>{this.cell.dropoutMask!=null&&(Dt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Dt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=o==null?null:o.mask,s=o==null?null:o.training,i=o==null?null:o.initialState;return super.call(t,{mask:n,training:s,initialState:i})})}static fromConfig(t,o){return new t(o)}}return r.className="SimpleRNN",r})();J.registerClass(x$);var xT=(()=>{class r extends gl{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new G("GRUCell does not support reset_after parameter set to true.");this.units=t.units,qe(this.units,"units"),this.activation=qn(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=qn(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=pe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ge(t.kernelRegularizer),this.recurrentRegularizer=ge(t.recurrentRegularizer),this.biasRegularizer=ge(t.biasRegularizer),this.kernelConstraint=Fe(t.kernelConstraint),this.recurrentConstraint=Fe(t.recurrentConstraint),this.biasConstraint=Fe(t.biasConstraint),this.dropout=_u([1,Un([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=_u([1,Un([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Pt(t);let o=t[t.length-1];this.kernel=this.addWeight("kernel",[o,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,o){return U(()=>{if(t=t,t.length!==2)throw new G(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);let n=o.training==null?!1:o.training,s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Hi({ones:()=>dr(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Hi({ones:()=>dr(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,a=this.recurrentDropoutMask,l,u,c;0<this.dropout&&this.dropout<1&&(t=z(t,i[0]));let p=yn(t,this.kernel.read());this.useBias&&(p=ro(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=z(s,a[0]));let m=this.recurrentKernel.read(),[f,h]=ur(m,[2*this.units,this.units],m.rank-1),g=yn(s,f),[d,x,y]=ur(p,3,p.rank-1),[w,N]=ur(g,2,g.rank-1);l=this.recurrentActivation.apply(tt(d,w)),u=this.recurrentActivation.apply(tt(x,N));let v=yn(z(u,s),h);c=this.activation.apply(tt(y,v));let k=tt(z(l,s),z(tt(1,Yt(l)),c));return[k,k]})}getConfig(){let t=super.getConfig(),o={units:this.units,activation:Hn(this.activation),recurrentActivation:Hn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:be(this.kernelInitializer),recurrentInitializer:be(this.recurrentInitializer),biasInitializer:be(this.biasInitializer),kernelRegularizer:ie(this.kernelRegularizer),recurrentRegularizer:ie(this.recurrentRegularizer),biasRegularizer:ie(this.biasRegularizer),activityRegularizer:ie(this.activityRegularizer),kernelConstraint:Re(this.kernelConstraint),recurrentConstraint:Re(this.recurrentConstraint),biasConstraint:Re(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),o)}}return r.className="GRUCell",r})();J.registerClass(xT);var y$=(()=>{class r extends xl{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new xT(t),super(t)}call(t,o){return U(()=>{this.cell.dropoutMask!=null&&(Dt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Dt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=o==null?null:o.mask,s=o==null?null:o.training,i=o==null?null:o.initialState;return super.call(t,{mask:n,training:s,initialState:i})})}static fromConfig(t,o){return o.implmentation===0&&(o.implementation=1),new t(o)}}return r.className="GRU",r})();J.registerClass(y$);var rh=(()=>{class r extends gl{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,qe(this.units,"units"),this.activation=qn(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=qn(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=pe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=ge(t.kernelRegularizer),this.recurrentRegularizer=ge(t.recurrentRegularizer),this.biasRegularizer=ge(t.biasRegularizer),this.kernelConstraint=Fe(t.kernelConstraint),this.recurrentConstraint=Fe(t.recurrentConstraint),this.biasConstraint=Fe(t.biasConstraint),this.dropout=_u([1,Un([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=_u([1,Un([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var o;t=Pt(t);let n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let i=this.biasInitializer,a=this.units;s=new(o=class extends oo{apply(u,c){let p=i.apply([a]),m=new Cg().apply([a]),f=i.apply([a*2]);return UN(UN(p,m),f)}},o.className="CustomInit",o)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,o){return U(()=>{let n=o.training==null?!1:o.training;if(t=t,t.length!==3)throw new G(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1],i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Hi({ones:()=>dr(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Hi({ones:()=>dr(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,l=this.recurrentDropoutMask,u,c,p,m;0<this.dropout&&this.dropout<1&&(t=z(t,a[0]));let f=yn(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=z(s,l[0])),f=tt(f,yn(s,this.recurrentKernel.read())),this.useBias&&(f=ro(f,this.bias.read()));let[h,g,d,x]=ur(f,4,f.rank-1);u=this.recurrentActivation.apply(h),c=this.recurrentActivation.apply(g),p=tt(z(c,i),z(u,this.activation.apply(d))),m=this.recurrentActivation.apply(x);let y=z(m,this.activation.apply(p));return[y,y,p]})}getConfig(){let t=super.getConfig(),o={units:this.units,activation:Hn(this.activation),recurrentActivation:Hn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:be(this.kernelInitializer),recurrentInitializer:be(this.recurrentInitializer),biasInitializer:be(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ie(this.kernelRegularizer),recurrentRegularizer:ie(this.recurrentRegularizer),biasRegularizer:ie(this.biasRegularizer),activityRegularizer:ie(this.activityRegularizer),kernelConstraint:Re(this.kernelConstraint),recurrentConstraint:Re(this.recurrentConstraint),biasConstraint:Re(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),o)}}return r.className="LSTMCell",r})();J.registerClass(rh);var b$=(()=>{class r extends xl{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new rh(t),super(t)}call(t,o){return U(()=>{this.cell.dropoutMask!=null&&(Dt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Dt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=o==null?null:o.mask,s=o==null?null:o.training,i=o==null?null:o.initialState;return super.call(t,{mask:n,training:s,initialState:i})})}static fromConfig(t,o){return o.implmentation===0&&(o.implementation=1),new t(o)}}return r.className="LSTM",r})();J.registerClass(b$);var yT=(()=>{class r extends gl{constructor(t){super(t),this.cells=t.cells}get stateSize(){let t=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?t.push(...o.stateSize):t.push(o.stateSize);return t}call(t,o){return U(()=>{t=t;let n=t.slice(1),s=[];for(let l of this.cells.slice().reverse())Array.isArray(l.stateSize)?s.push(n.splice(0,l.stateSize.length)):s.push(n.splice(0,1));s.reverse();let i=[],a;for(let l=0;l<this.cells.length;++l){let u=this.cells[l];n=s[l],l===0?a=[t[0]].concat(n):a=[a[0]].concat(n),a=u.call(a,o),i.push(a.slice(1))}n=[];for(let l of i.slice().reverse())n.push(...l);return[a[0]].concat(n)})}build(t){Ig(t)&&(t=t[0]),t=t;let o;this.cells.forEach((n,s)=>{Wn(`RNNCell_${s}`,()=>{n.build(t),Array.isArray(n.stateSize)?o=n.stateSize[0]:o=n.stateSize,t=[t[0],o]})}),this.built=!0}getConfig(){let t=super.getConfig(),o=i=>({className:i.getClassName(),config:i.getConfig()}),s={cells:this.cells.map(o)};return Object.assign(Object.assign({},t),s)}static fromConfig(t,o,n={}){let s=[];for(let i of o.cells)s.push(Ro(i,n));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];let t=[];for(let o of this.cells)t.push(...o.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let o of this.cells)t.push(...o.nonTrainableWeights);if(!this.trainable){let o=[];for(let n of this.cells)o.push(...n.trainableWeights);return o.concat(t)}return t}getWeights(){let t=[];for(let o of this.cells)t.push(...o.weights);return Kf(t)}setWeights(t){let o=[];for(let n of this.cells){let s=n.weights.length,i=t.splice(s);for(let a=0;a<n.weights.length;++a)o.push([n.weights[a],i[a]])}jp(o)}}return r.className="StackedRNNCells",r})();J.registerClass(yT);function Hi(r){let{ones:e,rate:t,training:o=!1,count:n=1,dropoutFunc:s}=r,i=()=>s!=null?s(e(),t):vg(e(),t),a=()=>fl(i,e,o);return!n||n<=1?mr(a().clone()):Array(n).fill(void 0).map(a).map(u=>mr(u.clone()))}var J8=function(r,e){var t={};for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&e.indexOf(o)<0&&(t[o]=r[o]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var n=0,o=Object.getOwnPropertySymbols(r);n<o.length;n++)e.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(r,o[n])&&(t[o[n]]=r[o[n]]);return t};var Q8=(()=>{class r extends xl{constructor(t){if(t.unroll)throw new It("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new It("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new de({ndim:5})]}call(t,o){return U(()=>{if(this.cell.dropoutMask!=null&&(Dt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Dt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),o&&o.constants)throw new G("ConvRNN2D cell does not support constants");let n=o==null?null:o.mask,s=o==null?null:o.training,i=o==null?null:o.initialState;return super.call(t,{mask:n,training:s,initialState:i})})}computeOutputShape(t){let o=this.computeSingleOutputShape(t);return this.returnSequences||(o=[o[0],...o.slice(2)]),this.returnState&&(o=[o,...Array(2).fill([t[0],...o.slice(-3)])]),o}getInitialState(t){return U(()=>{let{stateSize:o}=this.cell,n=t.shape,s=this.computeSingleOutputShape(n),i=[s[0],...s.slice(2)],a=ve(i);return Array.isArray(o)?Array(o.length).fill(a):[a]})}resetStates(t,o=!1){U(()=>{if(!this.stateful)throw new Zo("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),i=[s[0],...s.slice(2)];if(n[0]==null)throw new G("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ve(i)):this.states_=[ve(i)];else if(t==null)Dt(this.states_),this.keptStates!=null&&(Dt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ve(i)):this.states_[0]=ve(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new G(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);o?this.keptStates.push(this.states_.slice()):Dt(this.states_);for(let l=0;l<this.states_.length;++l){let u=t[l],c=i;if(!b.arraysEqual(u.shape,c))throw new G(`State ${l} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[l]=u}}this.states_=this.states_.map(l=>mr(l.clone()))})}computeSingleOutputShape(t){let{dataFormat:o,filters:n,kernelSize:s,padding:i,strides:a,dilationRate:l}=this.cell,u=o==="channelsFirst",c=t[u?3:2],p=t[u?4:3],m=ho(c,s[0],i,a[0],l[0]),f=ho(p,s[1],i,a[1],l[1]);return[...t.slice(0,2),...u?[n,m,f]:[m,f,n]]}}return r.className="ConvRNN2D",r})(),bT=(()=>{class r extends rh{constructor(t){let{filters:o,kernelSize:n,strides:s,padding:i,dataFormat:a,dilationRate:l}=t;super(Object.assign(Object.assign({},t),{units:o})),this.filters=o,qe(this.filters,"filters"),this.kernelSize=dl(n,2,"kernelSize"),this.kernelSize.forEach(u=>qe(u,"kernelSize")),this.strides=dl(s||1,2,"strides"),this.strides.forEach(u=>qe(u,"strides")),this.padding=i||"valid",Qr(this.padding),this.dataFormat=a||"channelsLast",ke(this.dataFormat),this.dilationRate=dl(l||1,2,"dilationRate"),this.dilationRate.forEach(u=>qe(u,"dilationRate"))}build(t){var o;t=Pt(t);let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new G(`The channel dimension of the input should be defined. Found ${t[n]}`);let s=t[n],i=4,a=this.kernelSize.concat([s,this.filters*i]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let l=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let c=this.biasInitializer,p=this.filters;u=new(o=class extends oo{apply(f,h){let g=c.apply([p]),d=Zr([p]),x=c.apply([p*2]);return Up([g,d,x])}},o.className="CustomInit",o)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,o){return U(()=>{if(t.length!==3)throw new G(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let n=o.training||!1,s=t[0],i=t[1],a=t[2],l=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Hi({ones:()=>dr(s),rate:this.dropout,training:n,count:l,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,c=(at,pt,ut)=>!pt||!pt[ut]?at:z(pt[ut],at),p=c(s,u,0),m=c(s,u,1),f=c(s,u,2),h=c(s,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Hi({ones:()=>dr(i),rate:this.recurrentDropout,training:n,count:l,dropoutFunc:this.dropoutFunc}));let g=this.recurrentDropoutMask,d=c(i,g,0),x=c(i,g,1),y=c(i,g,2),w=c(i,g,3),N=3,[v,k,R,O]=ur(this.kernel.read(),l,N),[L,M,H,q]=this.useBias?ur(this.bias.read(),l):[null,null,null,null];p=this.inputConv(p,v,L,this.padding),m=this.inputConv(m,k,M,this.padding),f=this.inputConv(f,R,H,this.padding),h=this.inputConv(h,O,q,this.padding);let[K,X,Y,Q]=ur(this.recurrentKernel.read(),l,N);d=this.recurrentConv(d,K),x=this.recurrentConv(x,X),y=this.recurrentConv(y,Y),w=this.recurrentConv(w,Q);let et=this.recurrentActivation.apply(tt(p,d)),Z=this.recurrentActivation.apply(tt(m,x)),ot=tt(z(Z,a),z(et,this.activation.apply(tt(f,y)))),it=z(this.recurrentActivation.apply(tt(h,w)),this.activation.apply(ot));return[it,it,ot]})}getConfig(){let t=super.getConfig(),{units:o}=t,n=J8(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(t,o,n,s){let i=ko(t,o,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?ro(i,n,this.dataFormat):i}recurrentConv(t,o){return ko(t,o,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}return r.className="ConvLSTM2DCell",r})();J.registerClass(bT);var w$=(()=>{class r extends Q8{constructor(t){let o=new bT(t);super(Object.assign(Object.assign({},t),{cell:o}))}static fromConfig(t,o){return new t(o)}}return r.className="ConvLSTM2D",r})();J.registerClass(w$);var wT=(()=>{class r extends kt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;let o=t.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?o[s]:this.noiseShape[s]);return n}call(t,o){return U(()=>{this.invokeCallHook(t,o);let n=St(t);if(0<this.rate&&this.rate<1){let s=o.training==null?!1:o.training,i=this.getNoiseShape(n);return fl(()=>vg(n,this.rate,i,this.seed),()=>n,s)}return t})}getConfig(){let t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},o=super.getConfig();return Object.assign(t,o),t}dispose(){return super.dispose()}}return r.className="Dropout",r})();J.registerClass(wT);var N$=(()=>{class r extends wT{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let o=t.shape;return[o[0],1,o[2]]}}return r.className="SpatialDropout1D",r})();J.registerClass(N$);var T$=(()=>{class r extends kt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let o=null;t.batchSize!=null&&(o=t.batchSize),this.batchInputShape=[o,t.inputDim]}this.units=t.units,qe(this.units,"units"),this.activation=qn(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=pe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=pe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Fe(t.kernelConstraint),this.biasConstraint=Fe(t.biasConstraint),this.kernelRegularizer=ge(t.kernelRegularizer),this.biasRegularizer=ge(t.biasRegularizer),this.activityRegularizer=ge(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Pt(t);let o=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[o,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:o}}],this.built=!0}computeOutputShape(t){t=Pt(t);let o=t.slice();return o[o.length-1]=this.units,o}call(t,o){return U(()=>{this.invokeCallHook(t,o);let n=St(t),s=gg(this.activation.getClassName()),i;return s!=null?i=yn(n,this.kernel.read(),s,this.bias?this.bias.read():null):(i=yn(n,this.kernel.read()),this.bias!=null&&(i=ro(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){let t={units:this.units,activation:Hn(this.activation),useBias:this.useBias,kernelInitializer:be(this.kernelInitializer),biasInitializer:be(this.biasInitializer),kernelRegularizer:ie(this.kernelRegularizer),biasRegularizer:ie(this.biasRegularizer),activityRegularizer:ie(this.activityRegularizer),kernelConstraint:Re(this.kernelConstraint),biasConstraint:Re(this.biasConstraint)},o=super.getConfig();return Object.assign(t,o),t}}return r.className="Dense",r})();J.registerClass(T$);var S$=(()=>{class r extends kt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Pt(t);for(let o of t.slice(1))if(o==null)throw new G(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],xn(t,1)]}call(t,o){return U(()=>{this.invokeCallHook(t,o);let n=St(t);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let i=2;i<n.rank;++i)s.push(i);s.push(1),n=Bt(n,s)}return m2(n)})}getConfig(){let t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);let o=super.getConfig();return Object.assign(t,o),t}}return r.className="Flatten",r})();J.registerClass(S$);var v$=(()=>{class r extends kt{constructor(t){super(t),this.supportsMasking=!0,this.activation=qn(t.activation)}call(t,o){return U(()=>{this.invokeCallHook(t,o);let n=St(t);return this.activation.apply(n)})}getConfig(){let t={activation:Hn(this.activation)},o=super.getConfig();return Object.assign(t,o),t}}return r.className="Activation",r})();J.registerClass(v$);var C$=(()=>{class r extends kt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,o){return U(()=>(t=St(t),c2(t,this.n)))}getConfig(){let t={n:this.n},o=super.getConfig();return Object.assign(t,o),t}}return r.className="RepeatVector",r})();J.registerClass(C$);var I$=(()=>{class r extends kt{constructor(t){super(t),this.targetShape=t.targetShape;for(let o=0;o<this.targetShape.length;++o)this.isUnknown(this.targetShape[o])&&(this.targetShape[o]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,o){let n="Total size of new array must be unchanged.",s=o.slice(),i=1,a=null;for(let u=0;u<s.length;++u){let c=s[u];if(this.isUnknown(c))if(a===null)a=u;else throw new G("Can only specifiy one unknown dimension.");else i*=c}let l=xn(t);if(a!==null){if(i===0||l%i!==0)throw new G(n);s[a]=l/i}else if(l!==i)throw new G(n);return s}computeOutputShape(t){let o=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){o=!0;break}return o?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,o){return U(()=>{this.invokeCallHook(t,o);let n=St(t),s=n.shape,i=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return B(n,i)})}getConfig(){let t={targetShape:this.targetShape},o=super.getConfig();return Object.assign(t,o),t}}return r.className="Reshape",r})();J.registerClass(I$);var k$=(()=>{class r extends kt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);let o=to(1,t.dims.length+1);if(!b.arraysEqual(t.dims.slice().sort(),o))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new de({ndim:this.dims.length+1})]}computeOutputShape(t){t=Pt(t);let o=t.slice();return this.dims.forEach((n,s)=>{o[s+1]=t[n]}),o}call(t,o){return Bt(St(t),this.dimsIncludingBatch)}getConfig(){let t={dims:this.dims},o=super.getConfig();return Object.assign(t,o),t}}return r.className="Permute",r})();J.registerClass(k$);var E$=(()=>{class r extends kt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),o={maskValue:this.maskValue};return Object.assign(o,t),o}computeMask(t,o){let n=St(t);return wp(cl(n,this.maskValue),-1)}call(t,o){return U(()=>{this.invokeCallHook(t,o);let n=St(t),a=wp(cl(n,this.maskValue),-1,!0);return z(n,nt(a,n.dtype))})}}return r.className="Masking",r})();J.registerClass(E$);var $$=(()=>{class r extends kt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let o=null;t.batchSize!=null&&(o=t.batchSize),t.inputLength==null?this.batchInputShape=[o,null]:this.batchInputShape=[o].concat(ee(t.inputLength))}this.inputDim=t.inputDim,qe(this.inputDim,"inputDim"),this.outputDim=t.outputDim,qe(this.outputDim,"outputDim"),this.embeddingsInitializer=pe(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ge(t.embeddingsRegularizer),this.activityRegularizer=ge(t.activityRegularizer),this.embeddingsConstraint=Fe(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,o){return U(()=>this.maskZero?(t=St(t),cl(t,Tt(t))):null)}computeOutputShape(t){if(t=Pt(t),this.inputLength==null)return[...t,this.outputDim];let o=ee(this.inputLength);if(o.length!==t.length-1)throw new G(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let s=0;s<o.length;++s){let i=o[s],a=t[s+1];if(i!=null&&a!=null&&i!==a)throw new G(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);i==null&&(o[n]=a),n++}}return[t[0],...o,this.outputDim]}call(t,o){return U(()=>{this.invokeCallHook(t,o);let n=St(t);n.dtype!=="int32"&&(n=Wr(n,"int32"));let s=Sg(this.embeddings.read(),B(n,[n.size]));return B(s,Pt(this.computeOutputShape(n.shape)))})}getConfig(){let t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:be(this.embeddingsInitializer),embeddingsRegularizer:ie(this.embeddingsRegularizer),activityRegularizer:ie(this.activityRegularizer),embeddingsConstraint:Re(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},o=super.getConfig();return Object.assign(t,o),t}}return r.className="Embedding",r})();J.registerClass($$);var qi=class extends kt{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new It}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let o=e.slice(0,e.length-t.length);for(let n=0;n<t.length;++n){let s=e[e.length-t.length+n],i=t[n];if(s==null||i==null||s<0||i<0)o.push(null);else if(s===1)o.push(i);else if(i===1)o.push(s);else{if(s!==i)throw new G("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));o.push(s)}}return o}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Pt(e)]),e=e,e.length<2)throw new G(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=gn(t),t.length>1)throw new G(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let o=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let i=e[s]==null?null:e[s].slice(1);o=this.computeElementwiseOpOutputShape(o,i)}let n=e.map(s=>s.length);e.indexOf(null)===-1&&gn(n).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return U(()=>{if(e=e,this.reshapeRequired){let o=[],n=e.map(s=>s.rank);if(n.indexOf(null)===-1){let s=Un(n);for(let i of e){let a=i.rank;for(let l=0;l<s-a;++l)i=Vi(i,1);o.push(i)}return this.mergeFunction(o)}else{let s=!1;for(let l of e){let u=l.rank;if(u==null){let c=l.shape,p=c[0],m=c.slice(1).concat([p]),f=B(l,[p].concat(xn(c.slice(1))));f=Bt(f,[1,0]),f=B(f,m),o.push(f),s=!0}else if(u>1){let c=to(1,u).concat([0]);o.push(Bt(l,c)),s=!0}else o.push(l)}let i=this.mergeFunction(o),a=i.rank;if(s){if(a==null){let l=i.shape,u=l.length,c=l[u-1],p=[c].concat(l.slice(0,l.length-1));i=B(Bt(B(i,[-1,c]),[1,0]),p)}else if(a>1){let l=[a-1].concat(to(0,a-1));i=Bt(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let n=1;n<e.length;++n){let s=e[n]==null?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let o=[];for(let n of e)n!=null&&n[0]!==null&&o.push(n[0]);return o=gn(o),o.length===1?t=o.concat(t):t=[null].concat(t),t}computeMask(e,t){return U(()=>{if(t==null)return null;if(!Array.isArray(t))throw new G("`mask` should be an Array");if(!Array.isArray(e))throw new G("`inputs` should be an Array");if(t.length!==e.length)throw new G(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(n=>n==null))return null;t=t.map(n=>n==null?n:Ze(n,0));let o=t[0];for(let n=1;n<t.length-1;++n)o=Vr(o,t[n]);return o})}},A$=(()=>{class r extends qi{constructor(t){super(t)}mergeFunction(t){return U(()=>{let o=t[0].clone();for(let n=1;n<t.length;++n)o=tt(o,t[n]);return o})}}return r.className="Add",r})();J.registerClass(A$);var D$=(()=>{class r extends qi{constructor(t){super(t)}mergeFunction(t){return U(()=>{let o=t[0].clone();for(let n=1;n<t.length;++n)o=z(o,t[n]);return o})}}return r.className="Multiply",r})();J.registerClass(D$);var _$=(()=>{class r extends qi{constructor(t){super(t)}mergeFunction(t){return U(()=>{let o=t[0].clone();for(let n=1;n<t.length;++n)o=tt(o,t[n]);return z(1/t.length,o)})}}return r.className="Average",r})();J.registerClass(_$);var R$=(()=>{class r extends qi{constructor(t){super(t)}mergeFunction(t){return U(()=>{let o=t[0];for(let n=1;n<t.length;++n)o=$o(o,t[n]);return o})}}return r.className="Maximum",r})();J.registerClass(R$);var F$=(()=>{class r extends qi{constructor(t){super(t)}mergeFunction(t){return U(()=>{let o=t[0];for(let n=1;n<t.length;++n)o=ds(o,t[n]);return o})}}return r.className="Minimum",r})();J.registerClass(F$);var O$=(()=>{class r extends qi{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new G("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let o=!0;for(let s of t)if(s!=null){o=!1;break}if(o)return;let n=[];for(let s=0;s<t.length;++s){let i=t[s].slice();i.splice(this.axis,1);let a=!1;for(let l of n)if(b.arraysEqual(l,i)){a=!0;break}a||n.push(i)}if(n.length>1)throw new G("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return U(()=>Up(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new G("A `Concatenate` layer should be called on a list of inputs.");let o=t,n=o[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let i of o.slice(1)){if(n[s]==null||i[s]==null){n[s]=null;break}n[s]+=i[s]}return n}computeMask(t,o){if(o==null)return null;if(!Array.isArray(o))throw new G("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new G("`inputs` should be an array for Concatenate");if(o.length!==t.length)throw new G(`Mismatch in the length of mask (${o.length}) and the legnth of inputs (${t.length})`);return U(()=>{let n=!0;if(o.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<t.length;++a)o[a]==null?s.push(nt(dr(t[a]),"bool")):o[a].rank<t[a].rank?s.push(Ze(o[a],-1)):s.push(o[a]);let i=Te(s,this.axis);return gf(i,-1,!1)})}getConfig(){let t={axis:this.axis},o=super.getConfig();return Object.assign(t,o),t}}return r.className="Concatenate",r})();J.registerClass(O$);function oh(r,e){for(;r<0;)r+=e;return r}function tY(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new It("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new It("batchDot is not implemented for complex64-type Tensors yet.");let o=r.shape.length,n=e.shape.length;t==null&&(t=[o-1,n-2]);let s=t;return U(()=>{let i;if(o>n){i=o-n;let l=[];for(let u=0;u<i;++u)l.push(1);e=B(e,e.shape.concat(l))}else if(n>o){i=n-o;let l=[];for(let u=0;u<i;++u)l.push(1);r=B(r,r.shape.concat(l))}else i=0;let a;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?a=ft(z(r,e),s[0]):a=ft(z(Bt(r,[1,0]),e),s[1]);else{let l=s[0]!==r.shape.length-1,u=s[1]===e.shape.length-1;a=Xt(r,e,l,u)}if(i>0){let l;o>n?l=o+n-3:l=o-1;let u=[];for(let c=l;c<l+i;++c)u.push(c);a=Mn(a,u)}return a.shape.length===1&&(a=Ze(a,1)),a})}var L$=(()=>{class r extends qi{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){b.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let o=t[0],n=t[1];if(o.length>3||n.length>3)throw new It("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(o,n);if(o[s[0]]!==n[s[1]])throw new G(`Dimension incompatibility: ${o[s[0]]} !== ${n[s[1]]}`)}mergeFunction(t){if(t.length!==2)throw new G(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let o=t[0],n=t[1],s;return Array.isArray(this.axes)?s=this.axes.map((i,a)=>oh(i,t[a].shape.length)):s=[oh(this.axes,o.shape.length),oh(this.axes,n.shape.length)],this.normalize&&(o=jf(o,s[0]),n=jf(n,s[1])),tY(o,n,s)}interpretAxes(t,o){let n;return Array.isArray(this.axes)?n=this.axes:n=[oh(this.axes,t.length),oh(this.axes,o.length)],n}computeOutputShape(t){b.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let o=t[0].slice(),n=t[1].slice();if(o.length>3||n.length>3)throw new It("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(o,n);o.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let i=o.concat(n);return i.length===1&&i.push(1),i}computeMask(t,o){return null}getConfig(){let t={axes:this.axes,normalize:this.normalize},o=super.getConfig();return Object.assign(t,o),t}}return r.className="Dot",r})();J.registerClass(L$);var P$=(()=>{class r extends kt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),o={stddev:this.stddev};return Object.assign(o,t),o}call(t,o){return U(()=>{this.invokeCallHook(t,o);let n=St(t);return fl(()=>tt(Hp(n.shape,0,this.stddev),n),()=>n,o.training||!1)})}}return r.className="GaussianNoise",r})();J.registerClass(P$);var z$=(()=>{class r extends kt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),o={rate:this.rate};return Object.assign(o,t),o}call(t,o){return U(()=>{this.invokeCallHook(t,o);let n=St(t);return this.rate>0&&this.rate<1?fl(()=>{let i=Math.sqrt(this.rate/(1-this.rate));return z(n,Hp(n.shape,1,i))},()=>n,o.training||!1):n})}}return r.className="GaussianDropout",r})();J.registerClass(z$);var B$=(()=>{class r extends kt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||St(t).shape}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),o={rate:this.rate};return Object.assign(o,t),o}call(t,o){return U(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(t);return fl(()=>{let i=St(t),u=-1.6732632423543772*1.0507009873554805,c=fo(Bn(n),this.rate);c=Wr(c,"float32");let p=((1-this.rate)*(1+this.rate*u**2))**-.5,m=-p*u*this.rate,f=tt(z(i,c),z(tt(c,-1),u));return tt(z(f,p),m)},()=>St(t),o.training||!1)}return t})}}return r.className="AlphaDropout",r})();J.registerClass(B$);function nh(r,e,t,o,n,s=.001){let i;if(r.rank===2)i=P0(r,e,t,o,n,s);else if(r.rank===3)i=z0(r,e,t,o,n,s);else if(r.rank===4)i=B0(r,e,t,o,n,s);else throw new It(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return i}function eY(r,e,t,o,n=.001){return U(()=>{let s=Ep(r,o),i=s.mean,a=s.variance;return[nh(r,i,a,t,e,n),i,a]})}function rY(r,e,t,o,n=.001){return U(()=>{let s=Ep(r,o),i=s.mean,a=s.variance,l=[];for(let h of to(0,r.rank))o.indexOf(h)!==-1?l.push(1):l.push(r.shape[h]);let u=B(i,l),c=B(a,l),p=e==null?null:B(e,l),m=t==null?null:B(t,l);return[nh(r,u,c,m,p,n),i,a]})}function oY(r,e,t,o,n=.001){return b.arraysEqual(o.slice().sort(),to(0,r.rank-1))?eY(r,e,t,o,n):rY(r,e,t,o,n)}var M$=(()=>{class r extends kt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=pe(t.betaInitializer||"zeros"),this.gammaInitializer=pe(t.gammaInitializer||"ones"),this.movingMeanInitializer=pe(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=pe(t.movingVarianceInitializer||"ones"),this.betaConstraint=Fe(t.betaConstraint),this.gammaConstraint=Fe(t.gammaConstraint),this.betaRegularizer=ge(t.betaRegularizer),this.gammaRegularizer=ge(t.gammaRegularizer)}build(t){t=Pt(t);let o=this.axis>=0?this.axis:this.axis+t.length,n=t[o];if(n==null)throw new G(`Axis ${o} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new de({ndim:t.length,axes:{[o]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,o){return U(()=>{let n=o.training==null?!1:o.training,s=St(t),i=s.shape,a=i.length,l=to(0,a),u=this.axis>=0?this.axis:this.axis+a;l.splice(u,1);let c=hn(1,a);c[u]=i[u];let p=l.slice();p.sort();let m=!b.arraysEqual(p,to(0,a).slice(0,a-1)),f=()=>{if(m){let w=B(this.movingMean.read(),c),N=B(this.movingVariance.read(),c),v=this.center?B(this.beta.read(),c):null,k=this.scale?B(this.gamma.read(),c):null;return nh(s,w,N,v,k,this.epsilon)}else return nh(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return f();let[h,g,d]=oY(s,this.gamma.read(),this.beta.read(),l,this.epsilon),x=(w,N,v)=>{U(()=>{let k=1-v,R=w.read(),O=z(gt(R,N),k);w.write(gt(R,O))})};return(()=>{x(this.movingMean,g,this.momentum),x(this.movingVariance,d,this.momentum)})(),h})}getConfig(){let t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:be(this.betaInitializer),gammaInitializer:be(this.gammaInitializer),movingMeanInitializer:be(this.movingMeanInitializer),movingVarianceInitializer:be(this.movingVarianceInitializer),betaRegularizer:ie(this.betaRegularizer),gammaRegularizer:ie(this.gammaRegularizer),betaConstraint:Re(this.betaConstraint),gammaConstraint:Re(this.gammaConstraint)},o=super.getConfig();return Object.assign(t,o),t}}return r.className="BatchNormalization",r})();J.registerClass(M$);var V$=(()=>{class r extends kt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let o of this.axis)if(!Number.isInteger(o))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=pe(t.betaInitializer||"zeros"),this.gammaInitializer=pe(t.gammaInitializer||"ones"),this.betaRegularizer=ge(t.betaRegularizer),this.gammaRegularizer=ge(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Pt(t);let o=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=o);for(let i of this.axis)if(i<0||i>=o)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==gn(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(i=>t[i]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(t,o){let n=St(t),s=n.shape,i=s.length;return U(()=>{let{mean:l,variance:u}=Ep(n,this.axis,!0),c=hn(1,i);for(let d of this.axis)c[d]=s[d];let p=d=>d!=null&&d.shape.length!==i?B(d,c):d,m=this.scale?p(this.gamma.read()):null,f=this.center?p(this.beta.read()):null,h=[],g=[];for(let d=0;d<i;++d)this.axis.indexOf(d)!==-1?(h.push(s[d]),g.push(1)):(h.push(1),g.push(s[d]));return l=Fr(l,h),u=Fr(u,h),m!=null&&(m=Fr(m,g)),f!=null&&(f=Fr(f,g)),nh(n,l,u,f,m,this.epsilon)})}getConfig(){let t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:be(this.betaInitializer),gammaInitializer:be(this.gammaInitializer),betaRegularizer:ie(this.betaRegularizer),gammaRegularizer:ie(this.gammaRegularizer)},o=super.getConfig();return Object.assign(t,o),t}}return r.className="LayerNormalization",r})();J.registerClass(V$);function nY(r,e,t){return U(()=>{if(r.rank!==4)throw new G(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new G("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=eo()),t!=="channelsLast"&&t!=="channelsFirst")throw new G(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let o;return t==="channelsFirst"?o=[[0,0],[0,0],e[0],e[1]]:o=[[0,0],e[0],e[1],[0,0]],Nu(r,o)})}var G$=(()=>{class r extends kt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?eo():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new G(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let o,n;if(typeof t.padding[0]=="number")o=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new G(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(o=t.padding[0],t.padding[1].length!==2)throw new G(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[o,n]}this.inputSpec=[new de({ndim:4})]}computeOutputShape(t){t=Pt(t);let o,n;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?o=t[2]+this.padding[0][0]+this.padding[0][1]:o=null,t[3]!=null&&t[3]>=0?n=t[3]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],t[1],o,n]):(t[1]!=null&&t[1]>=0?o=t[1]+this.padding[0][0]+this.padding[0][1]:o=null,t[2]!=null&&t[2]>=0?n=t[2]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],o,n,t[3]])}call(t,o){return U(()=>nY(St(t),this.padding,this.dataFormat))}getConfig(){let t={padding:this.padding,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(t,o),t}}return r.className="ZeroPadding2D",r})();J.registerClass(G$);function ex(r,e,t,o,n,s){return U(()=>{ke(n),MN(s),Qr(o),t==null&&(t=[1,1]),o==null&&(o="valid"),n==null&&(n=eo()),s==null&&(s="max"),r=eh(r,n);let i,a=o==="same"?"same":"valid";return s==="max"?i=wu(r,e,t,a):i=hu(r,e,t,a),n==="channelsFirst"&&(i=Bt(i,[0,3,1,2])),i})}function W$(r,e,t,o,n,s){return U(()=>{ke(n),MN(s),Qr(o),t==null&&(t=[1,1,1]),o==null&&(o="valid"),n==null&&(n=eo()),s==null&&(s="max"),r=pT(r,n);let i,a=o==="same"?"same":"valid";return s==="max"?i=oN(r,e,t,a):i=L0(r,e,t,a),n==="channelsFirst"&&(i=Bt(i,[0,4,1,2,3])),i})}var Yg=class extends kt{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new G(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(qe(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new G(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);qe(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Qr(this.padding),this.inputSpec=[new de({ndim:3})]}computeOutputShape(e){e=Pt(e);let t=ho(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return U(()=>{this.invokeCallHook(e,t),e=Vi(St(e),2);let o=this.poolingFunction(St(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Mn(o,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},U$=(()=>{class r extends Yg{constructor(t){super(t)}poolingFunction(t,o,n,s,i){return ke(i),Qr(s),ex(t,o,n,s,i,"max")}}return r.className="MaxPooling1D",r})();J.registerClass(U$);var H$=(()=>{class r extends Yg{constructor(t){super(t)}poolingFunction(t,o,n,s,i){return ke(i),Qr(s),ex(t,o,n,s,i,"avg")}}return r.className="AveragePooling1D",r})();J.registerClass(H$);var Zg=class extends kt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new G(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];qe(this.poolSize,"poolSize"),qe(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ke(this.dataFormat),Qr(this.padding),this.inputSpec=[new de({ndim:4})]}computeOutputShape(e){e=Pt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=ho(t,this.poolSize[0],this.padding,this.strides[0]),o=ho(o,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,o]:[e[0],t,o,e[3]]}call(e,t){return U(()=>(this.invokeCallHook(e,t),this.poolingFunction(St(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},q$=(()=>{class r extends Zg{constructor(t){super(t)}poolingFunction(t,o,n,s,i){return ke(i),Qr(s),ex(t,o,n,s,i,"max")}}return r.className="MaxPooling2D",r})();J.registerClass(q$);var K$=(()=>{class r extends Zg{constructor(t){super(t)}poolingFunction(t,o,n,s,i){return ke(i),Qr(s),ex(t,o,n,s,i,"avg")}}return r.className="AveragePooling2D",r})();J.registerClass(K$);var Jg=class extends kt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new G(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];qe(this.poolSize,"poolSize"),qe(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ke(this.dataFormat),Qr(this.padding),this.inputSpec=[new de({ndim:5})]}computeOutputShape(e){e=Pt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],n=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=ho(t,this.poolSize[0],this.padding,this.strides[0]),o=ho(o,this.poolSize[1],this.padding,this.strides[1]),n=ho(n,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,o,n]:[e[0],t,o,n,e[4]]}call(e,t){return U(()=>(this.invokeCallHook(e,t),this.poolingFunction(St(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},j$=(()=>{class r extends Jg{constructor(t){super(t)}poolingFunction(t,o,n,s,i){return ke(i),Qr(s),W$(t,o,n,s,i,"max")}}return r.className="MaxPooling3D",r})();J.registerClass(j$);var X$=(()=>{class r extends Jg{constructor(t){super(t)}poolingFunction(t,o,n,s,i){return ke(i),Qr(s),W$(t,o,n,s,i,"avg")}}return r.className="AveragePooling3D",r})();J.registerClass(X$);var Qg=class extends kt{constructor(e){super(e),this.inputSpec=[new de({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new It}},Y$=(()=>{class r extends Qg{constructor(t){super(t||{})}call(t,o){return U(()=>{let n=St(t);return Ie(n,1)})}}return r.className="GlobalAveragePooling1D",r})();J.registerClass(Y$);var Z$=(()=>{class r extends Qg{constructor(t){super(t||{})}call(t,o){return U(()=>{let n=St(t);return kr(n,1)})}}return r.className="GlobalMaxPooling1D",r})();J.registerClass(Z$);var tx=class extends kt{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ke(this.dataFormat),this.inputSpec=[new de({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new It}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},J$=(()=>{class r extends tx{call(t,o){return U(()=>{let n=St(t);return this.dataFormat==="channelsLast"?Ie(n,[1,2]):Ie(n,[2,3])})}}return r.className="GlobalAveragePooling2D",r})();J.registerClass(J$);var Q$=(()=>{class r extends tx{call(t,o){return U(()=>{let n=St(t);return this.dataFormat==="channelsLast"?kr(n,[1,2]):kr(n,[2,3])})}}return r.className="GlobalMaxPooling2D",r})();J.registerClass(Q$);var rx=class extends kt{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,o={}){let n=t.layer,s=Ro(n,o);delete t.layer;let i={layer:s};return Object.assign(i,t),new e(i)}},tA=(()=>{class r extends rx{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Pt(t),t.length<3)throw new G(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let o=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(o),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Pt(t);let o=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(o),s=t[1];return[n[0],s].concat(n.slice(1))}call(t,o){return U(()=>(t=St(t),dT((a,l)=>[St(this.layer.call(a,o)),[]],t,[],!1,null,null,!1,!0)[1]))}}return r.className="TimeDistributed",r})();J.registerClass(tA);function sY(r){xs(s2,"BidirectionalMergeMode",r)}var iY="concat",eA=(()=>{class r extends rx{constructor(t){super(t);let o=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=o,this.forwardLayer=Ro(n),o.goBackwards=o.goBackwards!==!0;let s={};if(s.className=t.layer.getClassName(),s.config=o,this.backwardLayer=Ro(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?iY:t.mergeMode,sY(this.mergeMode),t.weights)throw new It("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){let o=t.length,n=Math.floor(o/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let o=this.forwardLayer.computeOutputShape(t);Array.isArray(o)&&Array.isArray(o[0])||(o=[o]),o=o;let n,s,i;return this.returnState&&(i=o.slice(1)),n=o[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(i).concat(i.slice()):[n].concat(i).concat(i.slice()):xr(s)}apply(t,o){let n=o==null?null:o.initialState,s=o==null?null:o.constants;o==null&&(o={});let i=hT(t,n,s,this.numConstants);if(t=i.inputs,n=i.initialState,s=i.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(n==null||n.length===0)&&s==null)return super.apply(t,o);let a=[],l=[];if(n!=null){let c=n.length;if(c%2>0)throw new G("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");o.initialState=n,a.push(...n);let p=n.map(m=>new de({shape:m.shape}));this.forwardLayer.stateSpec=p.slice(0,c/2),this.backwardLayer.stateSpec=p.slice(c/2),l.push(...p)}if(s!=null)throw new It("Support for constants in Bidirectional layers is not implemented yet.");let u=a[0]instanceof Ur;for(let c of a)if(c instanceof Ur!==u)throw new G("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let c=[t].concat(a),p=this.inputSpec.concat(l),m=this.inputSpec;this.inputSpec=p;let f=super.apply(c,o);return this.inputSpec=m,f}else return super.apply(t,o)}call(t,o){return U(()=>{let n=o.initialState,s,i;if(n==null)s=this.forwardLayer.call(t,o),i=this.backwardLayer.call(t,o);else{let u=n.slice(0,n.length/2),c=n.slice(n.length/2);s=this.forwardLayer.call(t,Object.assign(o,{initialState:u})),i=this.backwardLayer.call(t,Object.assign(o,{initialState:c}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(i.slice(1))),s=s[0],i=i[0]),this.returnSequences&&(i=Yo(i,1));let l;return this.mergeMode==="concat"?l=Up([s,i]):this.mergeMode==="sum"?l=tt(s,i):this.mergeMode==="ave"?l=z(.5,tt(s,i)):this.mergeMode==="mul"?l=z(s,i):this.mergeMode==null&&(l=[s,i]),this.returnState?this.mergeMode==null?l.concat(a):[l].concat(a):l})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Wn(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Wn(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,o){Array.isArray(o)&&(o=o[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[o,o]:n=o:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let i=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(i).concat(i):[n].concat(i).concat(i)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){let t={mergeMode:this.mergeMode},o=super.getConfig();return Object.assign(t,o),t}static fromConfig(t,o){let n=Ro(o.layer);if(delete o.layer,o.numConstants!=null)throw new It("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=o;return s.layer=n,new t(s)}}return r.className="Bidirectional",r})();J.registerClass(eA);var rA=(()=>{class r extends kt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){let t={scale:this.scale,offset:this.offset},o=super.getConfig();return Object.assign(t,o),t}call(t,o){return U(()=>(t=St(t),t.dtype!=="float32"&&(t=Wr(t,"float32")),tt(z(t,this.scale),this.offset)))}}return r.className="Rescaling",r})();J.registerClass(rA);var{resizeBilinear:aY,cropAndResize:lY}=Do,oA=(()=>{class r extends kt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,o,n,s,i,a,l,u){return U(()=>{let c,p=!1,m=o/a,f=n/l,h=(s+o)/a,g=(i+n)/l,d=[m,f,h,g],x=[];t.rank===3?(p=!0,c=ir([t])):c=t;for(let k=0;k<c.shape[0];k++)x.push(d);let y=qo(x,[x.length,4]),w=Li(0,x.length,1,"int32"),v=lY(c,y,w,[s,i],"nearest");return p?Wr(St(Gr(v)),u):Wr(v,u)})}upsize(t,o,n,s){return U(()=>{let i=aY(t,[o,n]);return Wr(i,s)})}call(t,o){return U(()=>{let n=St(t),s=n.dtype,i=n.shape,a=i[i.length-3],l=i[i.length-2],u=0;a!==this.height&&(u=Math.floor((a-this.height)/2));let c=0;return l!==this.width&&(c=Math.floor((l-this.width)/2),c===0&&(c=1)),u>=0&&c>=0?this.centerCrop(n,u,c,this.height,this.width,a,l,s):this.upsize(t,this.height,this.width,s)})}getConfig(){let t={height:this.height,width:this.width},o=super.getConfig();return Object.assign(t,o),t}computeOutputShape(t){t=Pt(t);let o=t.length-3,n=t.length-2;return t[o]=this.height,t[n]=this.width,t}}return r.className="CenterCrop",r})();J.registerClass(oA);function nA(r,e,t,o){let n=St(r);if(n.dtype!=="int32"&&(n=Wr(n,"int32")),e==="int")return n;let s=n.shape;if(n.rank===0&&(n=Ze(n,-1)),e==="oneHot"&&n.shape[n.shape.length-1]!==1&&(n=Ze(n,-1)),n.rank>2)throw new G(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${s} which would result in output rank ${n.rank}.`);let i=["multiHot","oneHot"].includes(e),a=n,l;if(typeof o<"u"&&e==="count"?l=Hd(a,o,t,i):l=Hd(a,[],t,i),e!=="tfIdf")return l;if(o)return z(l,o);throw new G("When outputMode is 'tfIdf', weights must be provided.")}var sA=(()=>{class r extends kt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){let t={numTokens:this.numTokens,outputMode:this.outputMode},o=super.getConfig();return Object.assign(t,o),t}computeOutputShape(t){return t=Pt(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,o){return U(()=>{t=St(t),t.dtype!=="int32"&&(t=Wr(t,"int32"));let n;if(typeof o.countWeights<"u"){if(this.outputMode!=="count")throw new G(`countWeights is not used when outputMode !== count.
              Received countWeights=${o.countWeights}`);n=St(o.countWeights)}let s=kr(t),i=ul(t),a=Ve(this.numTokens,s).bufferSync().get(0),l=fo(i,0).bufferSync().get(0);if(!(a&&l))throw new G(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return nA(t,this.outputMode,this.numTokens,n)})}}return r.className="CategoryEncoding",r})();J.registerClass(sA);var cY=["bilinear","nearest"],iA=new Set(cY),aA=(()=>{class r extends kt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(iA.has(t.interpolation))this.interpolation=t.interpolation;else throw new G(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=Pt(t);let o=t[2];return[this.height,this.width,o]}getConfig(){let t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},o=super.getConfig();return Object.assign(t,o),t}call(t,o){return U(()=>{let n=[this.height,this.width];if(this.interpolation==="bilinear")return Do.resizeBilinear(t,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Do.resizeNearestNeighbor(t,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...iA]} are supported`)})}}return r.className="Resizing",r})();J.registerClass(aA);var lA=(()=>{class r{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}return r.className="RandomSeed",r})();var uA=(()=>{class r extends kt{constructor(t){super(t),this.randomGenerator=new lA(t.seed)}getConfig(){let t={seed:this.randomGenerator.seed},o=super.getConfig();return Object.assign(t,o),t}}return r.className="BaseRandomLayer",r})();var pY=["bilinear","nearest"],cA=new Set(pY),pA=(()=>{class r extends uA{constructor(t){super(t);let{factor:o,interpolation:n="bilinear"}=t;if(this.factor=o,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new G(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new G(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new G(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n)if(cA.has(n))this.interpolation=n;else throw new G(`Invalid interpolation parameter: ${n} is not implemented`)}getConfig(){let t={factor:this.factor,interpolation:this.interpolation},o=super.getConfig();return Object.assign(t,o),t}computeOutputShape(t){t=Pt(t);let o=t[2];return[this.imgHeight,-1,o]}call(t,o){return U(()=>{let n=St(t);this.imgHeight=n.shape[n.shape.length-3];let s=n.shape[n.shape.length-2];this.widthFactor=Bn([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*s;i=Math.round(i);let a=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return Do.resizeBilinear(t,a);case"nearest":return Do.resizeNearestNeighbor(t,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...cA]} are supported`)}})}}return r.className="RandomWidth",r})();J.registerClass(pA);var xY=W();xY.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var mA;(function(r){let e;(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(mA||(mA={}));var d7=Ml(Dp());var f7=Ml(Dp());var Sie=Symbol("out"),vie=Symbol("field"),Cie=Symbol("quote"),Iie=Symbol("quoteafterquote"),kie=Symbol("quoteinquote");function rt(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var I7=Lr.whereImpl,hA=(()=>{class r extends Rs{nextDataId(){return r.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Vl(this,un())}write(t,o,n){this.firstUse&&(this.firstUse=!1,W().get("IS_NODE")&&I.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:t,dtype:n,refCount:1}),s}makeTensorInfo(t,o,n){let s;if(o==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let i=n.map(a=>b.encodeString(a));s=this.write(i,t,o)}else s=this.write(n,t,o);return{dataId:s,shape:t,dtype:o}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let o=this.data.get(t);o.refCount++}decRef(t){if(this.data.has(t)){let o=this.data.get(t);o.refCount--}}move(t,o,n,s,i){this.data.set(t,{values:o,dtype:s,refCount:i})}numDataIds(){return this.data.numDataIds()}read(t){return V(this,null,function*(){return this.readSync(t)})}readSync(t){let{dtype:o,complexTensorInfos:n}=this.data.get(t);if(o==="complex64"){let s=this.readSync(n.real.dataId),i=this.readSync(n.imag.dataId);return I.mergeRealAndImagArrays(s,i)}return b.convertBackendValuesAndArrayBuffer(this.data.get(t).values,o)}bufferSync(t){let o=this.readSync(t.dataId);if(t.dtype==="string")try{let n=o.map(s=>b.decodeString(s));return Nt(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Nt(t.shape,t.dtype,o)}makeOutput(t,o,n){return un().makeTensorFromTensorInfo(this.makeTensorInfo(o,n,t),this)}disposeData(t,o=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!o&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(t);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}time(t){return V(this,null,function*(){let o=b.now();return t(),{kernelMs:b.now()-o}})}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){rt([t],"where");let o=this.readSync(t.dataId);return I7(t.shape,o)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}return r.nextDataId=0,r})();var JT={};le(JT,{addImpl:()=>vT,bincountImpl:()=>rm,bincountReduceImpl:()=>nx,bitwiseAndImpl:()=>CT,castImpl:()=>ST,ceilImpl:()=>IT,concatImpl:()=>sx,equalImpl:()=>kT,expImpl:()=>$T,expm1Impl:()=>DT,floorDivImpl:()=>RT,floorImpl:()=>_T,gatherNdImpl:()=>ix,gatherV2Impl:()=>ax,greaterEqualImpl:()=>OT,greaterImpl:()=>FT,lessEqualImpl:()=>PT,lessImpl:()=>LT,linSpaceImpl:()=>lx,logImpl:()=>zT,maxImpl:()=>ux,maximumImpl:()=>BT,minimumImpl:()=>MT,multiplyImpl:()=>sh,negImpl:()=>VT,notEqualImpl:()=>GT,prodImpl:()=>WT,raggedGatherImpl:()=>cx,raggedRangeImpl:()=>px,raggedTensorToTensorImpl:()=>mx,rangeImpl:()=>fx,rsqrtImpl:()=>HT,scatterImpl:()=>jn,sigmoidImpl:()=>HA,simpleAbsImpl:()=>TT,sliceImpl:()=>KT,sparseFillEmptyRowsImpl:()=>hx,sparseReshapeImpl:()=>dx,sparseSegmentReductionImpl:()=>nm,sqrtImpl:()=>jA,squaredDifferenceImpl:()=>jT,staticRegexReplaceImpl:()=>XT,stridedSliceImpl:()=>gx,stringNGramsImpl:()=>xx,stringSplitImpl:()=>yx,stringToHashBucketFastImpl:()=>bx,subImpl:()=>ZT,tileImpl:()=>wx,topKImpl:()=>Nx,transposeImpl:()=>om,uniqueImpl:()=>Tx});function TT(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var k7=r=>{let{x:e}=r.inputs,t=r.backend;rt(e,"abs");let o=new Float32Array(b.sizeFromShape(e.shape)),n=t.data.get(e.dataId).values;return o=TT(n),t.makeOutput(o,e.shape,e.dtype)},dA={kernelName:ca,backendName:"cpu",kernelFunc:k7};function Ut(r){return(e,t,o,n,s)=>{let i=I.assertAndGetBroadcastShape(e,t),a=i.length,l=b.computeStrides(i),u=b.sizeFromShape(i),c=b.getTypedArrayFromDType(s,u),p=e.length,m=t.length,f=b.computeStrides(e),h=b.computeStrides(t),g=I.getBroadcastDims(e,i),d=I.getBroadcastDims(t,i);if(g.length+d.length===0)for(let x=0;x<c.length;++x)c[x]=r(o[x%o.length],n[x%n.length]);else for(let x=0;x<c.length;++x){let y=b.indexToLoc(x,a,l),w=y.slice(-p);g.forEach(R=>w[R]=0);let N=b.locToIndex(w,p,f),v=y.slice(-m);d.forEach(R=>v[R]=0);let k=b.locToIndex(v,m,h);c[x]=r(o[N],n[k])}return[c,i]}}function cr(r){let{inputs:e,backend:t}=r,{real:o,imag:n}=e,s=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values,a=t.makeTensorInfo(o.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(o.shape,"float32",s),imag:t.makeTensorInfo(n.shape,"float32",i)},a}var gA={kernelName:Dc,backendName:"cpu",kernelFunc:cr};function tm(r,e,t="float32"){if(t==="complex64"){let n=tm(r,e,"float32"),s=tm(r,e,"float32");return cr({inputs:{real:n,imag:s},backend:r})}let o=b.makeZerosTypedArray(b.sizeFromShape(e),t);return r.makeTensorInfo(e,t,o)}function Pr(r){let{inputs:e,backend:t}=r,{x:o}=e;return t.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var xA={kernelName:as,backendName:"cpu",kernelFunc:Pr};function wn(r){let{inputs:e,backend:t}=r,{input:o}=e,n=t.data.get(o.dataId).complexTensorInfos.real,s=t.data.get(n.dataId).values;return t.makeTensorInfo(n.shape,n.dtype,s)}var yA={kernelName:ep,backendName:"cpu",kernelFunc:wn};function ST(r,e,t,o){if(o==="int32"){let n=Int32Array.from(r);return[e,"int32",n]}if(o==="bool"){let n=b.toTypedArray([0],t),[s,i]=Ut((a,l)=>a!==l?1:0)(e,[],r,n,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${t} to ${o}`)}function Nn(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{dtype:s}=o;if(s==="complex64"){if(n.dtype==="complex64")return Pr({inputs:{x:n},backend:t});let c=tm(t,n.shape,n.dtype),p=Nn({inputs:{x:n},backend:t,attrs:{dtype:"float32"}}),m=cr({inputs:{real:p,imag:c},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),m}if(n.dtype==="complex64"){let c=wn({inputs:{input:n},backend:t}),p=Nn({inputs:{x:c},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(c),p}if(!b.hasEncodingLoss(n.dtype,s)){let c=Pr({inputs:{x:n},backend:t});return{dataId:c.dataId,shape:c.shape,dtype:s}}let i=t.data.get(n.dataId).values,[a,l,u]=ST(i,n.shape,n.dtype,s);return t.makeTensorInfo(a,l,u)}var bA={kernelName:is,backendName:"cpu",kernelFunc:Nn};function Zt(r,e,t,o){return t==null?({inputs:n,backend:s})=>{let{a:i,b:a}=n,l=s;rt([i,a],r);let u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,p=i.dtype==="string"?I.fromUint8ToStringArray(u):u,m=i.dtype==="string"?I.fromUint8ToStringArray(c):c,f=o||i.dtype,[h,g]=e(i.shape,a.shape,p,m,f);return l.makeTensorInfo(g,f,h)}:({inputs:n,backend:s})=>{let{a:i,b:a}=n,l=s;if(i.dtype==="complex64"||a.dtype==="complex64"){let u=Nn({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,m=c.complexTensorInfos.imag,f=l.data.get(p.dataId).values,h=l.data.get(m.dataId).values,g=Nn({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(g.dataId),x=d.complexTensorInfos.real,y=d.complexTensorInfos.imag,w=l.data.get(x.dataId).values,N=l.data.get(y.dataId).values,[v,k,R]=t(i.shape,a.shape,f,h,w,N),O=l.makeTensorInfo(R,"float32",v),L=l.makeTensorInfo(R,"float32",k),M=cr({inputs:{real:O,imag:L},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(O),l.disposeIntermediateTensorInfo(L),M}else{let u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,p=o||i.dtype,[m,f]=e(i.shape,a.shape,u,c,p);return l.makeTensorInfo(f,p,m)}}}function em(r){return(e,t,o,n,s,i)=>{let a=I.assertAndGetBroadcastShape(e,t),l=b.sizeFromShape(a),u=a.length,c=b.computeStrides(a),p=b.getTypedArrayFromDType("float32",l),m=b.getTypedArrayFromDType("float32",l),f=I.getBroadcastDims(e,a),h=I.getBroadcastDims(t,a),g=I.mergeRealAndImagArrays(o,n),d=I.mergeRealAndImagArrays(s,i),x=e.length,y=b.computeStrides(e),w=t.length,N=b.computeStrides(t);if(f.length+h.length===0)for(let v=0;v<p.length;v++){let k=v%g.length,R=v%d.length,O=r(g[k*2],g[k*2+1],d[R*2],d[R*2+1]);p[v]=O.real,m[v]=O.imag}else for(let v=0;v<p.length;v++){let k=b.indexToLoc(v,u,c),R=k.slice(-x);f.forEach(q=>R[q]=0);let O=b.locToIndex(R,x,y),L=k.slice(-w);h.forEach(q=>L[q]=0);let M=b.locToIndex(L,w,N),H=r(g[O*2],g[O*2+1],d[M*2],d[M*2+1]);p[v]=H.real,m[v]=H.imag}return[p,m,a]}}var vT=Ut((r,e)=>r+e),E7=em((r,e,t,o)=>({real:r+t,imag:e+o})),bs=Zt(Fn,vT,E7),wA={kernelName:Fn,backendName:"cpu",kernelFunc:bs};function rm(r,e,t,o,n){let s=b.sizeFromShape(o),i=b.makeZerosTypedArray(n,t);for(let a=0;a<r.length;a++){let l=r[a];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s>0?i[l]+=e[a]:i[l]+=1)}return i}function nx(r,e,t,o=!1){let n=r.shape[0],s=r.shape[1],i=Nt([n,t],e.dtype);for(let a=0;a<n;a++)for(let l=0;l<s;l++){let u=r.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(o?i.set(1,a,u):e.size>0?i.set(i.get(a,u)+e.get(a,l),a,u):i.set(i.get(a,u)+1,a,u))}return i}var CT=Ut((r,e)=>r&e),$7=Zt(sf,CT),NA={kernelName:sf,backendName:"cpu",kernelFunc:$7};function wr(r){return(e,t,o)=>{let n=b.getArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)n[s]=r(e[s],o);return n}}function Et(r,e,t){let o=wr(e);return go(r,o,t)}function go(r,e,t){return({inputs:o,attrs:n,backend:s})=>{let{x:i}=o;rt(i,r);let a=s,l=a.data.get(i.dataId).values,u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=I.fromUint8ToStringArray(l)}else u=l;let c=t||i.dtype,p=e(u,c,n);return a.makeTensorInfo(i.shape,c,p)}}var IT=wr(r=>Math.ceil(r)),A7=go(Gs,IT),TA={kernelName:Gs,backendName:"cpu",kernelFunc:A7};function sx(r,e,t,o){let n=b.getArrayFromDType(t,b.sizeFromShape(e));if(o&&t!=="string"){let s=0;r.forEach(i=>{let a=b.sizeFromShape(i.shape);n.set(i.vals,s),s+=a})}else{let s=0;r.forEach(i=>{let a=t==="string"?I.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let c=u*e[1]+s;for(let p=0;p<i.shape[1];++p)n[c+p]=a[l++]}s+=i.shape[1]})}return n}var kT=Ut((r,e)=>r===e?1:0),ET=Zt(Hl,kT,null,"bool"),SA={kernelName:Hl,backendName:"cpu",kernelFunc:ET};var $T=wr(r=>Math.exp(r)),AT=go(Xs,$T,"float32"),vA={kernelName:Xs,backendName:"cpu",kernelFunc:AT};var DT=wr(r=>Math.expm1(r)),D7=go(Ys,DT),CA={kernelName:Ys,backendName:"cpu",kernelFunc:D7};var _T=wr(r=>Math.floor(r)),_7=go(Zs,_T),IA={kernelName:Zs,backendName:"cpu",kernelFunc:_7};var RT=Ut((r,e)=>Math.floor(r/e)),R7=Zt(Js,RT,null,"int32"),kA={kernelName:Js,backendName:"cpu",kernelFunc:R7};function ix(r,e,t,o,n,s,i,a,l){let u=Nt([o,s],t);for(let c=0;c<o;c++){let p=[],m=0;for(let f=0;f<n;f++){let h=r[c*n+f];m+=h*i[f],p.push(h)}if(m<0||m>=l/s)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let f=0;f<s;f++)u.values[c*s+f]=e.get(...e.indexToLoc(m*s+f))}return u}function ax(r,e,t){let o=Nt(t,r.dtype);for(let n=0;n<o.size;++n){let i=o.indexToLoc(n).slice(),a=i[0],l=i[2],u=e.locToIndex([a,l]);i[2]=e.values[u];let c=r.locToIndex(i);0<=c&&c<r.values.length&&(o.values[n]=r.values[c])}return o}var FT=Ut((r,e)=>r>e?1:0),F7=Zt(ql,FT,null,"bool"),EA={kernelName:ql,backendName:"cpu",kernelFunc:F7};var OT=Ut((r,e)=>r>=e?1:0),O7=Zt(Qs,OT,null,"bool"),$A={kernelName:Qs,backendName:"cpu",kernelFunc:O7};var LT=Ut((r,e)=>r<e?1:0),L7=Zt(Kl,LT,null,"bool"),AA={kernelName:Kl,backendName:"cpu",kernelFunc:L7};var PT=Ut((r,e)=>r<=e?1:0),P7=Zt(jl,PT,null,"bool"),DA={kernelName:jl,backendName:"cpu",kernelFunc:P7};function lx(r,e,t){let o=(e-r)/(t-1),n=b.makeZerosTypedArray(t,"float32");n[0]=r;for(let s=1;s<n.length;s++)n[s]=n[s-1]+o;return n}var zT=wr(r=>Math.log(r)),z7=go(oi,zT),_A={kernelName:oi,backendName:"cpu",kernelFunc:z7};function ux(r,e,t,o){let n=b.getTypedArrayFromDType(o,b.sizeFromShape(t));for(let s=0;s<n.length;++s){let i=s*e,a=r[i];for(let l=0;l<e;++l){let u=r[i+l];(Number.isNaN(u)||u>a)&&(a=u)}n[s]=a}return n}var BT=Ut((r,e)=>Math.max(r,e)),B7=Zt(si,BT),RA={kernelName:si,backendName:"cpu",kernelFunc:B7};var MT=Ut((r,e)=>Math.min(r,e)),M7=Zt(ii,MT),FA={kernelName:ii,backendName:"cpu",kernelFunc:M7};var sh=Ut((r,e)=>r*e),V7=em((r,e,t,o)=>({real:r*t-e*o,imag:r*o+e*t})),Bu=Zt(li,sh,V7),OA={kernelName:li,backendName:"cpu",kernelFunc:Bu};function VT(r,e,t){let o=b.createScalarValue(-1,t);return sh([],e,o,r,t)}function G7(r){let{inputs:e,backend:t}=r,{x:o}=e;rt(o,"neg");let n=t.data.get(o.dataId).values,[s,i]=VT(n,o.shape,o.dtype);return t.makeTensorInfo(i,o.dtype,s)}var LA={kernelName:La,backendName:"cpu",kernelFunc:G7};var GT=Ut((r,e)=>r!==e?1:0),W7=Zt(Jl,GT,null,"bool"),PA={kernelName:Jl,backendName:"cpu",kernelFunc:W7};function om(r,e,t,o,n){let s=e.length,i=b.sizeFromShape(e),a=b.computeStrides(e),l=b.computeStrides(n),u=b.getTypedArrayFromDType(t,b.sizeFromShape(n));for(let c=0;c<i;++c){let p=b.indexToLoc(c,s,a),m=new Array(p.length);for(let h=0;h<m.length;h++)m[h]=p[o[h]];let f=b.locToIndex(m,s,l);u[f]=r[c]}return u}function Oe(r){let{inputs:e,attrs:t,backend:o}=r,{x:n}=e,{perm:s}=t;rt(n,"transpose");let i=n.shape.length,a=new Array(i);for(let p=0;p<a.length;p++)a[p]=n.shape[s[p]];let l=o.data.get(n.dataId).values,u=om(l,n.shape,n.dtype,s,a);return{dataId:o.write(u,a,n.dtype),shape:a,dtype:n.dtype}}var zA={kernelName:us,backendName:"cpu",kernelFunc:Oe};function WT(r,e,t,o){let[n,s]=I.computeOutAndReduceShapes(r,o),i=er(e,"int32"),a=b.makeZerosTypedArray(b.sizeFromShape(n),i),l=b.sizeFromShape(s);for(let u=0;u<a.length;++u){let c=u*l,p=1;for(let m=0;m<l;++m)p*=t[c+m];a[u]=p}return{outVals:a,outShape:n,outDtype:i}}function U7(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o;rt(n,"prod");let a=n.shape.length,l=b.parseAxisParam(s,n.shape),u=I.getAxesPermutation(l,a),c=l,p=n,m=[];u!=null&&(p=Oe({inputs:{x:n},backend:t,attrs:{perm:u}}),m.push(p),c=I.getInnerMostAxes(c.length,a));let f=t.data.get(p.dataId).values,{outVals:h,outShape:g,outDtype:d}=WT(p.shape,p.dtype,f,c),x=g;return i&&(x=I.expandShapeToKeepDim(g,l)),m.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(x,d,h)}var BA={kernelName:Ga,backendName:"cpu",kernelFunc:U7};function H7(r,e,t){r.forEach((o,n)=>{if(o<0||o>=t){let s=b.indexToLoc(n,e.length,b.computeStrides(e)).join(",");throw new Error(`indices[${s}] = ${o} is not in [0, ${t})`)}})}function q7(r,e){for(let t=0;t<r.length;++t){let o=r[t],n=t===r.length-1?e:r[t+1].length;if(o.length===0)throw new Error("Ragged splits may not be empty");if(o[0]<0)throw new Error("Ragged splits must be non-negative");if(o[o.length-1]>n)throw new Error("Ragged splits must not point past values");for(let s=1;s<o.length;++s)if(o[s-1]>o[s])throw new Error("Ragged splits must be sorted in ascending order")}}function K7(r,e,t,o){let n=[],s=0,i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);q7(t,o);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];let c=e[u+1];for(let p=1;p<l+1;++p)a[u].push(p*c)}for(let u=0;u<r.length;++u){let c=r[u],p=r[u]+1;for(let m=0;m<t.length;++m){let f=t[m],h=m+e.length-1;if(h>=0){let g=a[h],d=g[g.length-1]-f[c];for(let x=c;x<p;++x)a[h].push(f[x+1]+d)}c=f[c],p=f[p]}p!==c&&(n.push([c,p]),s+=p-c)}return{outSplits:a,valueSlices:n,numValues:s}}function j7(r){let e=[];for(let t=0;t<r.length;++t){let o=r[t].length,n=b.getArrayFromDType("int32",o);e.push(n),r[t].forEach((s,i)=>n[i]=s)}return e}function MA(r,e){let t=r.slice(0,e);for(;t.length<e;)t.push(1);for(let o=e;o<r.length;o++)t[e-1]*=r[o];return t}function X7(r,e,t,o,n,s){let i=MA(e,2)[1],a=MA(s,2)[1],l=0;for(let u of t)for(let c=u[0];c<u[1];++c){for(let p=0;p<o;++p)n[l*a+p]=r[c*i+p];++l}}function Y7(r,e,t,o,n){let s=e.slice();s[0]=n;let i=b.getArrayFromDType(t,b.sizeFromShape(s)),a=r.length,l=a===0?0:a/e[0];return X7(r,e,o,l,i,s),[i,s]}function cx(r,e,t,o,n,s,i,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");let l=e[0][0]-1;if(H7(s,i,l),o.length===0)throw new Error("params.rank must be nonzero");let u=o[0],{outSplits:c,valueSlices:p,numValues:m}=K7(s,i,r,u),f=j7(c),h=Y7(t,o,n,p,m);return[f,h[0],h[1]]}var VA=2147483647;function px(r,e,t,o,n,s,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(n.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let a=e.length===0,l=n.length===0,u=i.length===0,c=[];a||c.push(e[0]),l||c.push(n[0]),u||c.push(i[0]);for(let d=1;d<c.length;++d)if(c[d]!==c[d-1])throw new Error("starts, limits, and deltas must have the same shape");let p=c.length===0?1:c[0],m=b.getArrayFromDType("int32",p+1);m[0]=0;for(let d=0;d<p;++d){let x=a?r[0]:r[d],y=l?o[0]:o[d],w=u?s[0]:s[d];if(w===0)throw new Error("Requires delta != 0");let N;if(w>0&&y<x||w<0&&y>x)N=0;else if(N=Math.ceil(Math.abs((y-x)/w)),N>VA)throw new Error(`Requires ((limit - start) / delta) <= ${VA}`);m[d+1]=m[d]+N}let f=m[p],h=b.getArrayFromDType(t,f),g=0;for(let d=0;d<p;++d){let x=m[d+1]-m[d],y=a?r[0]:r[d],w=u?s[0]:s[d];for(let N=0;N<x;++N)h[g++]=y,y+=w}return[m,h]}var Tn=I.RowPartitionType,UT=class r{constructor(e,t,o,n,s,i,a,l,u,c){this.shape=e,this.shapeShape=t,this.values=o,this.valuesShape=n,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=I.getRowPartitionTypesHelper(c),this.raggedRank=I.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Tn.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Tn.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Tn.VALUE_ROWIDS:return r.getMaxWidthValueRowID(t);case Tn.ROW_SPLITS:return r.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Tn[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(t===0||t===1)return 0;let o=0;for(let n=0;n<t-1;++n){let s=e[n+1]-e[n];s>o&&(o=s)}return o}static getMaxWidthValueRowID(e){let t=e.length;if(t===0)return 0;let o=0,n=e[0],s=0;for(let i=1;i<t;++i){let a=e[i];a!==n&&(n=a,s=Math.max(i-o,s),o=i)}return Math.max(t-o,s)}tensorShapeFromTensor(e,t,o=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return WA(e,o)}calculateOutputSize(e){let t=this.valuesShape,o=this.defaultValueShape;I.validateDefaultValueShape(o,t);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=I.combineRaggedTensorToTensorShapes(this.raggedRank,n,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,o){let n=Math.min(e,o),s=[],i=0;for(let a=0;a<n;++a,i+=t)s.push(i);for(let a=n;a<e;++a)s.push(-1);return b.assert(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,o,n){let s=e.length,i=[];for(let a=0;a<s-1;++a){let l=e[a+1]-e[a],u=Math.min(n,l),c=t[a];c===-1&&(u=0);for(let p=0;p<u;++p)i.push(c),c+=o;for(let p=0;p<l-u;++p)i.push(-1)}if(s>0&&i.length!==e[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,o,n){let s=e.length,i=[];if(s===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];i.push(u);for(let c=1;c<s;++c){let p=e[c];if(p===l)u>=0&&(++a,a<n?u+=o:u=-1);else{if(a=0,l=p,p>=t.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${t.length}`);u=t[p]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,o,n){let s=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Tn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,o,n);case Tn.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,o,n);default:throw new Error(`Unsupported partition type: ${Tn[i]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case Tn.FIRST_DIM_SIZE:return e[0];case Tn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Tn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Tn[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),o=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let l=n.length-2;l>=0;--l)n[l]=n[l+1]*o[l+1];let s=WA(o,!1),i=b.getArrayFromDType(this.valuesDType,b.sizeFromShape(s));if(n[0]*o[0]>0){let l=this.calculateFirstParentOutputIndex(t,n[0],o[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,n[u],o[u]);this.setOutput(this.raggedRank,l,i,s)}return[s,i]}setOutput(e,t,o,n){if(o.length===0)return;let s=this.values,i=o,a=n.slice();a=a.slice(e+1);let l=b.sizeFromShape(a),u=t.length,c=this.defaultValue;if(c.length!==l&&c.length!==1){let h=this.defaultValueShape;U(()=>{let g=B(c,h);c=Di(g,a).dataSync()})}let p=0,m=0,f=0;for(let h=0;h<=u;++h){let g=h<u?t[h]:-1;if(g===f){++f;continue}if(m<f){let d=s.subarray(p*l),x=i.subarray(m*l),y=(f-m)*l;GA(x,d,y)}if(h>=u){let d=o.length;g=Math.floor(d/l)}if(g>f)if(this.defaultValue.length===1)i.subarray(f*l,g*l).fill(this.defaultValue[0]),f=g;else for(;g>f;){let d=i.slice(f*l);GA(d,c,l),++f}g<0?(p=h+1,m=f):(p=h,m=f,f=m+1)}}};function GA(r,e,t){for(let o=0;o<t;o++)r[o]=e[o]}function WA(r,e){let t=[];for(let o of r){if(o<0){if(!e)throw new Error(`Dimension ${o} must be >= 0`);if(o<-1)throw new Error(`Dimension ${o} must be >= -1`);o=-1}t.push(o)}return t}function mx(r,e,t,o,n,s,i,a,l,u){return new UT(r,e,t,o,n,s,i,a,l,u).compute()}function fx(r,e,t,o){let n=r===e,s=r<e&&t<0,i=e<r&&t>1;if(n||s||i)return b.makeZerosTypedArray(0,o);let a=Math.abs(Math.ceil((e-r)/t)),l=b.makeZerosTypedArray(a,o);e<r&&t===1&&(t=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}var HT=wr(r=>1/Math.sqrt(r)),Z7=go(hi,HT),UA={kernelName:hi,backendName:"cpu",kernelFunc:Z7};function jn(r,e,t,o,n,s,i,a,l,u){let c=[o/n,n],p=r.values,m=e.values;if(o===0)return Nt(t,e.dtype);let f=l instanceof ue?l:Nt(c,e.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let h=0;h<s;h++){let g=[],d=0;for(let x=0;x<i;x++){let y=p[h*i+x];g.push(y),d+=y*a[x]}if(d<0||d>=o/n)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let x=0;x<n;x++)u?f.values[d*n+x]+=m[h*n+x]:f.values[d*n+x]=e.rank===0?m[0]:m[h*n+x]}return f}var HA=wr(r=>1/(1+Math.exp(-r))),qT=Et(bi,r=>1/(1+Math.exp(-r))),qA={kernelName:bi,backendName:"cpu",kernelFunc:qT};function KT(r,e,t,o,n){let s=gr.isSliceContinous(o,e,t),i=b.sizeFromShape(t),a=b.computeStrides(o);if(s){let p=gr.computeFlatOffset(e,a);return n==="string"?r.slice(p,p+i):r.subarray(p,p+i)}let l=n==="string"?I.fromUint8ToStringArray(r):r,u=Nt(o,n,l),c=Nt(t,n);for(let p=0;p<c.size;++p){let m=c.indexToLoc(p),f=m.map((h,g)=>h+e[g]);c.set(u.get(...f),...m)}return n==="string"?I.fromStringArrayToUint8(c.values):c.values}function Sn(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{begin:s,size:i}=o;rt(n,"slice");let[a,l]=gr.parseSliceParams(n,s,i);gr.assertParamsValid(n,a,l);let u=t.data.get(n.dataId).values,c=KT(u,a,l,n.shape,n.dtype);return t.makeTensorInfo(l,n.dtype,c)}var KA={kernelName:ja,backendName:"cpu",kernelFunc:Sn};function hx(r,e,t,o,n,s,i){let a=e[0],l=s[0],u=new Array(l),c=new Array(a),p=e[1];if(l===0){if(a!==0)throw new Error(I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let d=b.getArrayFromDType(t,0),x=b.getArrayFromDType(n,0);return[d,[0,p],x,u,c]}let m=!0,f=0,h=new Array(l).fill(0);for(let d=0;d<a;++d){let x=r[d*p];if(x<0)throw new Error(I.getSparseFillEmptyRowsNegativeIndexErrorMessage(d,x));if(x>=l)throw new Error(I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(d,x,l));++h[x],m=m&&x>=f,f=x}let g=!0;for(let d=0;d<l;++d){let x=h[d]===0;u[d]=x,g=g&&!x,h[d]=Math.max(h[d],1),d>0&&(h[d]+=h[d-1])}if(g&&m){let d=r,x=o;for(let y=0;y<a;++y)c[y]=y;return[d,[a,p],x,u,c]}else{let d=h[l-1],x=b.getArrayFromDType(t,d*p),y=b.getArrayFromDType(n,d),w=new Array(l).fill(0);for(let N=0;N<a;++N){let v=r[N*p],k=w[v],R=(v===0?0:h[v-1])+k;w[v]++;for(let O=0;O<p;++O)x[R*p+O]=r[N*p+O];y[R]=o[N],c[N]=R}for(let N=0;N<l;++N)if(w[N]===0){let k=N===0?0:h[N-1];x[k*p+0]=N;for(let R=1;R<p;++R)x[k*p+R]=0;y[k]=i}return[x,[d,p],y,u,c]}}function dx(r,e,t,o,n){let s=b.sizeFromShape(o),i=e[0],a=n.length,l=[],u=1,c=-1;for(let d=0;d<a;++d){let x=n[d];if(x===-1){if(c!==-1)throw new Error(I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,d));c=d,l.push(1)}else{if(x<0)throw new Error(I.getSparseReshapeNegativeOutputDimErrorMessage(d,x));u*=x,l.push(x)}}if(c!==-1){if(u<=0)throw new Error(I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let d=Math.trunc(s/u);if(u*d!==s)throw new Error(I.getSparseReshapeInputOutputMultipleErrorMessage(o,l));l[c]=d}if(b.sizeFromShape(l)!==s)throw new Error(I.getSparseReshapeInputOutputMismatchErrorMessage(o,l));let m=o.length,f=[];if(m>0){f[m-1]=1;for(let d=m-2;d>=0;--d)f[d]=f[d+1]*o[d+1]}let h=[];if(a>0){h[a-1]=1;for(let d=a-2;d>=0;--d)h[d]=h[d+1]*l[d+1]}let g=b.getArrayFromDType(t,i*a);for(let d=0;d<i;++d){let x=0;for(let y=0;y<m;++y)x+=r[d*m+y]*f[y];for(let y=0;y<a;++y)g[d*a+y]=Math.trunc(x/h[y]),x%=h[y]}return[g,[i,a],l]}function nm(r,e,t,o,n,s=!1,i=0){let a=o.length,l=[e[0],r.length/e[0]],u=l[1],p=a>0?n[a-1]+1:0;if(p<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=e.slice();m[0]=p;let f=m.reduce((w,N)=>w*N,1),h=b.getArrayFromDType(t,f);if(a===0)return p>0&&h.fill(i),[h,m];if(p<=0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,d=1,x=0,y=n[g];for(;;){let w=0;if(d<a){if(w=n[d],y===w){++d;continue}if(y>=w)throw new Error(I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>x&&h.fill(i,x*u,y*u);for(let N=g;N<d;++N){let v=o[N];if(v<0||v>=l[0])throw new Error(I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(N,o[N],l[0]));for(let k=0;k<u;k++)h[y*u+k]+=r[v*u+k]}if(s)for(let N=0;N<u;N++)h[y*u+N]/=d-g;if(g=d,++d,x=y+1,y=w,d>a)break}return x<p&&h.fill(i,x*u,p*u),[h,m]}var jA=wr(r=>Math.sqrt(r)),J7=Et(Ni,r=>Math.sqrt(r)),XA={kernelName:Ni,backendName:"cpu",kernelFunc:J7};var jT=Ut((r,e)=>{let t=r-e;return t*t}),Q7=Zt(Ti,jT),YA={kernelName:Ti,backendName:"cpu",kernelFunc:Q7};var XT=wr((r,e)=>{let{pattern:t,replaceGlobal:o,rewrite:n}=e;return r.replace(new RegExp(t,o?"g":""),n)}),tZ=go(uf,XT),ZA={kernelName:uf,backendName:"cpu",kernelFunc:tZ};function gx(r,e,t,o){let n=Nt(r,e.dtype);for(let s=0;s<n.size;s++){let i=n.indexToLoc(s),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*t[l]+o[l];n.set(e.get(...a),...i)}return n}var YT=class{constructor(e,t,o,n,s,i){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(o),this.rightPad=b.encodeString(n),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let o=this.getPadWidth(t);return Math.max(0,e+2*o-t+1)}createNGrams(e,t,o,n,s,i){for(let a=0;a<s;++a){let l=this.getPadWidth(i),u=Math.max(0,l-a),c=Math.max(0,l-(s-(a+1))),p=i-(u+c),m=t+(u>0?0:a-l),f=0;f+=u*this.leftPad.length;for(let y=0;y<p;++y)f+=e[m+y].length;f+=c*this.rightPad.length;let h=u+c+p-1;f+=h*this.separator.length,o[n+a]=new Uint8Array(f);let g=o[n+a],d=0,x=y=>y.forEach(w=>g[d++]=w);for(let y=0;y<u;++y)x(this.leftPad),x(this.separator);for(let y=0;y<p-1;++y)x(e[m+y]),x(this.separator);if(p>0){x(e[m+p-1]);for(let y=0;y<c;++y)x(this.separator),x(this.rightPad)}else{for(let y=0;y<c-1;++y)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){let o=e.length,n=t.length;if(n>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<n;++u){let c=t[u]>=l;if(c=c&&t[u]<=o,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${o}]`);l=t[u]}if(l!==o)throw new Error(`Last split value must be data size. Expected ${o}, got ${l}`)}let s=n-1,i=b.getArrayFromDType("int32",n);if(o===0||n===0){let l=new Array(o);for(let u=0;u<=s;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=s;++l){let u=t[l]-t[l-1],c=0;this.nGramWidths.forEach(p=>{c+=this.getNumNGrams(u,p)}),this.preserveShort&&u>0&&c===0&&(c=1),i[l]=i[l-1]+c}let a=new Array(i[s]);for(let l=0;l<s;++l){let u=t[l],c=i[l];if(this.nGramWidths.forEach(p=>{let m=t[l+1]-t[l],f=this.getNumNGrams(m,p);this.createNGrams(e,u,a,c,f,p),c+=f}),this.preserveShort&&c===i[l]){let p=t[l+1]-t[l];if(p===0)continue;let m=p+2*this.padWidth;this.createNGrams(e,u,a,c,1,m)}}return[a,i]}};function xx(r,e,t,o,n,s,i,a){return new YT(t,o,n,s,i,a).compute(r,e)}function eZ(r,e,t,o){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)o.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],i=r.indexOf(s);for(;i!==-1;){let a=r.subarray(0,i);(!t||a.length!==0)&&o.push(a),r=r.subarray(i+1),i=r.indexOf(s)}(!t||r.length!==0)&&o.push(r);return}let n=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let i=r.subarray(n,s);(!t||i.length!==0)&&o.push(i),n=s+1}}function yx(r,e,t){let o=r.length,n=[],s=0,i=0,a=new Array(o);for(let m=0;m<o;++m){let f=n.length;eZ(r[m],e,t,n);let h=n.length-f;a[m]=h,s+=h,i=Math.max(i,h)}let l=b.getArrayFromDType("int32",s*2),u=new Array(s),c=[o,i],p=0;for(let m=0;m<o;++m)for(let f=0;f<a[m];++f)l[p*2]=m,l[p*2+1]=f,u[p]=n[p],++p;return[l,u,c]}function bx(r,e){let t=b.getArrayFromDType("int32",r.length);for(let o=0;o<r.length;++o)t[o]=b.fingerPrint64(r[o]).modulo(e).getLowBitsUnsigned();return t}var ZT=Ut((r,e)=>r-e),rZ=em((r,e,t,o)=>({real:r-t,imag:e-o})),ih=Zt(Si,ZT,rZ),JA={kernelName:Si,backendName:"cpu",kernelFunc:ih};function wx(r,e){let t=new Array(r.rank);for(let n=0;n<t.length;n++)t[n]=r.shape[n]*e[n];let o=Nt(t,r.dtype);for(let n=0;n<o.values.length;++n){let s=o.indexToLoc(n),i=new Array(r.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%r.shape[l];let a=r.locToIndex(i);o.values[n]=r.values[a]}return o}var ah=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function QA(r,e,t=0,o=r.length-1){for(;o>t;){if(o-t>600){let a=o-t+1,l=e-t+1,u=Math.log(a),c=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),m=Math.max(t,Math.floor(e-l*c/a+p)),f=Math.min(o,Math.floor(e+(a-l)*c/a+p));QA(r,e,m,f)}let n=r[e],s=t,i=o;for(b.swap(r,t,e),ah(r[o],n)>0&&b.swap(r,t,o);s<i;){for(b.swap(r,s,i),s++,i--;ah(r[s],n)<0;)s=s+1;for(;ah(r[i],n)>0;)i=i-1}ah(r[t],n)===0?b.swap(r,t,i):(i=i+1,b.swap(r,i,o)),i<=e&&(t=i+1),e<=i&&(o=i-1)}}function Nx(r,e,t,o,n){let s=e[e.length-1],[i,a]=[r.length/s,s],l=b.getTypedArrayFromDType(t,i*o),u=b.getTypedArrayFromDType("int32",i*o);for(let p=0;p<i;p++){let m=p*a,f=r.subarray(m,m+a),h=new Array(f.length);f.forEach((y,w)=>h[w]={value:y,index:w}),o<h.length&&(QA(h,o),h=h.slice(0,o)),n&&h.sort(ah);let g=p*o,d=l.subarray(g,g+o),x=u.subarray(g,g+o);for(let y=0;y<o;y++)d[y]=h[y].value,x[y]=h[y].index}let c=e.slice();return c[c.length-1]=o,[Nt(c,t,l),Nt(c,"int32",u)]}function Tx(r,e,t,o){let n=b.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let h=0;h<n;h++)s[0]*=t[h];s[1]=t[n];for(let h=n+1;h<t.length;h++)s[2]*=t[h];let i=new Map,a=new Int32Array(t[n]),l=new ue(s,o,r),u=[],c=s[0]===1&&s[2]===1;for(let h=0;h<t[n];h++){let g;if(c)g=r[h].toString();else{let x=[];for(let y=0;y<s[0];y++)for(let w=0;w<s[2];w++)x.push(l.get(y,h,w));g=x.join(",")}let d=i.get(g);if(d!=null)a[h]=d;else{let x=i.size;i.set(g,x),a[h]=x,u.push(h)}}let p=s.slice();p[1]=i.size;let m=new ue(p,o);u.forEach((h,g)=>{for(let d=0;d<s[0];d++)for(let x=0;x<s[2];x++)m.set(l.get(d,h,x),d,g,x)});let f=t.slice();return f[n]=p[1],{outputValues:m.values,outputShape:f,indices:a}}Od("cpu",()=>new hA,1);var QT=Et(Ks,r=>r>=0?r:Math.exp(r)-1),tD={kernelName:Ks,backendName:"cpu",kernelFunc:QT};function tS(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{alpha:s}=o;rt([n],"leakyRelu");let i=b.sizeFromShape(n.shape),a=t.data.get(n.dataId).values,l=b.getTypedArrayFromDType("float32",i);for(let u=0;u<a.length;u++)l[u]=a[u]<0?s*a[u]:a[u];return t.makeTensorInfo(n.shape,"float32",l)}var eD={kernelName:Ea,backendName:"cpu",kernelFunc:tS};var oZ=Ut((r,e)=>r<0?e*r:r);function eS(r){let{inputs:e,backend:t}=r,{x:o,alpha:n}=e;rt([o,n],"prelu");let s=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values,[a,l]=oZ(o.shape,n.shape,s,i,"float32");return t.makeTensorInfo(l,"float32",a)}var rD={kernelName:Va,backendName:"cpu",kernelFunc:eS};var rS=Et(pi,r=>Math.max(0,r)),oD={kernelName:pi,backendName:"cpu",kernelFunc:rS};var oS=Et(mi,r=>Math.min(Math.max(0,r),6)),nD={kernelName:mi,backendName:"cpu",kernelFunc:oS};function Mu(r,e,t,o,n){if(t==="linear")return Pr({inputs:{x:e},backend:r});if(t==="relu")return rS({inputs:{x:e},backend:r});if(t==="elu")return QT({inputs:{x:e},backend:r});if(t==="relu6")return oS({inputs:{x:e},backend:r});if(t==="prelu")return eS({inputs:{x:e,alpha:o},backend:r});if(t==="leakyrelu")return tS({inputs:{x:e},backend:r,attrs:{alpha:n}});if(t==="sigmoid")return qT({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function Ht(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{shape:s}=o,i=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(s,i),l=b.sizeFromShape(a);b.assert(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${n.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(n.dataId);let u=t.data.get(n.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=a,p.shape=a}return{dataId:n.dataId,shape:a,dtype:n.dtype}}var sD={kernelName:Wa,backendName:"cpu",kernelFunc:Ht};function nS(r){let{inputs:e,backend:t,attrs:o}=r,{a:n,b:s}=e,{transposeA:i,transposeB:a}=o;rt([n,s],"matMul");let l=n.shape.length,u=s.shape.length,c=i?n.shape[l-2]:n.shape[l-1],p=a?s.shape[u-1]:s.shape[u-2],m=i?n.shape[l-1]:n.shape[l-2],f=a?s.shape[u-2]:s.shape[u-1],h=n.shape.slice(0,-2),g=s.shape.slice(0,-2),d=b.sizeFromShape(h),x=b.sizeFromShape(g),w=Eo.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);b.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let N=i?[d,c,m]:[d,m,c],v=a?[x,f,p]:[x,p,f],k=Ht({inputs:{x:n},backend:t,attrs:{shape:N}}),R=Ht({inputs:{x:s},backend:t,attrs:{shape:v}}),O=i?k.shape[1]:k.shape[2],L=i?k.shape[2]:k.shape[1],M=a?R.shape[1]:R.shape[2],H=Math.max(d,x),q=t.data.get(k.dataId).values,K=t.data.get(R.dataId).values,X=b.computeStrides(k.shape),Y=b.computeStrides(R.shape),[Q,et,Z]=i?[X[0],1,X[1]]:[X[0],X[1],1],[ot,it,at]=a?[1,Y[1],Y[0]]:[Y[1],1,Y[0]],pt=L*M,ut=Nt([H,L,M],k.dtype),xt=ut.values,mt=t.blockSize;for(let bt=0;bt<H;bt++){let At=bt%d,Lt=bt%x;for(let _t=0;_t<L;_t+=mt){let Kt=Math.min(_t+mt,L);for(let jt=0;jt<M;jt+=mt){let Ne=Math.min(jt+mt,M);for(let Ae=0;Ae<O;Ae+=mt){let tr=Math.min(Ae+mt,O);for(let De=_t;De<Kt;De++)for(let Ce=jt;Ce<Ne;Ce++){let Ye=0;for(let Ue=Ae;Ue<tr;Ue++){let Ds=q[At*Q+De*et+Ue*Z],_r=K[Ue*ot+Ce*it+Lt*at];Ye+=Ds*_r}xt[bt*pt+(De*M+Ce)]+=Ye}}}}}return t.disposeIntermediateTensorInfo(k),t.disposeIntermediateTensorInfo(R),t.makeTensorInfo(w,ut.dtype,ut.values)}var iD={kernelName:da,backendName:"cpu",kernelFunc:nS};function nZ(r){let{inputs:e,backend:t,attrs:o}=r,{a:n,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o,m,f,h,g=[];m=nS({inputs:{a:n,b:s},attrs:{transposeA:l,transposeB:u},backend:t}),i&&(f=bs({inputs:{a:m,b:i},backend:t}),g.push(m),m=f),c&&(h=Mu(t,m,c,a,p),g.push(m),m=h);for(let x of g)t.disposeIntermediateTensorInfo(x);return m}var aD={kernelName:Ql,backendName:"cpu",kernelFunc:nZ};var sZ=Et(Os,r=>Math.acos(r)),lD={kernelName:Os,backendName:"cpu",kernelFunc:sZ};var iZ=Et(Ls,r=>Math.acosh(r)),uD={kernelName:Ls,backendName:"cpu",kernelFunc:iZ};function aZ(r){let{inputs:e,backend:t}=r,o=e;rt(e,"addN");let n=o.map(a=>t.data.get(a.dataId).values),s=Nt(o[0].shape,o[0].dtype),i=s.values;for(let a=0;a<o.length;a++){let l=n[a];for(let u=0;u<i.length;u++)i[u]+=l[u]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var cD={kernelName:Cc,backendName:"cpu",kernelFunc:aZ};function lZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o;rt(n,"all");let a=b.parseAxisParam(s,n.shape),l=a,u=I.getAxesPermutation(l,n.shape.length),c=n;u!=null&&(c=Oe({inputs:{x:n},backend:t,attrs:{perm:u}}),l=I.getInnerMostAxes(l.length,n.shape.length)),I.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,m]=I.computeOutAndReduceShapes(c.shape,l),f=b.sizeFromShape(m),h=b.makeZerosTypedArray(b.sizeFromShape(p),c.dtype),g=t.data.get(c.dataId).values;for(let x=0;x<h.length;++x){let y=x*f,w=g[y];for(let N=0;N<f;++N){let v=g[y+N];w=w&&v}h[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let d=t.makeTensorInfo(p,c.dtype,h);if(i){let x=I.expandShapeToKeepDim(p,a),y=Ht({inputs:{x:d},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(d),y}return d}var pD={kernelName:Ic,backendName:"cpu",kernelFunc:lZ};function uZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o;rt(n,"any");let a=b.parseAxisParam(s,n.shape),l=a,u=I.getAxesPermutation(l,n.shape.length),c=n;u!=null&&(c=Oe({inputs:{x:n},backend:t,attrs:{perm:u}}),l=I.getInnerMostAxes(l.length,n.shape.length)),I.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,m]=I.computeOutAndReduceShapes(c.shape,l),f=b.sizeFromShape(m),h=b.makeZerosTypedArray(b.sizeFromShape(p),c.dtype),g=t.data.get(c.dataId).values;for(let x=0;x<h.length;++x){let y=x*f,w=g[y];for(let N=0;N<f;++N){let v=g[y+N];w=w||v}h[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let d=t.makeTensorInfo(p,c.dtype,h);if(i){let x=I.expandShapeToKeepDim(p,a),y=Ht({inputs:{x:d},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(d),y}return d}var mD={kernelName:kc,backendName:"cpu",kernelFunc:uZ};function cZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s}=o;rt(n,"argMax");let i=b.parseAxisParam(s,n.shape),a=I.getAxesPermutation(i,n.shape.length),l=n,u=[];a!=null&&(l=Oe({inputs:{x:n},backend:t,attrs:{perm:a}}),u.push(l),i=I.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[c,p]=I.computeOutAndReduceShapes(l.shape,i),m=b.sizeFromShape(c),f=b.makeZerosTypedArray(m,"int32"),h=b.sizeFromShape(p),g=t.data.get(l.dataId).values;for(let d=0;d<f.length;++d){let x=d*h,y=g[x],w=0;for(let N=0;N<h;++N){let v=g[x+N];v>y&&(y=v,w=N)}f[d]=w}return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),t.makeTensorInfo(c,"int32",f)}var fD={kernelName:pa,backendName:"cpu",kernelFunc:cZ};function pZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s}=o;rt(n,"argMin");let i=b.parseAxisParam(s,n.shape),a=I.getAxesPermutation(i,n.shape.length),l=n,u=[];a!=null&&(l=Oe({inputs:{x:n},backend:t,attrs:{perm:a}}),u.push(l),i=I.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[c,p]=I.computeOutAndReduceShapes(l.shape,i),m=b.sizeFromShape(c),f=b.makeZerosTypedArray(m,"int32"),h=b.sizeFromShape(p),g=t.data.get(l.dataId).values;for(let d=0;d<f.length;++d){let x=d*h,y=g[x],w=0;for(let N=0;N<h;++N){let v=g[x+N];v<y&&(y=v,w=N)}f[d]=w}return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),t.makeTensorInfo(c,"int32",f)}var hD={kernelName:ma,backendName:"cpu",kernelFunc:pZ};var mZ=Et(Ps,r=>Math.asin(r)),dD={kernelName:Ps,backendName:"cpu",kernelFunc:mZ};var fZ=Et(zs,r=>Math.asinh(r)),gD={kernelName:zs,backendName:"cpu",kernelFunc:fZ};var hZ=Et(Bs,r=>Math.atan(r)),xD={kernelName:Bs,backendName:"cpu",kernelFunc:hZ};var dZ=Ut((r,e)=>Math.atan2(r,e)),gZ=Zt(Vs,dZ),yD={kernelName:Vs,backendName:"cpu",kernelFunc:gZ};var xZ=Et(Ms,r=>Math.atanh(r)),bD={kernelName:Ms,backendName:"cpu",kernelFunc:xZ};function sm(r,e,t,o,n,s){let i=n.strideHeight,a=n.strideWidth,l=n.dilationHeight,u=n.dilationWidth,c=n.effectiveFilterHeight,p=n.effectiveFilterWidth,m=n.padInfo.top,f=n.padInfo.left,h=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Nt(n.outShape,t),d=g.values,x=n.outShape[1]*n.outShape[2]*n.outShape[3],y=n.outShape[2]*n.outShape[3],w=n.outShape[3];for(let N=0;N<n.batchSize;++N){let v=N*x,k=N*o[0];for(let R=0;R<n.inChannels;++R)for(let O=0;O<n.outHeight;++O){let L=O*i-m,M=Math.max(0,L),H=Math.min(n.inHeight,c+L),q=v+O*y;for(let K=0;K<n.outWidth;++K){let X=K*a-f,Y=Math.max(0,X),Q=Math.min(n.inWidth,p+X),et=h,Z=0,ot=0;for(let at=M;at<H;at+=l){let pt=k+at*o[1];for(let ut=Y;ut<Q;ut+=u){let xt=pt+ut*o[2],mt=r[xt+R];s==="max"&&mt>et?et=mt:s==="avg"&&(Z+=mt,ot++)}if(isNaN(et))break}let it=q+K*w+R;d[it]=s==="avg"?Z/ot:et}}}return g}function Sx(r,e,t,o,n=!1,s=!1){let i=Nt(o.outShape,"int32"),a=o.strideHeight,l=o.strideWidth,u=o.dilationHeight,c=o.dilationWidth,p=o.effectiveFilterHeight,m=o.effectiveFilterWidth,f=o.padInfo.top,h=o.padInfo.left,g=Nt(e,t,r);for(let d=0;d<o.batchSize;++d)for(let x=0;x<o.inChannels;++x)for(let y=0;y<o.outHeight;++y){let w=y*a-f,N=w;for(;N<0;)N+=u;let v=Math.min(o.inHeight,p+w);for(let k=0;k<o.outWidth;++k){let R=k*l-h,O=R;for(;O<0;)O+=c;let L=Math.min(o.inWidth,m+R),M=Number.NEGATIVE_INFINITY,H=-1;for(let q=N;q<v;q+=u){let K=q-w;for(let X=O;X<L;X+=c){let Y=X-R,Q=g.get(d,q,X,x);Q>M&&(M=Q,n?H=s?((d*o.inHeight+q)*o.inWidth+X)*o.inChannels+x:(q*o.inWidth+X)*o.inChannels+x:H=K*m+Y)}}i.set(H,d,y,k,x)}}return i}function vx(r,e,t,o,n,s){let i=n.strideDepth,a=n.strideHeight,l=n.strideWidth,u=n.dilationDepth,c=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterDepth,f=n.effectiveFilterHeight,h=n.effectiveFilterWidth,g=n.padInfo.front,d=n.padInfo.top,x=n.padInfo.left,y=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Nt(n.outShape,t),N=w.values,v=n.outShape[1]*n.outShape[2]*n.outShape[3]*n.outShape[4],k=n.outShape[2]*n.outShape[3]*n.outShape[4],R=n.outShape[3]*n.outShape[4],O=n.outShape[4];for(let L=0;L<n.batchSize;++L){let M=L*v,H=L*o[0];for(let q=0;q<n.inChannels;++q)for(let K=0;K<n.outDepth;++K){let X=K*i-g,Y=X;for(;Y<0;)Y+=u;let Q=Math.min(n.inDepth,m+X),et=M+K*k;for(let Z=0;Z<n.outHeight;++Z){let ot=Z*a-d,it=ot;for(;it<0;)it+=c;let at=Math.min(n.inHeight,f+ot),pt=et+Z*R;for(let ut=0;ut<n.outWidth;++ut){let xt=ut*l-x,mt=xt;for(;mt<0;)mt+=p;let bt=Math.min(n.inWidth,h+xt),At=pt+ut*O,Lt=y,_t=0,Kt=0;for(let Ne=Y;Ne<Q;Ne+=u){let Ae=H+Ne*o[1];for(let tr=it;tr<at;tr+=c){let De=Ae+tr*o[2];for(let Ce=mt;Ce<bt;Ce+=p){let Ye=De+Ce*o[3],Ue=r[Ye+q];if(s==="max"&&Ue>Lt?Lt=Ue:s==="avg"&&(_t+=Ue,Kt++),isNaN(Lt))break}if(isNaN(Lt))break}if(isNaN(Lt))break}let jt=At+q;N[jt]=s==="avg"?_t/Math.max(Kt,1):Lt}}}}return w}function wD(r,e){let t=Nt(e.outShape,"int32"),o=e.strideDepth,n=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=e.padInfo.front,f=e.padInfo.top,h=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let d=0;d<e.inChannels;++d)for(let x=0;x<e.outDepth;++x){let y=x*o-m,w=y;for(;w<0;)w+=i;let N=Math.min(e.inDepth,u+y);for(let v=0;v<e.outHeight;++v){let k=v*n-f,R=k;for(;R<0;)R+=a;let O=Math.min(e.inHeight,c+k);for(let L=0;L<e.outWidth;++L){let M=L*s-h,H=M;for(;H<0;)H+=l;let q=Math.min(e.inWidth,p+M),K=Number.NEGATIVE_INFINITY,X=-1;for(let Y=w;Y<N;Y+=i){let Q=Y-y;for(let et=R;et<O;et+=a){let Z=et-k;for(let ot=H;ot<q;ot+=l){let it=ot-M,at=r.get(g,Y,et,ot,d);at>=K&&(K=at,X=Q*c*p+Z*c+it)}}}t.set(X,g,x,v,L,d)}}}return t}function yZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e;rt(n,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,u=1;b.assert(I.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=I.computePool2DInfo(n.shape,s,i,u,a,l),p;if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))p=Pr({inputs:{x:n},backend:t});else{let m=t.data.get(n.dataId).values,f=b.computeStrides(n.shape),h=sm(m,n.shape,n.dtype,f,c,"avg");p=t.makeTensorInfo(c.outShape,n.dtype,h.values)}return p}var ND={kernelName:fa,backendName:"cpu",kernelFunc:yZ};function bZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=o;rt(n,"avgPool3d");let c=I.computePool3DInfo(n.shape,s,i,1,a,l,u),p=t.data.get(n.dataId).values,m=vx(p,n.shape,n.dtype,b.computeStrides(n.shape),c,"avg");return t.makeTensorInfo(m.shape,"float32",m.values)}var TD={kernelName:ha,backendName:"cpu",kernelFunc:bZ};function wZ(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=o;rt([n,s],"avgPool3DGrad");let c=I.computePool3DInfo(s.shape,i,a,1,l,u),p=c.strideDepth,m=c.strideHeight,f=c.strideWidth,h=c.filterDepth,g=c.filterHeight,d=c.filterWidth,x=c.dilationDepth,y=c.dilationHeight,w=c.dilationWidth,N=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,R=N-1-c.padInfo.front,O=k-1-c.padInfo.left,L=v-1-c.padInfo.top,M=Nt(s.shape,"float32"),H=1/(h*g*d),q=t.bufferSync(n);for(let K=0;K<c.batchSize;++K)for(let X=0;X<c.inChannels;++X)for(let Y=0;Y<c.inDepth;++Y)for(let Q=0;Q<c.inHeight;++Q)for(let et=0;et<c.inWidth;++et){let Z=Y-R,ot=Q-L,it=et-O,at=0;for(let pt=0;pt<N;pt+=x){let ut=(Z+pt)/p;if(!(ut<0||ut>=c.outDepth||Math.floor(ut)!==ut))for(let xt=0;xt<v;xt+=y){let mt=(ot+xt)/m;if(!(mt<0||mt>=c.outHeight||Math.floor(mt)!==mt))for(let bt=0;bt<k;bt+=w){let At=(it+bt)/f;if(At<0||At>=c.outWidth||Math.floor(At)!==At)continue;let Lt=q.get(K,ut,mt,At,X);at+=Lt}}}M.set(at*H,K,Y,Q,et,X)}return t.makeTensorInfo(M.shape,M.dtype,M.values)}var SD={kernelName:$c,backendName:"cpu",kernelFunc:wZ};function NZ(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,i=s;rt([n,s],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=I.computePool2DInfo(i.shape,a,l,1,u),p=c.strideHeight,m=c.strideWidth,f=c.filterHeight,h=c.filterWidth,g=c.dilationHeight,d=c.dilationWidth,x=c.effectiveFilterHeight,y=c.effectiveFilterWidth,w=y-1-c.padInfo.left,N=x-1-c.padInfo.top,v=Nt(i.shape,"float32"),k=1/(f*h),R=t.data.get(n.dataId).values,O=Nt(n.shape,"float32",R);for(let L=0;L<c.batchSize;++L)for(let M=0;M<c.inChannels;++M)for(let H=0;H<c.inHeight;++H)for(let q=0;q<c.inWidth;++q){let K=H-N,X=q-w,Y=0;for(let Q=0;Q<x;Q+=g){let et=(K+Q)/p;if(!(et<0||et>=c.outHeight||Math.floor(et)!==et))for(let Z=0;Z<y;Z+=d){let ot=(X+Z)/m;if(ot<0||ot>=c.outWidth||Math.floor(ot)!==ot)continue;let it=O.get(L,et,ot,M);Y+=it}}v.set(Y*k,L,H,q,M)}return t.makeTensorInfo(v.shape,v.dtype,v.values)}var vD={kernelName:Ec,backendName:"cpu",kernelFunc:NZ};function TZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,scale:s,offset:i,mean:a,variance:l}=e;b.assert(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),rt([n,a,l,s,i],"batchNorm");let{varianceEpsilon:u}=o;u==null&&(u=.001);let c=t.data.get(n.dataId).values,p=t.data.get(a.dataId).values,m=t.data.get(l.dataId).values,f=s?t.data.get(s.dataId).values:new Float32Array([1]),h=i?t.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),d=h.length,x=f.length,y=m.length,w=p.length,N=0,v=0,k=0,R=0;for(let O=0;O<c.length;++O)g[O]=h[N++]+(c[O]-p[v++])*f[k++]/Math.sqrt(m[R++]+u),N>=d&&(N=0),v>=w&&(v=0),k>=x&&(k=0),R>=y&&(R=0);return t.makeTensorInfo(n.shape,n.dtype,g)}var CD={kernelName:Ia,backendName:"cpu",kernelFunc:TZ};function SZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockShape:s,crops:i}=o;rt([n],"batchToSpaceND");let a=s.reduce((x,y)=>x*y),l=I.getReshaped(n.shape,s,a),u=I.getPermuted(l.length,s.length),c=I.getReshapedPermuted(n.shape,s,a),p=I.getSliceBeginCoords(i,s.length),m=I.getSliceSize(c,i,s.length),f=Ht({inputs:{x:n},backend:t,attrs:{shape:l}}),h=Oe({inputs:{x:f},backend:t,attrs:{perm:u}}),g=Ht({inputs:{x:h},backend:t,attrs:{shape:c}}),d=Sn({inputs:{x:g},backend:t,attrs:{begin:p,size:m}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),d}var ID={kernelName:ga,backendName:"cpu",kernelFunc:SZ};function vZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,weights:s}=e,{size:i}=o,a=t.data.get(n.dataId).values,l=t.data.get(s.dataId).values,u=rm(a,l,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,u)}var kD={kernelName:Ac,backendName:"cpu",kernelFunc:vZ};function CZ(r){let{inputs:e,backend:t}=r,{s0:o,s1:n}=e,s=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values,a=I.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var ED={kernelName:od,backendName:"cpu",kernelFunc:CZ};var IZ=Et(Ws,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),$D={kernelName:Ws,backendName:"cpu",kernelFunc:IZ};var kZ=r=>{let{x:e}=r.inputs,t=r.backend,o=new Float32Array(b.sizeFromShape(e.shape)),n=t.data.get(e.dataId),s=n.complexTensorInfos.real,i=n.complexTensorInfos.imag,a=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values;for(let u=0;u<a.length;u++){let c=a[u],p=l[u];o[u]=Math.hypot(c,p)}return t.makeOutput(o,e.shape,"float32")},AD={kernelName:xa,backendName:"cpu",kernelFunc:kZ};function ws(r){let{inputs:e,backend:t}=r,{input:o}=e,n=t.data.get(o.dataId).complexTensorInfos.imag,s=t.data.get(n.dataId).values;return t.makeTensorInfo(n.shape,n.dtype,s)}var DD={kernelName:Kc,backendName:"cpu",kernelFunc:ws};function yl(r){let{inputs:e,backend:t,attrs:o}=r,{axis:n}=o,s=b.parseAxisParam(n,e[0].shape)[0],i=e.map(g=>g.shape);I.assertParamsConsistent(i,s);let a=I.computeOutShape(e.map(g=>g.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let l=e.filter(g=>b.sizeFromShape(g.shape)>0);if(l.length===1)return Pr({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){let g=l.map(N=>wn({inputs:{input:N},backend:t})),d=l.map(N=>ws({inputs:{input:N},backend:t})),x=yl({inputs:g,backend:t,attrs:{axis:s}}),y=yl({inputs:d,backend:t,attrs:{axis:s}}),w=cr({inputs:{real:x,imag:y},backend:t});return g.forEach(N=>t.disposeIntermediateTensorInfo(N)),d.forEach(N=>t.disposeIntermediateTensorInfo(N)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),w}let u=l.map(g=>{let x=[-1,b.sizeFromShape(g.shape.slice(s))];return Ht({inputs:{x:g},backend:t,attrs:{shape:x}})}),c=u.map(g=>({vals:t.data.get(g.dataId).values,shape:g.shape}));a=I.computeOutShape(u.map(g=>g.shape),1);let p=u[0].shape[0]===1,m=sx(c,a,e[0].dtype,p),f=I.computeOutShape(l.map(g=>g.shape),s),h=t.makeTensorInfo(f,e[0].dtype,m);return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var _D={kernelName:ya,backendName:"cpu",kernelFunc:yl};function sS(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o;rt([n,s],"conv2d");let p=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(n.shape,s.shape,i,u,a,c,!1,p),f=m.filterHeight,h=m.filterWidth,g=m.dilationHeight,d=m.dilationWidth,x=m.padInfo.left,y=m.padInfo.top,w=m.dataFormat==="channelsLast",N=new ue(m.outShape,n.dtype),v=b.computeStrides(n.shape),k=b.computeStrides(s.shape),R=v[0],O=w?v[1]:v[2],L=w?v[2]:1,M=w?1:v[1],H=N.strides[0],q=w?N.strides[1]:N.strides[2],K=w?N.strides[2]:1,X=w?1:N.strides[1],Y=t.data.get(n.dataId).values,Q=t.data.get(s.dataId).values,et=N.values;for(let Z=0;Z<m.batchSize;++Z){let ot=Z*R,it=Z*H;for(let at=0;at<m.outHeight;++at){let pt=it+at*q,ut=at*m.strideHeight-y;for(let xt=0;xt<f;++xt){let mt=ut+xt*g;if(mt<0||mt>=m.inHeight)continue;let bt=xt*k[0],At=ot+mt*O;for(let Lt=0;Lt<m.outWidth;++Lt){let _t=pt+Lt*K,Kt=Lt*m.strideWidth-x;for(let jt=0;jt<h;++jt){let Ne=Kt+jt*d;if(Ne<0||Ne>=m.inWidth)continue;let Ae=bt+jt*k[1],tr=At+Ne*L,De=Ae;for(let Ce=0;Ce<m.inChannels;++Ce){let Ye=Y[tr+Ce*M];for(let Ue=0;Ue<m.outChannels;++Ue)et[_t+Ue*X]+=Ye*Q[De+Ue];De+=m.outChannels}}}}}}return t.makeTensorInfo(N.shape,N.dtype,et)}var RD={kernelName:ba,backendName:"cpu",kernelFunc:sS};function EZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o;rt([n,s],"conv2dBackpropFilter");let p=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(n.shape,c,i,1,a,u,!1,p),{strideHeight:f,strideWidth:h,filterHeight:g,filterWidth:d}=m,x=m.dataFormat==="channelsLast",y=new ue(m.filterShape,"float32"),w=m.padInfo.left,N=m.padInfo.top,v=t.data.get(n.dataId).values,k=t.data.get(s.dataId).values,R=new ue(n.shape,n.dtype,v),O=new ue(s.shape,s.dtype,k);for(let L=0;L<g;++L){let M=Math.max(0,Math.ceil((N-L)/f)),H=Math.min(m.outHeight,(m.inHeight+N-L)/f);for(let q=0;q<d;++q){let K=Math.max(0,Math.ceil((w-q)/h)),X=Math.min(m.outWidth,(m.inWidth+w-q)/h);for(let Y=0;Y<m.inChannels;++Y)for(let Q=0;Q<m.outChannels;++Q){let et=0;for(let Z=0;Z<m.batchSize;++Z)for(let ot=M;ot<H;++ot){let it=L+ot*f-N;for(let at=K;at<X;++at){let pt=q+at*h-w;x?et+=R.get(Z,it,pt,Y)*O.get(Z,ot,at,Q):et+=R.get(Z,Y,it,pt)*O.get(Z,Q,ot,at)}}y.set(et,L,q,Y,Q)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var FD={kernelName:_c,backendName:"cpu",kernelFunc:EZ};function $Z(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o;rt([n,s],"conv2dBackpropInput");let p=b.computeStrides(s.shape),m=b.computeStrides(n.shape),f=I.convertConv2DDataFormat(u),h=I.computeConv2DInfo(i,s.shape,a,1,l,c,!1,f),g=new ue(h.inShape,"float32"),d=g.values,x=t.data.get(n.dataId).values,y=t.data.get(s.dataId).values,[w,N,v]=p,{batchSize:k,filterHeight:R,filterWidth:O,inChannels:L,inHeight:M,inWidth:H,outChannels:q,outHeight:K,outWidth:X,strideHeight:Y,strideWidth:Q}=h;f=h.dataFormat;let et=R-1-h.padInfo.top,Z=O-1-h.padInfo.left,ot=f==="channelsLast",it=g.strides[0],at=ot?g.strides[1]:g.strides[2],pt=ot?g.strides[2]:1,ut=ot?1:g.strides[1],xt=m[0],mt=ot?m[1]:m[2],bt=ot?m[2]:1,At=ot?1:m[1];for(let Lt=0;Lt<k;++Lt)for(let _t=0;_t<L;++_t)for(let Kt=0;Kt<M;++Kt){let jt=Kt-et,Ne=Math.max(0,Math.ceil(jt/Y)),Ae=Math.min(K,(R+jt)/Y);for(let tr=0;tr<H;++tr){let De=tr-Z,Ce=Math.max(0,Math.ceil(De/Q)),Ye=Math.min(X,(O+De)/Q),Ue=0;for(let _r=Ne;_r<Ae;++_r){let na=_r*Y-jt;for(let Uo=Ce;Uo<Ye;++Uo){let Bl=Uo*Q-De,Rn=xt*Lt+mt*_r+bt*Uo,_s=w*(R-1-na)+N*(O-1-Bl)+v*_t;for(let sa=0;sa<q;++sa){let ia=x[Rn+At*sa],aa=y[_s+sa];Ue+=ia*aa}}}let Ds=it*Lt+at*Kt+pt*tr+ut*_t;d[Ds]=Ue}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var OD={kernelName:wa,backendName:"cpu",kernelFunc:$Z};function AZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:i,pad:a,dilations:l}=o;rt([n,s],"conv3d");let u=I.computeConv3DInfo(n.shape,s.shape,i,l,a),{filterDepth:c,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:h,dilationWidth:g,padInfo:d}=u,x=d.front,y=d.left,w=d.top,N=new ue(u.outShape,n.dtype),v=t.data.get(n.dataId).values,k=t.data.get(s.dataId).values,R=N.values,O=b.computeStrides(n.shape),L=b.computeStrides(s.shape);for(let M=0;M<u.batchSize;++M){let H=M*O[0],q=M*N.strides[0];for(let K=0;K<u.outDepth;++K){let X=q+K*N.strides[1],Y=K*u.strideDepth-x;for(let Q=0;Q<c;++Q){let et=Y+Q*f;if(et<0||et>=u.inDepth)continue;let Z=Q*L[0],ot=H+et*O[1];for(let it=0;it<u.outHeight;++it){let at=X+it*N.strides[2],pt=it*u.strideHeight-w;for(let ut=0;ut<p;++ut){let xt=pt+ut*h;if(xt<0||xt>=u.inHeight)continue;let mt=Z+ut*L[1],bt=ot+xt*O[2];for(let At=0;At<u.outWidth;++At){let Lt=at+At*u.outChannels,_t=At*u.strideWidth-y;for(let Kt=0;Kt<m;++Kt){let jt=_t+Kt*g;if(jt<0||jt>=u.inWidth)continue;let Ne=mt+Kt*L[2],Ae=bt+jt*u.inChannels,tr=Ne;for(let De=0;De<u.inChannels;++De){let Ce=v[Ae+De];for(let Ye=0;Ye<u.outChannels;++Ye)R[Lt+Ye]+=Ce*k[tr+Ye];tr+=u.outChannels}}}}}}}}return t.makeTensorInfo(N.shape,N.dtype,N.values)}var LD={kernelName:Na,backendName:"cpu",kernelFunc:AZ};function DZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:i,pad:a,filterShape:l}=o;rt([n,s],"conv3dBackpropFilterV2");let u=b.computeStrides(n.shape),c=b.computeStrides(s.shape),p=I.computeConv3DInfo(n.shape,l,i,1,a),m=p.strideDepth,f=p.strideHeight,h=p.strideWidth,g=p.filterDepth,d=p.filterHeight,x=p.filterWidth,y=new ue(p.filterShape,"float32"),w=y.values,[N,v,k,R]=y.strides,O=t.data.get(s.dataId).values,[L,M,H,q]=c,K=t.data.get(n.dataId).values,[X,Y,Q,et]=u,Z=p.padInfo.front,ot=p.padInfo.left,it=p.padInfo.top;for(let at=0;at<g;++at){let pt=Math.max(0,Math.ceil((Z-at)/m)),ut=Math.min(p.outDepth,(p.inDepth+Z-at)/m),xt=at*N;for(let mt=0;mt<d;++mt){let bt=Math.max(0,Math.ceil((it-mt)/f)),At=Math.min(p.outHeight,(p.inHeight+it-mt)/f),Lt=mt*v+xt;for(let _t=0;_t<x;++_t){let Kt=Math.max(0,Math.ceil((ot-_t)/h)),jt=Math.min(p.outWidth,(p.inWidth+ot-_t)/h),Ne=_t*k+Lt;for(let Ae=0;Ae<p.inChannels;++Ae){let tr=Ae*R+Ne;for(let De=0;De<p.outChannels;++De){let Ce=0;for(let Ye=0;Ye<p.batchSize;++Ye){let Ue=Ye*X,Ds=Ye*L;for(let _r=pt;_r<ut;++_r){let Uo=(at+_r*m-Z)*Y+Ue,Bl=_r*M+Ds;for(let Rn=bt;Rn<At;++Rn){let sa=(mt+Rn*f-it)*Q+Uo,ia=Rn*H+Bl;for(let aa=Kt;aa<jt;++aa){let qw=(_t+aa*h-ot)*et+sa,Kw=aa*q+ia;Ce+=K[qw+Ae]*O[Kw+De]}}}}w[tr+De]=Ce}}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var PD={kernelName:Rc,backendName:"cpu",kernelFunc:DZ};function _Z(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{pad:i,strides:a,inputShape:l}=o;rt([n],"conv3dBackpropInputV2");let u=b.computeStrides(n.shape),c=b.computeStrides(s.shape),p=I.computeConv3DInfo(l,s.shape,a,1,i),m=new ue(p.inShape,"float32"),f=m.values,[h,g,d,x]=m.strides,y=t.data.get(n.dataId).values,[w,N,v,k]=u,R=t.data.get(s.dataId).values,[O,L,M,H]=c,{batchSize:q,filterDepth:K,filterHeight:X,filterWidth:Y,inChannels:Q,inDepth:et,inHeight:Z,inWidth:ot,outChannels:it,outDepth:at,outHeight:pt,outWidth:ut,strideDepth:xt,strideHeight:mt,strideWidth:bt}=p,At=K-1-p.padInfo.front,Lt=X-1-p.padInfo.top,_t=Y-1-p.padInfo.left;for(let Kt=0;Kt<q;++Kt)for(let jt=0;jt<Q;++jt)for(let Ne=0;Ne<et;++Ne){let Ae=Ne-At,tr=Math.max(0,Math.ceil(Ae/xt)),De=Math.min(at,(K+Ae)/xt);for(let Ce=0;Ce<Z;++Ce){let Ye=Ce-Lt,Ue=Math.max(0,Math.ceil(Ye/mt)),Ds=Math.min(pt,(X+Ye)/mt);for(let _r=0;_r<ot;++_r){let na=_r-_t,Uo=Math.max(0,Math.ceil(na/bt)),Bl=Math.min(ut,(Y+na)/bt),Rn=0;for(let _s=tr;_s<De;++_s){let sa=_s*xt-Ae;for(let ia=Ue;ia<Ds;++ia){let aa=ia*mt-Ye;for(let Qm=Uo;Qm<Bl;++Qm){let qw=Qm*bt-na,Kw=w*Kt+N*_s+v*ia+k*Qm,X4=O*(K-1-sa)+L*(X-1-aa)+M*(Y-1-qw)+H*jt;for(let Yh=0;Yh<it;++Yh){let Y4=y[Kw+Yh],Z4=R[X4+Yh];Rn+=Y4*Z4}}}}f[h*Kt+g*Ne+d*Ce+x*_r+jt]=Rn}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}var zD={kernelName:Fc,backendName:"cpu",kernelFunc:_Z};var RZ=Et(Us,r=>Math.cos(r)),BD={kernelName:Us,backendName:"cpu",kernelFunc:RZ};var FZ=Et(Hs,r=>Math.cosh(r)),MD={kernelName:Hs,backendName:"cpu",kernelFunc:FZ};function OZ(r){let{inputs:e,backend:t,attrs:o}=r,{image:n,boxes:s,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=o,[c,p,m,f]=n.shape,h=s.shape[0],[g,d]=a,x=Nt([h,g,d,f],"float32"),y=t.data.get(s.dataId).values,w=t.data.get(i.dataId).values,N=t.data.get(n.dataId).values,v=b.computeStrides(n.shape),k=b.computeStrides(x.shape);for(let R=0;R<h;R++){let O=R*4,L=y[O],M=y[O+1],H=y[O+2],q=y[O+3],K=w[R];if(K>=c)continue;let X=g>1?(H-L)*(p-1)/(g-1):0,Y=d>1?(q-M)*(m-1)/(d-1):0;for(let Q=0;Q<g;Q++){let et=g>1?L*(p-1)+Q*X:.5*(L+H)*(p-1);if(et<0||et>p-1){for(let Z=0;Z<d;Z++)for(let ot=0;ot<f;ot++){let it=ot+Z*k[2]+Q*k[1]+R*k[0];x.values[it]=u}continue}if(l==="bilinear"){let Z=Math.floor(et),ot=Math.ceil(et),it=et-Z;for(let at=0;at<d;at++){let pt=d>1?M*(m-1)+at*Y:.5*(M+q)*(m-1);if(pt<0||pt>m-1){for(let bt=0;bt<f;bt++){let At=bt+at*k[2]+Q*k[1]+R*k[0];x.values[At]=u}continue}let ut=Math.floor(pt),xt=Math.ceil(pt),mt=pt-ut;for(let bt=0;bt<f;bt++){let At=bt+ut*v[2]+Z*v[1]+K*v[0],Lt=N[At];At=bt+xt*v[2]+Z*v[1]+K*v[0];let _t=N[At];At=bt+ut*v[2]+ot*v[1]+K*v[0];let Kt=N[At];At=bt+xt*v[2]+ot*v[1]+K*v[0];let jt=N[At],Ne=Lt+(_t-Lt)*mt,Ae=Kt+(jt-Kt)*mt;At=bt+at*k[2]+Q*k[1]+R*k[0],x.values[At]=Ne+(Ae-Ne)*it}}}else for(let Z=0;Z<d;++Z){let ot=d>1?M*(m-1)+Z*Y:.5*(M+q)*(m-1);if(ot<0||ot>m-1){for(let pt=0;pt<f;pt++){let ut=pt+Z*k[2]+Q*k[1]+R*k[0];x.values[ut]=u}continue}let it=Math.round(ot),at=Math.round(et);for(let pt=0;pt<f;pt++){let ut=pt+it*v[2]+at*v[1]+K*v[0],xt=pt+Z*k[2]+Q*k[1]+R*k[0];x.values[xt]=N[ut]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var VD={kernelName:Lc,backendName:"cpu",kernelFunc:OZ};function LZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,exclusive:i,reverse:a}=o;rt(n,"cumprod");let l=I.getAxesPermutation([s],n.shape.length),u=n;l!=null&&(u=Oe({inputs:{x:n},backend:t,attrs:{perm:l}}));let c=I.getInnerMostAxes(1,n.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=er(u.dtype,"int32"),m=b.makeOnesTypedArray(b.sizeFromShape(u.shape),p),f=t.data.get(u.dataId).values,h=u.shape[u.shape.length-1],g=a?(x,y)=>x+h-y-1:(x,y)=>x+y;for(let x=0;x<f.length;x+=h)for(let y=0;y<h;y++){let w=g(x,y);if(y===0)m[w]=i?1:f[w];else{let N=g(x,y-1);m[w]=i?f[N]*m[N]:f[w]*m[N]}}let d=t.makeTensorInfo(u.shape,p,m);if(l!=null){let x=I.getUndoAxesPermutation(l),y=Oe({inputs:{x:d},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(u),y}return d}var GD={kernelName:Oc,backendName:"cpu",kernelFunc:LZ};function PZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,exclusive:i,reverse:a}=o;rt(n,"cumsum");let l=I.getAxesPermutation([s],n.shape.length),u=n;l!=null&&(u=Oe({inputs:{x:n},backend:t,attrs:{perm:l}}));let c=I.getInnerMostAxes(1,n.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=er(u.dtype,"int32"),m=b.makeZerosTypedArray(b.sizeFromShape(u.shape),p),f=t.data.get(u.dataId).values,h=u.shape[u.shape.length-1],g=a?(x,y)=>x+h-y-1:(x,y)=>x+y;for(let x=0;x<f.length;x+=h)for(let y=0;y<h;y++){let w=g(x,y);if(y===0)m[w]=i?0:f[w];else{let N=g(x,y-1);m[w]=i?f[N]+m[N]:f[w]+m[N]}}let d=t.makeTensorInfo(u.shape,p,m);if(l!=null){let x=I.getUndoAxesPermutation(l),y=Oe({inputs:{x:d},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(u),y}return d}var WD={kernelName:Ta,backendName:"cpu",kernelFunc:PZ};function zZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,weights:s}=e,{size:i,binaryOutput:a}=o;if(n.shape.length===1){let l=t.data.get(n.dataId).values,u=t.data.get(s.dataId).values,c=rm(l,u,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,c)}else if(n.shape.length===2){let l=t.bufferSync(n),u=t.bufferSync(s),c=nx(l,u,i,a);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var UD={kernelName:Pc,backendName:"cpu",kernelFunc:zZ};function BZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockSize:s,dataFormat:i}=o;b.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let a=n.shape[0],l=n.shape[1],u=n.shape[2],c=n.shape[3],p=l*s,m=u*s,f=c/(s*s),h=t.data.get(n.dataId).values,g=new Float32Array(a*p*m*f),d=0;for(let x=0;x<a;++x)for(let y=0;y<p;++y){let w=Math.floor(y/s),N=y%s;for(let v=0;v<m;++v){let k=Math.floor(v/s),R=v%s,O=(N*s+R)*f;for(let L=0;L<f;++L){let H=L+O+c*(k+u*(w+l*x));g[d++]=h[H]}}}return t.makeTensorInfo([a,p,m,f],n.dtype,g)}var HD={kernelName:zc,backendName:"cpu",kernelFunc:BZ};function iS(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=o;rt([n,s],"depthwiseConv2DNative");let c=b.computeStrides(n.shape),p=b.computeStrides(s.shape),m=l;m==null&&(m=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);let f=I.computeConv2DInfo(n.shape,s.shape,i,m,a,u,!0),{filterHeight:h,filterWidth:g,dilationHeight:d,dilationWidth:x,padInfo:y}=f,w=y.left,N=y.top,v=f.outChannels/f.inChannels,k=new ue(f.outShape,n.dtype),R=t.data.get(n.dataId).values,O=t.data.get(s.dataId).values,L=k.values;for(let M=0;M<f.batchSize;++M){let H=M*c[0],q=M*k.strides[0];for(let K=0;K<f.outHeight;++K){let X=q+K*k.strides[1],Y=K*f.strideHeight-N;for(let Q=0;Q<h;++Q){let et=Y+Q*d;if(et<0||et>=f.inHeight)continue;let Z=Q*p[0],ot=H+et*c[1];for(let it=0;it<f.outWidth;++it){let at=X+it*k.strides[2],pt=it*f.strideWidth-w;for(let ut=0;ut<g;++ut){let xt=pt+ut*x;if(xt<0||xt>=f.inWidth)continue;let mt=Z+ut*p[1],bt=ot+xt*f.inChannels,At=at,Lt=mt;for(let _t=0;_t<f.inChannels;++_t){let Kt=R[bt+_t];for(let jt=0;jt<v;++jt)L[At+jt]+=Kt*O[Lt+jt];At+=v,Lt+=v}}}}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var qD={kernelName:Sa,backendName:"cpu",kernelFunc:iS};function MZ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o;rt([n,s],"depthwiseConv2dNativeBackpropFilter");let p=I.computeConv2DInfo(n.shape,c,i,a,l,u,!0),{strideHeight:m,strideWidth:f,filterHeight:h,filterWidth:g}=p,d=new ue(p.filterShape,"float32"),x=p.padInfo.left,y=p.padInfo.top,w=p.outChannels/p.inChannels,N=t.data.get(n.dataId).values,v=new ue(n.shape,n.dtype,N),k=t.data.get(s.dataId).values,R=new ue(s.shape,s.dtype,k);for(let O=0;O<h;++O){let L=Math.max(0,Math.ceil((y-O)/m)),M=Math.min(p.outHeight,(p.inHeight+y-O)/m);for(let H=0;H<g;++H){let q=Math.max(0,Math.ceil((x-H)/f)),K=Math.min(p.outWidth,(p.inWidth+x-H)/f);for(let X=0;X<p.outChannels;++X){let Y=Math.trunc(X/w),Q=X%w,et=0;for(let Z=0;Z<p.batchSize;++Z)for(let ot=L;ot<M;++ot){let it=O+ot*m-y;for(let at=q;at<K;++at){let pt=H+at*f-x;et+=v.get(Z,it,pt,Y)*R.get(Z,ot,at,X)}}d.set(et,O,H,Y,Q)}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}var KD={kernelName:Bc,backendName:"cpu",kernelFunc:MZ};function VZ(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o;rt([n,s],"depthwiseConv2DNativeBackpropInput");let p=b.computeStrides(n.shape),m=b.computeStrides(s.shape),f=I.computeConv2DInfo(c,s.shape,i,a,l,u,!0),h=new ue(f.inShape,"float32"),g=h.values,[d,x,y]=h.strides,w=t.data.get(n.dataId).values,[N,v,k]=p,R=t.data.get(s.dataId).values,[O,L,M]=m,{batchSize:H,filterHeight:q,filterWidth:K,inChannels:X,inHeight:Y,inWidth:Q,outChannels:et,outHeight:Z,outWidth:ot,strideHeight:it,strideWidth:at}=f,pt=q-1-f.padInfo.top,ut=K-1-f.padInfo.left,xt=et/X;for(let mt=0;mt<H;++mt)for(let bt=0;bt<X;++bt)for(let At=0;At<Y;++At){let Lt=At-pt,_t=Math.max(0,Math.ceil(Lt/it)),Kt=Math.min(Z,(q+Lt)/it);for(let jt=0;jt<Q;++jt){let Ne=jt-ut,Ae=Math.max(0,Math.ceil(Ne/at)),tr=Math.min(ot,(K+Ne)/at),De=0;for(let Ce=_t;Ce<Kt;++Ce){let Ye=Ce*it-Lt;for(let Ue=Ae;Ue<tr;++Ue){let Ds=Ue*at-Ne,_r=N*mt+v*Ce+k*Ue,na=O*(q-1-Ye)+L*(K-1-Ds)+M*bt;for(let Uo=0;Uo<xt;++Uo){let Bl=bt*xt+Uo,Rn=w[_r+Bl],_s=R[na+Uo];De+=Rn*_s}}}g[d*mt+x*At+y*jt+bt]=De}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var jD={kernelName:Mc,backendName:"cpu",kernelFunc:VZ};function GZ(r){let{inputs:e,backend:t}=r,{x:o}=e,n=b.sizeFromShape(o.shape),s=t.data.get(o.dataId).values,i=Nt([n,n],o.dtype),a=i.values;for(let u=0;u<s.length;u++)a[u*n+u]=s[u];let l=[...o.shape,...o.shape];return t.makeTensorInfo(l,i.dtype,i.values)}var XD={kernelName:nd,backendName:"cpu",kernelFunc:GZ};var YD={kernelName:va,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:o,filter:n}=r,{strides:s,pad:i,dilations:a}=t,l=e,u=l.data.get(o.dataId).values,c=o.shape.length,p=l.data.get(n.dataId).values,m=n.shape.length,{batchSize:f,inHeight:h,inWidth:g,inChannels:d,outHeight:x,outWidth:y,padInfo:w,strideHeight:N,strideWidth:v,filterHeight:k,filterWidth:R,dilationHeight:O,dilationWidth:L,outShape:M}=I.computeDilation2DInfo(o.shape,n.shape,s,i,"NHWC",a),H=b.sizeFromShape(M),q=M.length,K=b.getArrayFromDType(o.dtype,H);for(let Y=0;Y<f;++Y)for(let Q=0;Q<x;++Q){let et=Q*N-w.top;for(let Z=0;Z<y;++Z){let ot=Z*v-w.left;for(let it=0;it<d;++it){let at=Number.MIN_SAFE_INTEGER;for(let ut=0;ut<k;++ut){let xt=et+ut*O;if(xt>=0&&xt<h)for(let mt=0;mt<R;++mt){let bt=ot+mt*L;if(bt>=0&&bt<g){let At=b.locToIndex([Y,xt,bt,it],c,b.computeStrides(o.shape)),Lt=b.locToIndex([ut,mt,it],m,b.computeStrides(n.shape)),_t=u[At]+p[Lt];_t>at&&(at=_t)}}}let pt=b.locToIndex([Y,Q,Z,it],q,b.computeStrides(M));K[pt]=at}}}return{dataId:l.write(b.toTypedArray(K,o.dtype),M,o.dtype),shape:M,dtype:o.dtype}}};var ZD={kernelName:lf,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:o,filter:n,dy:s}=r,{strides:i,pad:a,dilations:l}=t,u=e,c=b.toNestedArray(o.shape,u.data.get(o.dataId).values),p=b.toNestedArray(n.shape,u.data.get(n.dataId).values),{batchSize:m,inHeight:f,inWidth:h,inChannels:g,outHeight:d,outWidth:x,padInfo:y,strideHeight:w,strideWidth:N,filterHeight:v,filterWidth:k,dilationHeight:R,dilationWidth:O,outShape:L}=I.computeDilation2DInfo(o.shape,n.shape,i,a,"NHWC",l);b.assert(s.rank===L.length,()=>`Error in ${lf}, dy must have the same rank as output ${L.length}, but got ${s.rank}`);let M=b.toNestedArray(L,u.data.get(s.dataId).values),H=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let K=0;K<m;++K)for(let X=0;X<d;++X){let Y=X*w-y.top;for(let Q=0;Q<x;++Q){let et=Q*N-y.left;for(let Z=0;Z<g;++Z){let ot=Number.MIN_SAFE_INTEGER,it=0,at=0;for(let pt=0;pt<v;++pt){let ut=Y+pt*R;if(ut>=0&&ut<f)for(let xt=0;xt<k;++xt){let mt=et+xt*O;if(mt>=0&&mt<h){let bt=c[K][ut][mt][Z]+p[pt][xt][Z];bt>ot&&(ot=bt,it=pt,at=xt)}}}H[it][at][Z]+=M[K][X][Q][Z]}}}return{dataId:u.write(b.toTypedArray(H,o.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var JD={kernelName:af,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:o,filter:n,dy:s}=r,{strides:i,pad:a,dilations:l}=t,u=e,c=b.toNestedArray(o.shape,u.data.get(o.dataId).values),p=b.toNestedArray(n.shape,u.data.get(n.dataId).values),{batchSize:m,inHeight:f,inWidth:h,inChannels:g,outHeight:d,outWidth:x,padInfo:y,strideHeight:w,strideWidth:N,filterHeight:v,filterWidth:k,dilationHeight:R,dilationWidth:O,outShape:L}=I.computeDilation2DInfo(o.shape,n.shape,i,a,"NHWC",l);b.assert(s.rank===L.length,()=>`Error in ${af}, dy must have the same rank as output ${L.length}, but got ${s.rank}`);let M=b.toNestedArray(L,u.data.get(s.dataId).values),H=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let K=0;K<m;++K)for(let X=0;X<d;++X){let Y=X*w-y.top;for(let Q=0;Q<x;++Q){let et=Q*N-y.left;for(let Z=0;Z<g;++Z){let ot=Number.MIN_SAFE_INTEGER,it=Y<0?0:Y,at=et<0?0:et;for(let pt=0;pt<v;++pt){let ut=Y+pt*R;if(ut>=0&&ut<f)for(let xt=0;xt<k;++xt){let mt=et+xt*O;if(mt>=0&&mt<h){let bt=c[K][ut][mt][Z]+p[pt][xt][Z];bt>ot&&(ot=bt,it=ut,at=mt)}}}H[K][it][at][Z]+=M[K][X][Q][Z]}}}return{dataId:u.write(b.toTypedArray(H,o.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};function WZ(r){let{inputs:e,backend:t,attrs:o}=r,{image:n}=e,{canvas:s,options:i}=o,{contextOptions:a,imageOptions:l}=i||{},u=l?.alpha||1,c=a?.contextType||"2d";if(c!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);let p=s.getContext(c,a?.contextAttributes||{});if(p==null)throw new Error(`Could not get the context with ${c} type.`);let[m,f]=n.shape.slice(0,2),h=n.shape.length===2?1:n.shape[2],g=t.data.get(n.dataId).values,d=n.dtype==="float32"?255:1,x=new Uint8ClampedArray(f*m*4);for(let w=0;w<m*f;++w){let N=[0,0,0,255*u];for(let k=0;k<h;k++){let R=g[w*h+k];if(n.dtype==="float32"){if(R<0||R>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${R}.`)}else if(n.dtype==="int32"&&(R<0||R>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${R}.`);h===1?(N[0]=R*d,N[1]=R*d,N[2]=R*d):N[k]=R*d}let v=w*4;x[v+0]=Math.round(N[0]),x[v+1]=Math.round(N[1]),x[v+2]=Math.round(N[2]),x[v+3]=Math.round(N[3])}s.width=f,s.height=m;let y=new ImageData(x,f,m);return p.putImageData(y,0,0),n}var QD={kernelName:x1,backendName:"cpu",kernelFunc:WZ};function Ki(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o;rt(n,"sum");let a;n.dtype==="bool"?a=Nn({inputs:{x:n},backend:t,attrs:{dtype:"int32"}}):a=Pr({inputs:{x:n},backend:t});let l=a.shape.length,u=b.parseAxisParam(s,a.shape),c=I.getAxesPermutation(u,l),p=u,m=a;c!=null&&(m=Oe({inputs:{x:a},backend:t,attrs:{perm:c}}),p=I.getInnerMostAxes(p.length,l)),I.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,h]=I.computeOutAndReduceShapes(m.shape,p),g=I.upcastType(m.dtype,"int32"),d=tm(t,f,g),x=b.sizeFromShape(h),y=t.data.get(d.dataId).values,w=t.data.get(m.dataId).values;for(let N=0;N<y.length;++N){let v=N*x,k=0;for(let R=0;R<x;++R)k+=w[v+R];y[N]=k}if(i){let N=I.expandShapeToKeepDim(d.shape,u),v=d;d=Ht({inputs:{x:d},backend:t,attrs:{shape:N}}),t.disposeIntermediateTensorInfo(v)}return t.disposeIntermediateTensorInfo(a),c!=null&&t.disposeIntermediateTensorInfo(m),d}var t_={kernelName:Xa,backendName:"cpu",kernelFunc:Ki};function UZ(r){let{inputs:e,backend:t,attrs:o}=r,{equation:n}=o,s=e,{allDims:i,summedDims:a,idDims:l}=I.decodeEinsumEquation(n,s.length);I.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:c}=I.getEinsumComputePath(a,l),p=c.length,m=null,f=i.length,h=[];for(let g=0;g<p;++g){for(let d of c[g]){let{permutationIndices:x,expandDims:y}=I.getEinsumPermutation(f,l[d]),w;I.isIdentityPermutation(x)?w=s[d]:(w=Oe({inputs:{x:s[d]},backend:t,attrs:{perm:x}}),h.push(w));let N=w.shape.slice();for(let v=0;v<y.length;++v)N.splice(y[v],0,1);b.arraysEqual(w.shape,N)||(w=Ht({inputs:{x:w},backend:t,attrs:{shape:N}}),h.push(w)),m===null?m=w:(m=Bu({inputs:{a:w,b:m},backend:t}),h.push(m))}g<p-1&&(u[g]>=0&&(m=Ki({inputs:{x:m},backend:t,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),h.push(m)),f--)}for(let g of h)g!==m&&t.disposeIntermediateTensorInfo(g);return m}var e_={kernelName:Vc,backendName:"cpu",kernelFunc:UZ};function HZ(r){let{inputs:e,backend:t}=r,{dy:o,y:n}=e;rt([o,n],"eluGrad");let s=new Float32Array(b.sizeFromShape(n.shape)),i=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];u>=0?s[l]=a[l]:s[l]=a[l]*(u+1)}return t.makeTensorInfo(n.shape,"float32",s)}var r_={kernelName:Gc,backendName:"cpu",kernelFunc:HZ};var qZ=I.ERF_P,KZ=I.ERF_A1,jZ=I.ERF_A2,XZ=I.ERF_A3,YZ=I.ERF_A4,ZZ=I.ERF_A5,JZ=Et(js,r=>{let e=Math.sign(r),t=Math.abs(r),o=1/(1+qZ*t);return e*(1-((((ZZ*o+YZ)*o+XZ)*o+jZ)*o+KZ)*o*Math.exp(-t*t))}),o_={kernelName:js,backendName:"cpu",kernelFunc:JZ};function im(r){let{inputs:e,backend:t,attrs:o}=r,{input:n}=e,{dim:s}=o,i=n.shape.length,a=n.shape.slice(),l=s;return s<0&&(b.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),a.splice(l,0,1),Ht({inputs:{x:n},backend:t,attrs:{shape:a}})}var n_={kernelName:Ca,backendName:"cpu",kernelFunc:im};var QZ=Ut((r,e)=>r/e),lh=Zt(qs,QZ),uh={kernelName:qs,backendName:"cpu",kernelFunc:lh};function Cx(r,e,t){let o=r.shape,n=o[0],s=o[1],i=t.data.get(r.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[n,s],c=b.sizeFromShape(u),p=b.getTypedArrayFromDType("float32",c),m=b.getTypedArrayFromDType("float32",c);for(let d=0;d<n;d++){let x=Sn({inputs:{x:a},backend:t,attrs:{begin:[d,0],size:[1,s]}}),y=Sn({inputs:{x:l},backend:t,attrs:{begin:[d,0],size:[1,s]}}),w=cr({inputs:{real:x,imag:y},backend:t}),{real:N,imag:v}=tJ(w,e,t),k=I.mergeRealAndImagArrays(N,v);for(let R=0;R<s;R++){let O=I.getComplexWithIndex(k,R);p[d*s+R]=O.real,m[d*s+R]=O.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(w)}let f=t.makeTensorInfo(u,"float32",p),h=t.makeTensorInfo(u,"float32",m),g=cr({inputs:{real:f,imag:h},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}function tJ(r,e,t){let o=b.sizeFromShape(r.shape),n=t.data.get(r.dataId),s=t.data.get(n.complexTensorInfos.real.dataId).values,i=t.data.get(n.complexTensorInfos.imag.dataId).values;if(eJ(o)){let a=aS(s,i,o,e,t),l=[r.shape[0],r.shape[1]];if(e){let u=t.makeTensorInfo(l,"float32",a.real),c=t.makeTensorInfo(l,"float32",a.imag),p=t.makeTensorInfo([],"float32",b.createScalarValue(o,"float32")),m=Pr({inputs:{x:p},backend:t}),f=uh.kernelFunc({inputs:{a:u,b:p},backend:t}),h=uh.kernelFunc({inputs:{a:c,b:m},backend:t}),g=t.data.get(f.dataId).values,d=t.data.get(h.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),{real:g,imag:d}}return a}else{let a=I.mergeRealAndImagArrays(s,i),l=rJ(a,o,e);return I.splitRealAndImagArrays(l)}}function eJ(r){return(r&r-1)===0}function aS(r,e,t,o,n){if(t===1)return{real:r,imag:e};let s=I.mergeRealAndImagArrays(r,e),i=t/2,a=I.complexWithEvenIndex(s),l=a.real,u=a.imag,c=[l.length],p=n.makeTensorInfo(c,"float32",l),m=n.makeTensorInfo(c,"float32",u),f=cr({inputs:{real:p,imag:m},backend:n}),h=I.complexWithOddIndex(s),g=h.real,d=h.imag,x=[g.length],y=n.makeTensorInfo(x,"float32",g),w=n.makeTensorInfo(x,"float32",d),N=cr({inputs:{real:y,imag:w},backend:n}),v=aS(l,u,i,o,n),k=v.real,R=v.imag,O=[k.length],L=n.makeTensorInfo(O,"float32",k),M=n.makeTensorInfo(O,"float32",R),H=cr({inputs:{real:L,imag:M},backend:n}),q=aS(g,d,i,o,n),K=q.real,X=q.imag,Y=[K.length],Q=n.makeTensorInfo(Y,"float32",K),et=n.makeTensorInfo(Y,"float32",X),Z=cr({inputs:{real:Q,imag:et},backend:n}),ot=I.exponents(t,o),it=[ot.real.length],at=n.makeTensorInfo(it,"float32",ot.real),pt=n.makeTensorInfo(it,"float32",ot.imag),ut=cr({inputs:{real:at,imag:pt},backend:n}),xt=Bu({inputs:{a:ut,b:Z},backend:n}),mt=bs({inputs:{a:H,b:xt},backend:n}),bt=ih({inputs:{a:H,b:xt},backend:n}),At=wn({inputs:{input:mt},backend:n}),Lt=wn({inputs:{input:bt},backend:n}),_t=ws({inputs:{input:mt},backend:n}),Kt=ws({inputs:{input:bt},backend:n}),jt=yl({inputs:[At,Lt],backend:n,attrs:{axis:0}}),Ne=yl({inputs:[_t,Kt],backend:n,attrs:{axis:0}}),Ae=n.data.get(jt.dataId).values,tr=n.data.get(Ne.dataId).values;return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(N),n.disposeIntermediateTensorInfo(L),n.disposeIntermediateTensorInfo(M),n.disposeIntermediateTensorInfo(H),n.disposeIntermediateTensorInfo(Q),n.disposeIntermediateTensorInfo(et),n.disposeIntermediateTensorInfo(Z),n.disposeIntermediateTensorInfo(at),n.disposeIntermediateTensorInfo(pt),n.disposeIntermediateTensorInfo(ut),n.disposeIntermediateTensorInfo(xt),n.disposeIntermediateTensorInfo(mt),n.disposeIntermediateTensorInfo(bt),n.disposeIntermediateTensorInfo(At),n.disposeIntermediateTensorInfo(_t),n.disposeIntermediateTensorInfo(Lt),n.disposeIntermediateTensorInfo(Kt),n.disposeIntermediateTensorInfo(jt),n.disposeIntermediateTensorInfo(Ne),{real:Ae,imag:tr}}function rJ(r,e,t){let o=new Float32Array(e*2);for(let n=0;n<e;n++){let s=0,i=0;for(let a=0;a<e;a++){let l=I.exponent(n*a,e,t),u=I.getComplexWithIndex(r,a);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}t&&(s/=e,i/=e),I.assignToTypedArray(o,s,i,n)}return o}function oJ(r){let{inputs:e,backend:t}=r,{input:o}=e,n=b.sizeFromShape(o.shape),s=o.shape[o.shape.length-1],i=n/s,a=Ht({inputs:{x:o},backend:t,attrs:{shape:[i,s]}}),l=Cx(a,!1,t),u=Ht({inputs:{x:l},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}var s_={kernelName:Wc,backendName:"cpu",kernelFunc:oJ};function ch(r){let{backend:e,attrs:t}=r,{shape:o,value:n,dtype:s}=t,i=s||b.inferDtype(n),a=b.getArrayFromDType(i,b.sizeFromShape(o));return nJ(a,n,i),e.makeTensorInfo(o,i,a)}var i_={kernelName:Uc,backendName:"cpu",kernelFunc:ch};function nJ(r,e,t){r.fill(e)}var a_={kernelName:Hc,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:o}=r,n=t,s=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(o.shape)),[i,a,l,u]=o.shape,c=n.data.get(o.dataId).values;for(let m=0;m<i;m++){let f=m*l*a*u;for(let h=0;h<a;h++){let g=h*(l*u);for(let d=0;d<l;d++){let x=d*u;for(let y=0;y<u;y++){let w=Math.round(l-d-1),N=f+g+x+y,v=c[N];if(w>=0&&w<l){let k=w*u,R=f+g+k+y;v=c[R]}s[N]=v}}}}return{dataId:n.write(s,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};function sJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,g=sS({inputs:{x:n,filter:s},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(i){let d=g;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let x=Ht({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});g=bs({inputs:{a:g,b:x},backend:t}),t.disposeIntermediateTensorInfo(x)}else g=bs({inputs:{a:g,b:i},backend:t});t.disposeIntermediateTensorInfo(d)}if(f){let d=g;if(c==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){let x=Ht({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});g=Mu(t,g,f,x,h),t.disposeIntermediateTensorInfo(x)}else g=Mu(t,g,f,a,h);t.disposeIntermediateTensorInfo(d)}return g}var l_={kernelName:tu,backendName:"cpu",kernelFunc:sJ};function iJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,g=iS({inputs:{x:n,filter:s},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(i){let d=g;g=bs({inputs:{a:g,b:i},backend:t}),t.disposeIntermediateTensorInfo(d)}if(f){let d=g;g=Mu(t,g,f,a,h),t.disposeIntermediateTensorInfo(d)}return g}var u_={kernelName:eu,backendName:"cpu",kernelFunc:iJ};function aJ(r){let{inputs:e,backend:t}=r,{params:o,indices:n}=e,s=b.sizeFromShape(o.shape),i=n.shape,a=i[i.length-1],[l,u,c,p]=I.prepareAndValidate(o,n);if(u===0)return t.makeTensorInfo(l,o.dtype,[]);let m=t.data.get(n.dataId).values,f=t.bufferSync(o),h=ix(m,f,o.dtype,u,a,c,p,o.shape,s);return t.makeTensorInfo(l,o.dtype,h.values)}var c_={kernelName:sd,backendName:"cpu",kernelFunc:aJ};function lJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,indices:s}=e,{axis:i,batchDims:a}=o;rt([n,s],"gatherV2");let l=b.parseAxisParam(i,n.shape)[0],u=t.data.get(s.dataId).values,c=n.shape[l];for(let N=0;N<u.length;++N){let v=u[N];b.assert(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let p=a;a==null&&(p=0);let m=b.sizeFromShape(s.shape),f=I.segment_util.collectGatherOpShapeInfo(n,s,l,p),h=Ht({inputs:{x:n},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=Ht({inputs:{x:s},backend:t,attrs:{shape:[f.batchSize,m/f.batchSize]}}),d=[f.batchSize,f.outerSize,m/f.batchSize,f.sliceSize],x=t.bufferSync(g),y=t.bufferSync(h),w=ax(y,x,d);return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),t.makeTensorInfo(f.outputShape,w.dtype,w.values)}var p_={kernelName:ka,backendName:"cpu",kernelFunc:lJ};function uJ(r){let{inputs:e,backend:t}=r,{input:o}=e,n=b.sizeFromShape(o.shape),s=o.shape[o.shape.length-1],i=n/s,a=Ht({inputs:{x:o},backend:t,attrs:{shape:[i,s]}}),l=Cx(a,!0,t),u=Ht({inputs:{x:l},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}var m_={kernelName:qc,backendName:"cpu",kernelFunc:uJ};var cJ=Et(ti,r=>Number.isFinite(r)?1:0,"bool"),f_={kernelName:ti,backendName:"cpu",kernelFunc:cJ};var pJ=Et(ei,r=>Math.abs(r)===1/0?1:0,"bool"),h_={kernelName:ei,backendName:"cpu",kernelFunc:pJ};var mJ=Et(ri,r=>Number.isNaN(r)?1:0,"bool"),d_={kernelName:ri,backendName:"cpu",kernelFunc:mJ};function fJ(r){let{backend:e,attrs:t}=r,{start:o,stop:n,num:s}=t,i=lx(o,n,s);return e.makeTensorInfo([i.length],"float32",i)}var g_={kernelName:id,backendName:"cpu",kernelFunc:fJ};var hJ=Et(ni,r=>Math.log1p(r)),x_={kernelName:ni,backendName:"cpu",kernelFunc:hJ};var dJ=Ut((r,e)=>r&&e),gJ=Zt(Xl,dJ,null,"bool"),y_={kernelName:Xl,backendName:"cpu",kernelFunc:gJ};var xJ=Et(Yl,r=>r?0:1,"bool"),b_={kernelName:Yl,backendName:"cpu",kernelFunc:xJ};var yJ=Ut((r,e)=>r||e),bJ=Zt(Zl,yJ,null,"bool"),w_={kernelName:Zl,backendName:"cpu",kernelFunc:bJ};function wJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{depthRadius:s,bias:i,alpha:a,beta:l}=o;rt(n,"LRN");let u=n.shape[3],c=u-1,p=t.data.get(n.dataId).values,m=b.sizeFromShape(n.shape),f=new Float32Array(m);function h(g){let d=g%u,x=g-d+Math.max(0,d-s),y=g-d+Math.min(d+s,c),w=0;for(;x<=y;x++){let N=p[x];w+=N*N}return w}for(let g=0;g<m;g++){let d=h(g),x=p[g]*Math.pow(i+a*d,-l);f[g]=x}return t.makeTensorInfo(n.shape,n.dtype,f)}var N_={kernelName:$a,backendName:"cpu",kernelFunc:wJ};function NJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,y:s,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=o;rt(i,"LRNGrad");let p=b.sizeFromShape(i.shape),m=i.shape[3],f=t.data.get(i.dataId).values,h=t.data.get(n.dataId).values,g=t.data.get(s.dataId).values,d=new Float32Array(p),x=p;for(let y=0;y<x;y++){let w=y%m,N=y-w+Math.max(0,w-a),v=y-w+Math.min(m,w+a+1),k=0;for(let R=N;R<v;R++)k+=Math.pow(h[R],2);k=u*k+l;for(let R=N;R<v;R++){let O=-2*u*c*h[R]*g[y]/k;y===R&&(O+=Math.pow(k,-c)),O*=f[y],d[R]+=O}}return t.makeTensorInfo(i.shape,n.dtype,d)}var T_={kernelName:jc,backendName:"cpu",kernelFunc:NJ};function lS(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{reductionIndices:s,keepDims:i}=o,a=t,l=n.shape,u=l.length,c=b.parseAxisParam(s,l),p=c,m=I.getAxesPermutation(p,u),f=a.data.get(n.dataId).values;if(m!=null){let N=new Array(u);for(let v=0;v<N.length;v++)N[v]=l[m[v]];f=om(f,l,n.dtype,m,N),p=I.getInnerMostAxes(p.length,u),l=N}rt(n,"max"),I.assertAxesAreInnerMostDims("max",p,u);let[h,g]=I.computeOutAndReduceShapes(l,p),d=b.sizeFromShape(g),x=ux(f,d,h,n.dtype),y=a.write(x,h,n.dtype),w=h;return i&&(w=I.expandShapeToKeepDim(h,c)),{dataId:y,shape:w,dtype:n.dtype}}var S_={kernelName:Aa,backendName:"cpu",kernelFunc:lS};function TJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e;rt(n,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,u=1;b.assert(I.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=I.computePool2DInfo(n.shape,s,i,u,a,l),p;if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))p=Pr({inputs:{x:n},backend:t});else{let m=t.data.get(n.dataId).values,f=b.computeStrides(n.shape),h=sm(m,n.shape,n.dtype,f,c,"max");p=t.makeTensorInfo(c.outShape,n.dtype,h.values)}return p}var v_={kernelName:Da,backendName:"cpu",kernelFunc:TJ};function SJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=o;rt(n,"maxPool3d");let c=I.computePool3DInfo(n.shape,s,i,1,a,l,u),p=t.data.get(n.dataId).values,m=vx(p,n.shape,n.dtype,b.computeStrides(n.shape),c,"max");return t.makeTensorInfo(m.shape,"float32",m.values)}var C_={kernelName:_a,backendName:"cpu",kernelFunc:SJ};function vJ(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=o;rt([n,s],"maxPool3DGrad");let c=I.computePool3DInfo(s.shape,i,a,1,l,u),p=t.bufferSync(s),m=wD(p,c),f=c.strideDepth,h=c.strideHeight,g=c.strideWidth,d=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,w=c.effectiveFilterDepth,N=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=w-1-c.padInfo.front,R=v-1-c.padInfo.left,O=N-1-c.padInfo.top,L=Nt(s.shape,"float32"),M=t.bufferSync(n);for(let H=0;H<c.batchSize;++H)for(let q=0;q<c.inChannels;++q)for(let K=0;K<c.inDepth;++K)for(let X=0;X<c.inHeight;++X)for(let Y=0;Y<c.inWidth;++Y){let Q=K-k,et=X-O,Z=Y-R,ot=0;for(let it=0;it<w;it+=d){let at=(Q+it)/f;if(!(at<0||at>=c.outDepth||Math.floor(at)!==at))for(let pt=0;pt<N;pt+=x){let ut=(et+pt)/h;if(!(ut<0||ut>=c.outHeight||Math.floor(ut)!==ut))for(let xt=0;xt<v;xt+=y){let mt=(Z+xt)/g;if(mt<0||mt>=c.outWidth||Math.floor(mt)!==mt)continue;let bt=w*N*v-1-m.get(H,at,ut,mt,q),At=it*N*v+pt*v+xt,Lt=bt===At?1:0;if(Lt===0)continue;let _t=M.get(H,at,ut,mt,q);ot+=_t*Lt}}}L.set(ot,H,K,X,Y,q)}return t.makeTensorInfo(L.shape,L.dtype,L.values)}var I_={kernelName:Yc,backendName:"cpu",kernelFunc:vJ};function CJ(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s,output:i}=e,a=s;rt([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,m=I.computePool2DInfo(a.shape,l,u,1,c,p),f=t.data.get(a.dataId).values,h=Nt(m.outShape,a.dtype,Sx(f,a.shape,a.dtype,m).values),g=m.strideHeight,d=m.strideWidth,x=m.dilationHeight,y=m.dilationWidth,w=m.effectiveFilterHeight,N=m.effectiveFilterWidth,v=N-1-m.padInfo.left,k=w-1-m.padInfo.top,R=Nt(a.shape,"float32"),O=t.data.get(n.dataId).values,L=Nt(n.shape,"float32",O);for(let M=0;M<m.batchSize;++M)for(let H=0;H<m.inChannels;++H)for(let q=0;q<m.inHeight;++q)for(let K=0;K<m.inWidth;++K){let X=q-k,Y=K-v,Q=0;for(let et=0;et<w;et+=x){let Z=(X+et)/g;if(!(Z<0||Z>=m.outHeight||Math.floor(Z)!==Z))for(let ot=0;ot<N;ot+=y){let it=(Y+ot)/d;if(it<0||it>=m.outWidth||Math.floor(it)!==it)continue;let at=w*N-1-h.get(M,Z,it,H),pt=et*N+ot,ut=at===pt?1:0;if(ut===0)continue;let xt=L.get(M,Z,it,H);Q+=xt*ut}}R.set(Q,M,q,K,H)}return t.makeTensorInfo(R.shape,R.dtype,R.values)}var k_={kernelName:Xc,backendName:"cpu",kernelFunc:CJ};function E_(r,e,t,o,n){let s=b.computeStrides(e),i=sm(r,e,t,s,n,"max"),a=Sx(r,e,t,n,!0,o);return[i.values,a.values]}var $_={kernelName:ad,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:o}=r,{filterSize:n,strides:s,pad:i,includeBatchInIndex:a}=e,l=t;rt(o,"MaxPoolWithArgmax");let u=l.data.get(o.dataId).values,c=I.computePool2DInfo(o.shape,n,s,[1,1],i),[p,m]=E_(u,o.shape,o.dtype,a,c),f=l.write(p,c.outShape,o.dtype),h=l.write(m,c.outShape,o.dtype);return[{dataId:f,shape:c.outShape,dtype:o.dtype},{dataId:h,shape:c.outShape,dtype:"int32"}]}};function IJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o,a=b.parseAxisParam(s,n.shape),u=I.computeOutAndReduceShapes(n.shape,a)[1],c=b.sizeFromShape(u),p=[],m=t.makeTensorInfo([],"float32",new Float32Array([c]));p.push(m);let f=Nn({inputs:{x:n},backend:t,attrs:{dtype:"float32"}});p.push(f);let h=lh({inputs:{a:f,b:m},backend:t});p.push(h);let g=Ki({inputs:{x:h},backend:t,attrs:{axis:s,keepDims:i}});return p.forEach(d=>t.disposeIntermediateTensorInfo(d)),g}var A_={kernelName:Ra,backendName:"cpu",kernelFunc:IJ};function kJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o;rt(n,"min");let a=b.parseAxisParam(s,n.shape),l=a,u=I.getAxesPermutation(l,n.shape.length),c=n;u!=null&&(c=Oe({inputs:{x:n},backend:t,attrs:{perm:u}}),l=I.getInnerMostAxes(l.length,n.shape.length)),I.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,m]=I.computeOutAndReduceShapes(c.shape,l),f=b.sizeFromShape(m),h=b.makeZerosTypedArray(b.sizeFromShape(p),c.dtype),g=t.data.get(c.dataId).values;for(let x=0;x<h.length;++x){let y=x*f,w=g[y];for(let N=0;N<f;++N){let v=g[y+N];(Number.isNaN(v)||v<w)&&(w=v)}h[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let d=t.makeTensorInfo(p,c.dtype,h);if(i){let x=I.expandShapeToKeepDim(p,a),y=Ht({inputs:{x:d},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(d),y}return d}var D_={kernelName:Fa,backendName:"cpu",kernelFunc:kJ};function EJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{paddings:s,mode:i}=o;rt(n,"mirrorPad");let a=s.map((w,N)=>w[0]+n.shape[N]+w[1]),l=s.map(w=>w[0]),u=s.map((w,N)=>w[0]+n.shape[N]),c=i==="reflect"?0:1,p=t.data.get(n.dataId).values,m=n.shape.length,f=b.computeStrides(n.shape),h=b.sizeFromShape(a),g=a.length,d=b.computeStrides(a),x=b.getTypedArrayFromDType(n.dtype,h);for(let w=0;w<h;w++){let N=b.indexToLoc(w,g,d);for(let k=0;k<g;k++)N[k]<l[k]?N[k]=l[k]*2-N[k]-c:N[k]>=u[k]&&(N[k]=(u[k]-1)*2-N[k]+c);N=N.map((k,R)=>k-l[R]);let v=b.locToIndex(N,m,f);x[w]=p[v]}return{dataId:t.write(x,a,n.dtype),shape:a,dtype:n.dtype}}var __={kernelName:Oa,backendName:"cpu",kernelFunc:EJ};var $J=Ut((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),AJ=Zt(ai,$J),R_={kernelName:ai,backendName:"cpu",kernelFunc:AJ};var O_=Ml(Dp());function uS(r){let{inputs:e,backend:t,attrs:o}=r,{logits:n}=e,{dim:s}=o,i=n.shape.length,a=s;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);let l=b.parseAxisParam([a],n.shape),u=lS({inputs:{x:n},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=I.expandShapeToKeepDim(u.shape,l),p=Ht({inputs:{x:u},backend:t,attrs:{shape:c}}),m=ih({inputs:{a:n,b:p},backend:t}),f=AT({inputs:{x:m},backend:t}),h=Ki({inputs:{x:f},backend:t,attrs:{axis:l,keepDims:!1}}),g=Ht({inputs:{x:h},backend:t,attrs:{shape:c}}),d=lh({inputs:{a:f,b:g},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),d}var F_={kernelName:Ja,backendName:"cpu",kernelFunc:uS};function DJ(r){let{inputs:e,backend:t,attrs:o}=r,{logits:n}=e,{numSamples:s,seed:i,normalized:a}=o;rt(n,"multinomial");let l=a?n:uS({inputs:{logits:n},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=t.data.get(l.dataId).values,m=[u,s],f=b.makeZerosTypedArray(b.sizeFromShape(m),"int32");for(let h=0;h<u;++h){let g=h*c,d=new Float32Array(c-1);d[0]=p[g];for(let w=1;w<d.length;++w)d[w]=d[w-1]+p[g+w];let x=O_.alea(i.toString()),y=h*s;for(let w=0;w<s;++w){let N=x();f[y+w]=d.length;for(let v=0;v<d.length;v++)if(N<d[v]){f[y+w]=v;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(m,"int32",f)}var L_={kernelName:ld,backendName:"cpu",kernelFunc:DJ};var _J=Lr.nonMaxSuppressionV3Impl;function RJ(r){let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=o;rt(n,"NonMaxSuppression");let u=t.data.get(n.dataId).values,c=t.data.get(s.dataId).values,{selectedIndices:p}=_J(u,c,i,a,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var P_={kernelName:Zc,backendName:"cpu",kernelFunc:RJ};var FJ=Lr.nonMaxSuppressionV4Impl;function OJ(r){let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=o;rt(n,"NonMaxSuppressionPadded");let c=t.data.get(n.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=FJ(c,p,i,a,l,u);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var z_={kernelName:Jc,backendName:"cpu",kernelFunc:OJ};var LJ=Lr.nonMaxSuppressionV5Impl;function PJ(r){let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o;rt(n,"NonMaxSuppressionWithScore");let c=t.data.get(n.dataId).values,p=t.data.get(s.dataId).values,m=i,f=a,h=l,g=u,{selectedIndices:d,selectedScores:x}=LJ(c,p,m,f,h,g);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var B_={kernelName:Qc,backendName:"cpu",kernelFunc:PJ};function zJ(r){let{inputs:e,backend:t,attrs:o}=r,{indices:n}=e,{dtype:s,depth:i,onValue:a,offValue:l}=o;rt(n,"oneHot");let u=b.sizeFromShape(n.shape),c=new Float32Array(u*i);c.fill(l);let p=t.data.get(n.dataId).values;for(let m=0;m<u;++m)p[m]>=0&&p[m]<i&&(c[m*i+p[m]]=a);return t.makeTensorInfo([...n.shape,i],s,c)}var M_={kernelName:za,backendName:"cpu",kernelFunc:zJ};function ph(r){let{inputs:e,backend:t}=r,{x:o}=e;if(o.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(o.dtype==="complex64"){let n=wn({inputs:{input:o},backend:t}),s=ph({inputs:{x:n},backend:t}),i=ws({inputs:{input:o},backend:t}),a=ph({inputs:{x:i},backend:t}),l=cr({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return ch({backend:t,attrs:{shape:o.shape,value:0,dtype:o.dtype}})}var V_={kernelName:el,backendName:"cpu",kernelFunc:ph};function G_(r){let{inputs:e,backend:t}=r,{x:o}=e;if(o.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(o.dtype==="complex64"){let n=wn({inputs:{input:o},backend:t}),s=G_({inputs:{x:n},backend:t}),i=ws({inputs:{input:o},backend:t}),a=ph({inputs:{x:i},backend:t}),l=cr({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return ch({backend:t,attrs:{shape:o.shape,value:1,dtype:o.dtype}})}var W_={kernelName:Pa,backendName:"cpu",kernelFunc:G_};function cS(r){let{inputs:e,backend:t,attrs:o}=r,{axis:n}=o;if(e.length===1)return im({inputs:{input:e[0]},backend:t,attrs:{dim:n}});let s=e[0].shape,i=e[0].dtype;e.forEach(c=>{b.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=e.map(c=>{let p=im({inputs:{input:c},backend:t,attrs:{dim:n}});return a.push(p),p}),u=yl({inputs:l,backend:t,attrs:{axis:n}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}var U_={kernelName:Ba,backendName:"cpu",kernelFunc:cS};function BJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{paddings:s,constantValue:i}=o;rt(n,"pad");let a=s.map((y,w)=>y[0]+n.shape[w]+y[1]),l=s.map(y=>y[0]),u=t.data.get(n.dataId).values,c=b.sizeFromShape(n.shape),p=n.shape.length,m=b.computeStrides(n.shape),f=b.sizeFromShape(a),h=a.length,g=b.computeStrides(a),d=b.getTypedArrayFromDType(n.dtype,f);i!==0&&d.fill(i);for(let y=0;y<c;y++){let N=b.indexToLoc(y,p,m).map((k,R)=>k+l[R]),v=b.locToIndex(N,h,g);d[v]=u[y]}return{dataId:t.write(d,a,n.dtype),shape:a,dtype:n.dtype}}var Ix={kernelName:Ma,backendName:"cpu",kernelFunc:BJ};var MJ=Ut((r,e)=>Math.pow(r,e)),VJ=Zt(ui,MJ),H_={kernelName:ui,backendName:"cpu",kernelFunc:VJ};function GJ(r){let{inputs:e,backend:t,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:s,indices:i}=e,{outputRaggedRank:a}=o,l=n.map(x=>t.data.get(x.dataId).values),u=n.map(x=>x.shape),c=t.data.get(s.dataId).values,p=t.data.get(i.dataId).values,[m,f,h]=cx(l,u,c,s.shape,s.dtype,p,i.shape,a),g=m.map(x=>t.makeTensorInfo([x.length],"int32",x)),d=t.makeTensorInfo(h,s.dtype,f);return g.concat([d])}var q_={kernelName:ud,backendName:"cpu",kernelFunc:GJ};function WJ(r){let{inputs:e,backend:t}=r,{starts:o,limits:n,deltas:s}=e,i=t.data.get(o.dataId).values,a=t.data.get(n.dataId).values,l=t.data.get(s.dataId).values,[u,c]=px(i,o.shape,o.dtype,a,n.shape,l,s.shape),p=t.makeTensorInfo([u.length],"int32",u),m=t.makeTensorInfo([c.length],o.dtype,c);return[p,m]}var K_={kernelName:cd,backendName:"cpu",kernelFunc:WJ};function UJ(r){let{inputs:e,backend:t,attrs:o}=r,{shape:n,values:s,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=o,u=t.data.get(n.dataId).values,c=t.data.get(s.dataId).values,p=t.data.get(i.dataId).values,m=a.map(d=>t.data.get(d.dataId).values),f=a.map(d=>d.shape),[h,g]=mx(u,n.shape,c,s.shape,s.dtype,p,i.shape,m,f,l);return t.makeTensorInfo(h,s.dtype,g)}var j_={kernelName:pd,backendName:"cpu",kernelFunc:UJ};function HJ(r){let{backend:e,attrs:t}=r,{start:o,stop:n,dtype:s,step:i}=t,a=fx(o,n,i,s);return e.makeTensorInfo([a.length],s,a)}var X_={kernelName:tp,backendName:"cpu",kernelFunc:HJ};var qJ=Et(ci,r=>1/r),Y_={kernelName:ci,backendName:"cpu",kernelFunc:qJ};function KJ(r){let{inputs:e,backend:t,attrs:o}=r,{images:n}=e,{alignCorners:s,halfPixelCenters:i,size:a}=o;rt(n,"resizeBilinear");let l=b.computeStrides(n.shape),[u,c]=a,[p,m,f,h]=n.shape,g=t.data.get(n.dataId).values,d=new Float32Array(b.sizeFromShape([p,u,c,h])),x=[s&&u>1?m-1:m,s&&c>1?f-1:f],y=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=0,N=x[0]/y[0],v=x[1]/y[1];for(let k=0;k<p;k++)for(let R=0;R<u;R++){let O;i?O=N*(R+.5)-.5:O=N*R;let L=Math.max(0,Math.floor(O)),M=O-L,H=Math.min(m-1,Math.ceil(O)),q=k*l[0]+L*l[1],K=k*l[0]+H*l[1];for(let X=0;X<c;X++){let Y;i?Y=v*(X+.5)-.5:Y=v*X;let Q=Math.max(0,Math.floor(Y)),et=Y-Q,Z=Math.min(f-1,Math.ceil(Y)),ot=q+Q*l[2],it=K+Q*l[2],at=q+Z*l[2],pt=K+Z*l[2];for(let ut=0;ut<h;ut++){let xt=g[ot+ut],mt=g[it+ut],bt=g[at+ut],At=g[pt+ut],Lt=xt+(bt-xt)*et,_t=mt+(At-mt)*et,Kt=Lt+(_t-Lt)*M;d[w++]=Kt}}}return t.makeTensorInfo([p,u,c,h],"float32",d)}var Z_={kernelName:Ha,backendName:"cpu",kernelFunc:KJ};function jJ(r){let{inputs:e,backend:t,attrs:o}=r,{images:n,dy:s}=e,{alignCorners:i}=o;rt([s,n],"resizeBilinearGrad");let a=b.computeStrides(n.shape),[l,u,c,p]=n.shape,[,m,f]=s.shape,h=new Float32Array(l*u*c*p),g=[i&&m>1?u-1:u,i&&f>1?c-1:c],d=[i&&m>1?m-1:m,i&&f>1?f-1:f],x=g[0]/d[0],y=g[1]/d[1],w=t.data.get(s.dataId).values,N=0;for(let v=0;v<l;v++){let k=v*a[0];for(let R=0;R<m;R++){let O=R*x,L=Math.floor(O),M=Math.min(Math.ceil(O),u-1),H=k+L*a[1],q=k+M*a[1],K=O-L,X=1-K;for(let Y=0;Y<f;Y++){let Q=Y*y,et=Math.floor(Q),Z=Math.min(Math.ceil(Q),c-1),ot=Q-et,it=1-ot,at=H+et*a[2],pt=H+Z*a[2],ut=q+et*a[2],xt=q+Z*a[2],mt=X*it,bt=X*ot,At=K*it,Lt=K*ot;for(let _t=0;_t<p;_t++){let Kt=w[N++];h[at+_t]+=Kt*mt,h[pt+_t]+=Kt*bt,h[ut+_t]+=Kt*At,h[xt+_t]+=Kt*Lt}}}}return t.makeTensorInfo([l,c,u,p],"float32",h)}var J_={kernelName:op,backendName:"cpu",kernelFunc:jJ};function XJ(r){let{inputs:e,backend:t,attrs:o}=r,{images:n}=e,{alignCorners:s,halfPixelCenters:i,size:a}=o;rt(n,"resizeNearestNeighbor");let l=b.computeStrides(n.shape),[u,c]=a,[p,m,f,h]=n.shape,g=t.data.get(n.dataId).values,d=new Float32Array(p*u*c*h),x=[s&&u>1?m-1:m,s&&c>1?f-1:f],y=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=x[0]/y[0],N=x[1]/y[1],v=0;for(let k=0;k<p;k++){let R=k*l[0];for(let O=0;O<u;O++){let L=i?w*(O+.5):w*O,M=Math.min(m-1,s?Math.round(L):Math.floor(L));i&&(M=Math.max(0,M));let H=R+M*l[1];for(let q=0;q<c;q++){let K=i?N*(q+.5):N*q,X=Math.min(f-1,s?Math.round(K):Math.floor(K));i&&(X=Math.max(0,X));let Y=H+X*l[2];for(let Q=0;Q<h;Q++){let et=g[Y+Q];d[v++]=et}}}}return t.makeTensorInfo([p,u,c,h],n.dtype,d)}var Q_={kernelName:Ua,backendName:"cpu",kernelFunc:XJ};function YJ(r){let{inputs:e,backend:t,attrs:o}=r,{images:n,dy:s}=e,{alignCorners:i}=o;rt([s,n],"resizeNearestNeighborGrad");let a=b.computeStrides(n.shape),l=b.computeStrides(s.shape),[u,c,p,m]=n.shape,[,f,h]=s.shape,g=new Float32Array(u*c*p*m),d=t.data.get(s.dataId).values,x=[i&&f>1?c-1:c,i&&h>1?p-1:p],y=[i&&f>1?f-1:f,i&&h>1?h-1:h],w=x[0]/y[0],N=x[1]/y[1],v=1/w,k=1/N,R=Math.ceil(v)*2+2,O=Math.ceil(k)*2+2;for(let L=0;L<u;L++){let M=L*a[0];for(let H=0;H<c;H++){let q=M+H*a[1],K=Math.floor(H*v),X=Math.floor(K-R/2);for(let Y=0;Y<p;Y++){let Q=q+Y*a[2],et=Math.floor(Y*k),Z=Math.floor(et-O/2);for(let ot=0;ot<m;ot++){let it=0;for(let at=0;at<R;at++){let pt=at+X;if(pt<0||pt>=f)continue;let ut=M+pt*l[1],xt=pt*w,mt=Math.min(c-1,i?Math.round(xt):Math.floor(xt));if(H===mt)for(let bt=0;bt<O;bt++){let At=bt+Z;if(At<0||At>=h)continue;let Lt=ut+At*l[2],_t=At*N,Kt=Math.min(p-1,i?Math.round(_t):Math.floor(_t));Y===Kt&&(it+=d[Lt+ot])}}g[Q+ot]=it}}}}return t.makeTensorInfo(n.shape,n.dtype,g)}var tR={kernelName:rp,backendName:"cpu",kernelFunc:YJ};function ZJ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{dims:s}=o;rt(n,"reverse");let i=n.shape.length,a=b.parseAxisParam(s,n.shape);if(i===0)return Pr({inputs:{x:n},backend:t});let l=new ue(n.shape,n.dtype),u=t.bufferSync(n);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),m=p.slice();a.forEach(f=>m[f]=n.shape[f]-1-m[f]),l.set(u.get(...m),...p)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}var eR={kernelName:qa,backendName:"cpu",kernelFunc:ZJ};var rR={kernelName:up,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:o}=r,{radians:n,fillValue:s,center:i}=e,a=t,l=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(o.shape)),[u,c,p,m]=o.shape,[f,h]=I.getImageCenter(i,c,p),g=255,d=Math.sin(n),x=Math.cos(n),y=a.data.get(o.dataId).values;for(let N=0;N<u;N++){let v=N*p*c*m;for(let k=0;k<c;k++){let R=k*(p*m);for(let O=0;O<p;O++){let L=O*m;for(let M=0;M<m;M++){let H=[u,k,O,M],q=H[2],K=H[1],X=(q-f)*x-(K-h)*d,Y=(q-f)*d+(K-h)*x;X=Math.round(X+f),Y=Math.round(Y+h);let Q=s;if(typeof s!="number"&&(M===3?Q=g:Q=s[M]),X>=0&&X<p&&Y>=0&&Y<c){let Z=Y*(p*m),ot=X*m,it=v+Z+ot+M;Q=y[it]}let et=v+R+L+M;l[et]=Q}}}}return{dataId:a.write(l,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var JJ=Et(fi,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2===0?e:e+1}),oR={kernelName:fi,backendName:"cpu",kernelFunc:JJ};function QJ(r){let{inputs:e,backend:t,attrs:o}=r,{indices:n,updates:s}=e,{shape:i}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=I.calculateShapes(s,n,i),m=!0,f=t.bufferSync(n),h=t.bufferSync(s),g=jn(f,h,i,p,u,l,a,c,0,m);return t.makeTensorInfo(i,g.dtype,g.values)}var nR={kernelName:md,backendName:"cpu",kernelFunc:QJ};function tQ(r,e){let t=0,o=r.length,n=0;for(;t<o;)n=Math.floor((t+o)/2),r[n]<e?t=n+1:o=n;return o}function eQ(r,e){let t=0,o=r.length,n=0;for(;t<o;)n=Math.floor((t+o)/2),r[n]<=e?t=n+1:o=n;return o}function sR(r,e,t,o,n,s){let i=b.getArrayFromDType("int32",t*n);for(let a=0;a<t;++a){let l=r.slice(a*o,(a+1)*o),u=a*n;for(let c=0;c<n;++c)i[u+c]=s==="left"?tQ(l,e[c+u]):eQ(l,e[c+u])}return i}function rQ(r){let{inputs:e,backend:t,attrs:o}=r,{sortedSequence:n,values:s}=e,{side:i}=o,a=t.data.get(n.dataId).values,l=t.data.get(s.dataId).values,u=sR(a,l,n.shape[0],n.shape[1],s.shape[1],i);return t.makeTensorInfo(s.shape,"int32",u)}var iR={kernelName:hd,backendName:"cpu",kernelFunc:rQ};function oQ(r){let{inputs:e,backend:t}=r,{condition:o,t:n,e:s}=e;rt([o,n,s],"select");let i=o.shape.length,a=t.data.get(o.dataId).values,l=t.data.get(n.dataId).values,u=t.data.get(s.dataId).values,c=er(n.dtype,s.dtype),p=b.makeZerosTypedArray(b.sizeFromShape(n.shape),c),m=0,f=i===0||i>1||n.shape.length===1?1:b.sizeFromShape(n.shape.slice(1));for(let h=0;h<a.length;h++)for(let g=0;g<f;g++)a[h]===1?p[m++]=l[h]:p[m++]=u[h];return t.makeTensorInfo(n.shape,c,p)}var aR={kernelName:Ka,backendName:"cpu",kernelFunc:oQ};var nQ=I.SELU_SCALEALPHA,sQ=I.SELU_SCALE,iQ=Et(di,r=>r>=0?sQ*r:nQ*(Math.exp(r)-1)),lR={kernelName:di,backendName:"cpu",kernelFunc:iQ};var aQ=Et(yi,r=>r<0?-1:r>0?1:0),uR={kernelName:yi,backendName:"cpu",kernelFunc:aQ};var lQ=Et(gi,r=>Math.sin(r)),cR={kernelName:gi,backendName:"cpu",kernelFunc:lQ};var uQ=Et(xi,r=>Math.sinh(r)),pR={kernelName:xi,backendName:"cpu",kernelFunc:uQ};var cQ=11920928955078125e-23,mR=Math.log(cQ)+2,pQ=Et(wi,r=>{let e=r>-mR,t=r<mR,o=Math.exp(r),n;return t?n=o:e?n=r:n=Math.log(1+o),n}),fR={kernelName:wi,backendName:"cpu",kernelFunc:pQ};function mQ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockShape:s,paddings:i}=o;rt([n],"spaceToBatchND");let a=b.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let k=1+s.length;k<n.shape.length;++k)l.push([0,0]);let u=Ix.kernelFunc({inputs:{x:n},backend:t,attrs:{paddings:l,constantValue:0}}),c=I.getReshaped(u.shape,s,a,!1),p=I.getPermuted(c.length,s.length,!1),m=I.getReshapedPermuted(u.shape,s,a,!1),g=Ht({inputs:{x:u},backend:t,attrs:{shape:c}}),y=Oe({inputs:{x:g},backend:t,attrs:{perm:p}}),v=Ht({inputs:{x:y},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),v}var hR={kernelName:Ya,backendName:"cpu",kernelFunc:mQ};function fQ(r){let{inputs:e,backend:t}=r,{indices:o,values:n,denseShape:s,defaultValue:i}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=t.data.get(o.dataId).values,l=t.data.get(n.dataId).values,u=t.data.get(s.dataId).values,c=t.data.get(i.dataId).values[0],[p,m,f,h,g]=hx(a,o.shape,o.dtype,l,n.dtype,u,c);return[t.makeTensorInfo(m,o.dtype,p),t.makeTensorInfo([m[0]],n.dtype,f),t.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(d=>Number(d)))),t.makeTensorInfo([g.length],o.dtype,new Int32Array(g))]}var dR={kernelName:dd,backendName:"cpu",kernelFunc:fQ};function hQ(r){let{inputs:e,backend:t}=r,{inputIndices:o,inputShape:n,newShape:s}=e;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(t.data.get(n.dataId).values),a=t.data.get(o.dataId).values,l=Array.from(t.data.get(s.dataId).values),[u,c,p]=dx(a,o.shape,o.dtype,i,l);return[t.makeTensorInfo(c,o.dtype,u),t.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var gR={kernelName:gd,backendName:"cpu",kernelFunc:hQ};function dQ(r){let{inputs:e,backend:t}=r,{data:o,indices:n,segmentIds:s}=e;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=t.data.get(o.dataId).values,a=t.data.get(n.dataId).values,l=t.data.get(s.dataId).values,[u,c]=nm(i,o.shape,o.dtype,a,l,!0);return t.makeTensorInfo(c,o.dtype,u)}var xR={kernelName:xd,backendName:"cpu",kernelFunc:dQ};function gQ(r){let{inputs:e,backend:t}=r,{data:o,indices:n,segmentIds:s}=e;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=t.data.get(o.dataId).values,a=t.data.get(n.dataId).values,l=t.data.get(s.dataId).values,[u,c]=nm(i,o.shape,o.dtype,a,l);return t.makeTensorInfo(c,o.dtype,u)}var yR={kernelName:yd,backendName:"cpu",kernelFunc:gQ};function xQ(r){let{inputs:e,backend:t,attrs:o}=r,{sparseIndices:n,sparseValues:s,defaultValue:i}=e,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=I.calculateShapes(s,n,a),f=!1,h=t.bufferSync(n),g;switch(s.dtype){case"bool":{let d=t.bufferSync(s),x=!!t.data.get(i.dataId).values[0];g=jn(h,d,a,m,c,u,l,p,x,f);break}case"float32":{let d=t.bufferSync(s),x=t.data.get(i.dataId).values[0];g=jn(h,d,a,m,c,u,l,p,x,f);break}case"int32":{let d=t.bufferSync(s),x=t.data.get(i.dataId).values[0];g=jn(h,d,a,m,c,u,l,p,x,f);break}case"string":{let d=t.bufferSync(s),x=b.decodeString(t.data.get(i.dataId).values[0]);g=jn(h,d,a,m,c,u,l,p,x,f);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return t.makeTensorInfo(a,g.dtype,g.values)}var bR={kernelName:bd,backendName:"cpu",kernelFunc:xQ};function yQ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{numOrSizeSplits:s,axis:i}=o,a=b.parseAxisParam(i,n.shape)[0],l=I.prepareSplitSize(n,s,a),u=new Array(n.shape.length).fill(0),c=n.shape.slice();return l.map(p=>{let m=[...c];m[a]=p;let f=Sn({inputs:{x:n},backend:t,attrs:{begin:u,size:m}});return u[a]+=p,f})}var wR={kernelName:Za,backendName:"cpu",kernelFunc:yQ};var NR={kernelName:np,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,o=e;rt(t,"square");let n=o.data.get(t.dataId).values,s=new Float32Array(n.length);for(let a=0;a<n.length;++a){let l=n[a];s[a]=l*l}return{dataId:o.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var bQ=Et(Ii,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),TR={kernelName:Ii,backendName:"cpu",kernelFunc:bQ};function wQ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{begin:s,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=o;rt(n,"stridedSlice");let{finalShapeSparse:f,finalShape:h,isIdentity:g,sliceDim0:d,isSimpleSlice:x,begin:y,end:w,strides:N}=gr.sliceInfo(n.shape,s,i,a,l,u,c,p,m),v;if(g)v=Ht({inputs:{x:n},backend:t,attrs:{shape:h}});else if(d||x){b.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let k=gr.computeOutShape(y,w,N),R=Sn({inputs:{x:n},backend:t,attrs:{begin:y,size:k}});v=Ht({inputs:{x:R},backend:t,attrs:{shape:h}}),t.disposeIntermediateTensorInfo(R)}else{let k=t.bufferSync(n),R=gx(f,k,N,y);v=t.makeTensorInfo(h,R.dtype,R.values)}return v}var SR={kernelName:sp,backendName:"cpu",kernelFunc:wQ};function NQ(r){let{inputs:e,backend:t,attrs:o}=r,{separator:n,nGramWidths:s,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=e,m=t.data.get(c.dataId).values,f=t.data.get(p.dataId).values,[h,g]=xx(m,f,n,s,i,a,l,u);return[t.makeTensorInfo([h.length],"string",h),t.makeTensorInfo(p.shape,"int32",g)]}var vR={kernelName:wd,backendName:"cpu",kernelFunc:NQ};function TQ(r){let{inputs:e,backend:t,attrs:o}=r,{skipEmpty:n}=o,{input:s,delimiter:i}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values[0],[u,c,p]=yx(a,l,n),m=c.length;return[t.makeTensorInfo([m,2],"int32",u),t.makeTensorInfo([m],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(p))]}var CR={kernelName:Nd,backendName:"cpu",kernelFunc:TQ};function SQ(r){let{inputs:e,backend:t,attrs:o}=r,{numBuckets:n}=o,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=t.data.get(s.dataId).values,a=bx(i,n);return t.makeTensorInfo(s.shape,"int32",a)}var IR={kernelName:Td,backendName:"cpu",kernelFunc:SQ};var vQ=Et(vi,r=>Math.tan(r)),kR={kernelName:vi,backendName:"cpu",kernelFunc:vQ};var CQ=Et(Ci,r=>Math.tanh(r)),ER={kernelName:Ci,backendName:"cpu",kernelFunc:CQ};function IQ(r){let{inputs:e,backend:t}=r,{tensor:o,indices:n,updates:s}=e,{sliceRank:i,numUpdates:a,sliceSize:l,strides:u,outputSize:c}=I.calculateShapes(s,n,o.shape),p=!1,m=t.bufferSync(n),f=t.bufferSync(s),h=t.bufferSync(o),g=jn(m,f,o.shape,c,l,a,i,u,h,p);return t.makeTensorInfo(o.shape,g.dtype,g.values)}var $R={kernelName:fd,backendName:"cpu",kernelFunc:IQ};function kQ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{reps:s}=o;rt(n,"tile");let i=wx(t.bufferSync(n),s);return t.makeTensorInfo(i.shape,i.dtype,i.values)}var AR={kernelName:ls,backendName:"cpu",kernelFunc:kQ};function EQ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{k:s,sorted:i}=o;rt(n,"topk");let a=t.data.get(n.dataId).values,[l,u]=Nx(a,n.shape,n.dtype,s,i);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var DR={kernelName:ip,backendName:"cpu",kernelFunc:EQ};function $Q(r){let{inputs:e,attrs:t,backend:o}=r,{image:n,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=t,[c,p,m,f]=n.shape,[h,g]=u??[p,m],d=[c,h,g,f],x=b.computeStrides(n.shape),y=x[0],w=x[1],N=x[2],v=b.computeStrides(d),k=v[0],R=v[1],O=v[2],L=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(d));L.fill(l);let M=o.data.get(n.dataId).values,H=o.data.get(s.dataId).values;for(let K=0;K<c;++K){let X=s.shape[0]===1?H:H.subarray(K*8,K*8+8);for(let Y=0;Y<h;++Y)for(let Q=0;Q<g;++Q)for(let et=0;et<f;++et){let Z,ot=X[6]*Q+X[7]*Y+1;if(ot===0)continue;let it=(X[0]*Q+X[1]*Y+X[2])/ot,at=(X[3]*Q+X[4]*Y+X[5])/ot,pt=_R(it,m,a),ut=_R(at,p,a);switch(i){case"nearest":Z=FQ(M,p,m,y,w,N,K,ut,pt,et,l);break;case"bilinear":Z=OQ(M,p,m,y,w,N,K,ut,pt,et,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let xt=K*k+Y*R+Q*O+et;L[xt]=Z}return o.makeTensorInfo(d,n.dtype,L)}return{dataId:o.write(L,d,n.dtype),shape:n.shape,dtype:n.dtype}}var RR={kernelName:ap,backendName:"cpu",kernelFunc:$Q};function _R(r,e,t){switch(t){case"reflect":return AQ(r,e);case"wrap":return DQ(r,e);case"nearest":return RQ(r,e);case"constant":default:return _Q(r,e)}}function AQ(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let o=2*e;t<o&&(t=o*Math.trunc(-t/o)+t),t=t<-e?t+o:-t-1}else if(t>e-1)if(e<=1)t=0;else{let o=2*e;t-=o*Math.trunc(t/o),t>=e&&(t=o-t-1)}return b.clamp(0,t,e-1)}function DQ(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let o=e-1;t+=e*(Math.trunc(-t/o)+1)}else if(t>e-1)if(e<=1)t=0;else{let o=e-1;t-=e*Math.trunc(t/o)}return b.clamp(0,t,e-1)}function _Q(r,e){return r}function RQ(r,e){return b.clamp(0,r,e-1)}function mh(r,e,t,o,n,s,i,a,l,u,c){let p=i*o+a*n+l*s+u;return 0<=a&&a<e&&0<=l&&l<t?r[p]:c}function FQ(r,e,t,o,n,s,i,a,l,u,c){let p=Math.round(a),m=Math.round(l);return mh(r,e,t,o,n,s,i,p,m,u,c)}function OQ(r,e,t,o,n,s,i,a,l,u,c){let p=Math.floor(a),m=Math.floor(l),f=p+1,h=m+1,g=(h-l)*mh(r,e,t,o,n,s,i,p,m,u,c)+(l-m)*mh(r,e,t,o,n,s,i,p,h,u,c),d=(h-l)*mh(r,e,t,o,n,s,i,f,m,u,c)+(l-m)*mh(r,e,t,o,n,s,i,f,h,u,c);return(f-a)*g+(a-p)*d}function LQ(r){let{inputs:e,attrs:t,backend:o}=r,{axis:n}=t,{x:s}=e;rt(s,"unique");let i=o.data.get(s.dataId).values,{outputValues:a,outputShape:l,indices:u}=Tx(i,n,s.shape,s.dtype);return[o.makeTensorInfo(l,s.dtype,a),o.makeTensorInfo([u.length],"int32",u)]}var FR={kernelName:lp,backendName:"cpu",kernelFunc:LQ};function PQ(r){let{inputs:e,backend:t,attrs:o}=r,{value:n}=e,{axis:s}=o;s<0&&(s+=n.shape.length);let i=n.shape.length,a=n.shape[s],l=new Array(i-1),u=0;for(let f=0;f<i;f++)f!==s&&(l[u++]=n.shape[f]);let c=new Array(i).fill(0),p=n.shape.slice();p[s]=1;let m=new Array(a);for(let f=0;f<m.length;f++){c[s]=f;let h=Sn({inputs:{x:n},backend:t,attrs:{begin:c,size:p}});m[f]=Ht({inputs:{x:h},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(h)}return m}var OR={kernelName:Qa,backendName:"cpu",kernelFunc:PQ};function zQ(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,segmentIds:s}=e,{numSegments:i}=o;rt(n,"unsortedSegmentSum");let a=n.shape.length,l=s.shape.length,u=[],c=[],p=a-l,m=s;for(let h=0;h<p;++h){let g=im({inputs:{input:m},backend:t,attrs:{dim:h+1}});m=g,c.push(g)}for(let h=0;h<i;++h){let g=b.createScalarValue(h,"int32"),d=t.makeTensorInfo([],"int32",g),x=ET({inputs:{a:d,b:m},backend:t}),y=Nn({inputs:{x},backend:t,attrs:{dtype:"float32"}}),w=Bu({inputs:{a:y,b:n},backend:t}),N=Ki({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});u.push(N),c.push(d),c.push(x),c.push(y),c.push(w),c.push(N)}let f=cS({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var LR={kernelName:tl,backendName:"cpu",kernelFunc:zQ};var BQ=[aD,dA,lD,uD,wA,cD,pD,mD,fD,hD,dD,gD,xD,yD,bD,ND,TD,SD,vD,iD,CD,ID,kD,NA,ED,bA,TA,$D,gA,AD,_D,RD,FD,OD,LD,PD,zD,BD,MD,VD,GD,WD,UD,HD,qD,KD,jD,XD,YD,ZD,JD,QD,e_,tD,r_,SA,o_,vA,n_,CA,s_,i_,a_,IA,kA,l_,u_,c_,p_,EA,$A,xA,m_,DD,f_,h_,d_,eD,AA,DA,g_,_A,x_,y_,b_,w_,N_,T_,S_,RA,v_,C_,I_,k_,$_,A_,D_,FA,__,R_,L_,OA,LA,P_,z_,B_,PA,M_,W_,U_,Ix,H_,rD,BA,q_,K_,j_,X_,yA,uh,Y_,oD,nD,sD,Z_,J_,Q_,tR,eR,rR,oR,UA,nR,iR,aR,lR,qA,uR,cR,pR,KA,F_,fR,hR,dR,gR,xR,yR,bR,wR,XA,NR,YA,ZA,TR,SR,vR,CR,IR,JA,t_,kR,ER,$R,AR,DR,RR,zA,FR,OR,LR,V_];for(let r of BQ)vd(r);var Vu={},kx={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function PR(r,e){Vu[r]=e}function Fo(r,e){if(!(r in Vu)||e!=null){let o=VQ(r,e);if(o!==null)Vu[r]=o;else return console.log("Could not get context for WebGL version",r),null}let t=Vu[r];return t==null||t.isContextLost()?(delete Vu[r],Fo(r)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Vu[r])}function MQ(r){if(!W().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function VQ(r,e){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=e??MQ(r);return t.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete Vu[r]},!1),W().getBool("SOFTWARE_WEBGL_ENABLED")&&(kx.failIfMajorPerformanceCaveat=!1),r===1?t.getContext("webgl",kx)||t.getContext("experimental-webgl",kx):t.getContext("webgl2",kx)}var Gu=function(r){return r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH",r}(Gu||{}),Hr=function(r){return r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD",r}(Hr||{}),zr=function(r){return r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",r}(zr||{});function Wu(r,e){return[e,r]}function zR(r,e){return r*e}function fh(r){let e=b.sizeFromShape(r),t=Math.ceil(e/4);return b.sizeToSquarishShape(t)}function Ns(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function BR(r,e){let[t,o]=Ns(r,e);return t*o*4}function hh(r,e){let t=r,o,n,s,i,a,l,u,c,p,m;return W().getNumber("WEBGL_VERSION")===2?(o=t.R32F,n=t.R16F,s=t.RGBA16F,i=t.RGBA32F,a=t.RED,u=4,c=1,p=t.HALF_FLOAT,m=t.FLOAT,l=t.RGBA8):(o=r.RGBA,n=r.RGBA,s=r.RGBA,i=t.RGBA,a=r.RGBA,u=4,c=4,p=e!=null?e.HALF_FLOAT_OES:null,m=r.FLOAT,l=r.RGBA),{internalFormatFloat:o,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:m}}function yt(r,e){let t=e();return W().getBool("DEBUG")&&GQ(r),t}function GQ(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+HQ(r,e))}var WQ=596e-10,UQ=65504;function MR(r){return!!(W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||WQ<Math.abs(r)&&Math.abs(r)<UQ)}function HQ(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function dh(r,e){return ji(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function VR(r,e){let t=ji(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(yt(r,()=>r.shaderSource(t,e)),yt(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function GR(r,e){let t=ji(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(yt(r,()=>r.shaderSource(t,e)),yt(r,()=>r.compileShader(t)),W().get("ENGINE_COMPILE_ONLY"))return t;if(r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw dS(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var qQ=/ERROR: [0-9]+:([0-9]+):/g;function dS(r,e){let t=qQ.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let o=+t[1],n=r.split(`
`),s=n.length.toString().length+2,i=n.map((p,m)=>b.rightPad((m+1).toString(),s)+p),a=0;for(let p=0;p<i.length;p++)a=Math.max(i[p].length,a);let l=i.slice(0,o-1),u=i.slice(o-1,o),c=i.slice(o);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${b.rightPad(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function WR(r){return ji(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function UR(r,e){if(yt(r,()=>r.linkProgram(e)),!W().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function $x(r,e){if(yt(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function HR(r,e){let t=ji(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return yt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),yt(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function qR(r,e){let t=ji(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return yt(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),yt(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function KR(r){return ji(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function jR(r,e){let t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let o=`[${r}x${e}]`;throw new Error("Requested texture size "+o+" is invalid.")}if(r>t||e>t){let o=`[${r}x${e}]`,n=`[${t}x${t}]`;throw new Error("Requested texture size "+o+" greater than WebGL maximum on this browser / GPU "+n+".")}}function XR(r){return ji(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function gS(r,e,t,o,n,s,i){let a=r.getAttribLocation(e,t);return a===-1?!1:(yt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,o)),yt(r,()=>r.vertexAttribPointer(a,n,r.FLOAT,!1,s,i)),yt(r,()=>r.enableVertexAttribArray(a)),!0)}function KQ(r,e,t){XQ(r,t),yt(r,()=>r.activeTexture(r.TEXTURE0+t)),yt(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function YR(r,e,t){return ji(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function ZR(r,e,t){return r.getUniformLocation(e,t)}function JR(r,e,t,o){yt(r,()=>KQ(r,e,o)),yt(r,()=>r.uniform1i(t,o))}function Ax(r,e,t){yt(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),yt(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function xS(r,e){yt(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),yt(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function gh(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+jQ(r,e))}function jQ(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function ji(r,e,t){let o=yt(r,()=>e());if(o==null)throw new Error(t);return o}function XQ(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,o=e+r.TEXTURE0;if(o<r.TEXTURE0||o>t){let n=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${n}.`)}}function bl(r,e=2){return b.sizeFromShape(r.slice(0,r.length-e))}function wl(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function xh(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[bl(r),...wl(r)]),e}function QR(r,e=!1){let t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE"),o=W().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");o===1/0&&W().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(o=t/2),e&&(t=t*2,o=o*2,r=r.map((a,l)=>l>=r.length-2?b.nearestLargerEven(r[l]):r[l]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let n=b.sizeFromShape(r),s=null;r.length<=1&&n<=t?s=[1,n]:r.length===2&&r[0]<=t&&r[1]<=t?s=r:r.length===3&&r[0]*r[1]<=t&&r[2]<=t?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=t&&r[1]*r[2]<=t?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t&&(s=[r[0],r[1]*r[2]*r[3]]);let i=s!=null&&Math.max(...s)>o&&Math.min(...s)<=(e?2:1)&&Math.min(...s)>0;if(s==null||i)if(e){let a=bl(r),l=2,u=2;r.length&&([l,u]=wl(r)),n=a*(l/2)*(u/2),s=b.sizeToSquarishShape(n).map(c=>c*2)}else s=b.sizeToSquarishShape(n);return s}function Ex(r){return r%2===0}function Uu(r,e){if(r=r.slice(-2),e=e.slice(-2),b.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r[r.length-1],o=e[e.length-1];if(t===o||Ex(t)&&Ex(o)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&Ex(r[0])&&Ex(e[0])}var mS,fS;function tF(r){if(mS==null){let e=Fo(r);mS=e.getParameter(e.MAX_TEXTURE_SIZE)}return mS}function eF(r){if(fS==null){let e=Fo(r);fS=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,fS)}function rF(r){if(r===0)return 0;let e,t=Fo(r);return Qo(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Qo(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Qo(r,e){return r.getExtension(e)!=null}function yS(r){try{if(Fo(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function oF(r){if(r===0)return!1;let e=Fo(r);if(r===1){if(!Qo(e,"OES_texture_float"))return!1}else if(!Qo(e,"EXT_color_buffer_float"))return!1;return hS(e)}function nF(r){if(r===0)return!1;let e=Fo(r);if(r===1){if(!Qo(e,"OES_texture_float")||!Qo(e,"WEBGL_color_buffer_float"))return!1}else{if(Qo(e,"EXT_color_buffer_float"))return hS(e);let o="EXT_color_buffer_half_float";if(Qo(e,o)){let n=e.getExtension(o);return YQ(e,n)}return!1}return hS(e)}function hS(r){let e=hh(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t),r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),i}function YQ(r,e){let t=hh(r,e),o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o),r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),r.deleteFramebuffer(i),a}function sF(r){return r!==2?!1:Fo(r).fenceSync!=null}function Ts(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var vt=W();vt.registerFlag("HAS_WEBGL",()=>vt.getNumber("WEBGL_VERSION")>0);vt.registerFlag("WEBGL_VERSION",()=>yS(2)?2:yS(1)?1:0);vt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);vt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>vt.get("WEBGL_VERSION")===2);vt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);vt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);vt.registerFlag("WEBGL_PACK",()=>vt.getBool("HAS_WEBGL"));vt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_PACK_CLIP",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_PACK_REDUCE",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_LAZILY_UNPACK",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_CONV_IM2COL",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>vt.getBool("WEBGL_PACK"));vt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>tF(vt.getNumber("WEBGL_VERSION")));vt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>eF(vt.getNumber("WEBGL_VERSION")));vt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=vt.getNumber("WEBGL_VERSION");return r===0?0:rF(r)});vt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>vt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!nl.isMobile());vt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>oF(vt.getNumber("WEBGL_VERSION")));vt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>vt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:vt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));vt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>nF(vt.getNumber("WEBGL_VERSION")));vt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>sF(vt.getNumber("WEBGL_VERSION")));vt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>vt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);vt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});vt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>nl.isMobile()?1:-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});vt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);vt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);vt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);vt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);vt.registerFlag("WEBGL_EXP_CONV",()=>!1);vt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>vt.getBool("IS_TEST"));vt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);vt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);vt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);vt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Le(){let r,e,t,o,n,s,i,a,l,u;return W().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",o="in",n="texture",s="outputColor",i="out vec4 outputColor;",a=W().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",o="varying",n="texture2D",s="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:o,texture2D:n,output:s,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}function Xn(r,e,t="index"){let o=b.computeStrides(e);return o.map((n,s)=>{let i=`int ${r[s]} = ${t} / ${n}`,a=s===o.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${n}`:`index -= ${r[s]} * ${n}`;return`${i}; ${a};`}).join("")}function Hu(r,e,t="index"){let o=b.computeStrides(e);return o.map((n,s)=>{let i=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,a=s===o.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`}).join("")}function ZQ(r,e){let t=r.length,o=r.map(s=>`${e}[${s}]`),n=new Array(t-1);n[t-2]=o[t-1];for(let s=t-3;s>=0;--s)n[s]=`(${n[s+1]} * ${o[s+1]})`;return n}function iF(r,e,t="index"){let o=r.map((s,i)=>i),n=ZQ(o,e);return n.map((s,i)=>{let a=`int ${r[i]} = ${t} / ${n[i]}`,l=i===n.length-1?`int ${r[i+1]} = ${t} - ${r[i]} * ${n[i]}`:`index -= ${r[i]} * ${n[i]}`;return`${a}; ${l};`}).join("")}function am(r){let e=b.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function lm(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var _x=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:aF}=I;function lF(r,e,t){let o=[];if(r.forEach(f=>{let h=b.sizeFromShape(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?o.push(`uniform float ${f.name}${h>1?`[${h}]`:""};`):(o.push(`uniform sampler2D ${f.name};`),o.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){let{uniformShape:g}=Rx(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:o.push(`uniform int ${f.name}Shape;`);break;case 2:o.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:o.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:o.push(`uniform ivec4 ${f.name}Shape;`);break;default:break}o.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:o.push("uniform int outShape;");break;case 2:o.push("uniform ivec2 outShape;"),o.push("uniform int outShapeStrides;");break;case 3:o.push("uniform ivec3 outShape;"),o.push("uniform ivec2 outShapeStrides;");break;case 4:o.push("uniform ivec4 outShape;"),o.push("uniform ivec3 outShapeStrides;");break;default:break}o.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{o.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});let n=o.join(`
`),s=r.map(f=>JQ(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=Le(),l=e9(a),u,c,p=n9(a);return e.isPacked?(u=QQ(e.logicalShape,i,t.enableShapeUniforms),c=o9(a)):(u=t9(e.logicalShape,i,t.enableShapeUniforms),c=r9(a)),t.packedInputs&&(p+=l9),[p,l,c,n,u,s,t.userCode].join(`
`)}function cm(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return w9(r,e);case 1:return T9(r,e);case 2:return v9(r,e);case 3:return I9(r,e);case 4:return E9(r,e);case 5:return $9(r);case 6:return A9(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function uF(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return b9(r);case 1:return N9(r,e);case 2:return S9(r,e);case 3:return C9(r,e);default:return k9(r,e)}}function JQ(r,e,t=!1,o){let n="";t?n+=uF(r,o):n+=cm(r,o);let s=r.shapeInfo.logicalShape,i=e.logicalShape;return s.length<=i.length&&(t?n+=D9(r,e):n+=_9(r,e)),n}function QQ(r,e,t){switch(r.length){case 0:return cF();case 1:return u9(r,e,t);case 2:return x9(r,e,t);case 3:return p9(r,e,t);default:return f9(r,e,t)}}function t9(r,e,t){switch(r.length){case 0:return cF();case 1:return c9(r,e,t);case 2:return y9(r,e,t);case 3:return m9(r,e,t);case 4:return h9(r,e,t);case 5:return d9(r,e);case 6:return g9(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function e9(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function r9(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function o9(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function n9(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${s9}
    ${i9}
    ${a9}
  `}var s9=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,i9=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,a9=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,l9=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function cF(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function u9(r,e,t){let o=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return o[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${o[1]}.0);
      }
    `:o[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${o[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      return 2 * (resTexRC.x * ${o[1]} + resTexRC.y);
    }
  `}function c9(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function p9(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let o=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=Math.ceil(r[2]/2),s=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function m9(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Hu(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let o=Xn(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${o}
      return ivec3(r, c, d);
    }
  `}function f9(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let o=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=Math.ceil(r[r.length-1]/2),s=n*Math.ceil(r[r.length-2]/2),i=s,a="",l="b, r, c";for(let u=2;u<r.length-1;u++)i*=r[r.length-u-1],a=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+a,l=`b${u}, `+l;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      ${a}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${l});
    }
  `}function h9(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Hu(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let o=Xn(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${o}
      return ivec4(r, c, d, d2);
    }
  `}function d9(r,e){let t=Xn(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function g9(r,e){let t=Xn(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function x9(r,e,t){let o=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${o[0]}, ${o[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));

      int index = resTexRC.x * ${o[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function y9(r,e,t){return b.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function qu(r){return`offset${r}`}function b9(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),o=Le();return`
    vec4 ${t}() {
      return ${o.texture2D}(${e}, halfCR);
    }
  `}function w9(r,e){let t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${o}() {return ${t};}`;let[n,s]=r.shapeInfo.texShape;if(n===1&&s===1)return`
      float ${o}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=qu(t);if(e)return`
    float ${o}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;let[a,l]=r.shapeInfo.texShape;return`
    float ${o}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function N9(r,e){let t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),n=r.shapeInfo.texShape,s=Le();if(e)return`
    vec4 ${o}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let i=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${o}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function T9(r,e){let t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${o}(int index) {
        ${pm(r)}
      }
    `;let n=r.shapeInfo.texShape,s=n[0],i=n[1];if(i===1&&s===1)return`
      float ${o}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=qu(t);return i===1?e?`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function S9(r,e){let t=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape,i=s[0],a=s[1],l=Le();if(s!=null&&b.arraysEqual(t,s))return e?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);

        return ${l.texture2D}(${o}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${o}, uv);
      }
    `;if(e)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `}function v9(r,e){let t=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(t,s)){if(e)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `;let m=s[0],f=s[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${m}.0);
      return sampleTexture(${o}, uv);
    }
  `}let{newShape:i,keptDims:a}=b.squeezeShape(t),l=i;if(l.length<t.length){let m=mm(r,l),f=["row","col"];return`
      ${cm(m,e)}
      float ${n}(int row, int col) {
        return ${n}(${fm(f,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${pm(r)}
      }
    `;let u=s[0],c=s[1],p=qu(o);return c===1?e?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${o}TexShape[0]));
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${o}, uv);
    }
  `:u===1?e?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${o}TexShape[1]), 0.5);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${o}, uv);
    }
  `:e?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
        return sampleTexture(${o}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${o}, uv);
  }
`}function C9(r,e){let t=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let m=t.slice(1),f=[1,2],h=mm(r,m),g=["b","row","col"];return`
        ${uF(h,e)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${fm(g,f)});
        }
      `}let a=Le();if(e)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `;let l=i[0],u=i[1],c=Math.ceil(t[2]/2),p=c*Math.ceil(t[1]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${c}, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `}function I9(r,e){let t=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=t[1]*t[2],i=t[2],{newShape:a,keptDims:l}=b.squeezeShape(t),u=a;if(u.length<t.length){let g=mm(r,u),d=["row","col","depth"];return`
        ${cm(g,e)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${fm(d,l)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${pm(r)}
      }
    `;let c=r.shapeInfo.texShape,p=c[0],m=c[1],f=r.shapeInfo.flatOffset;if(m===s&&f==null)return e?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${o}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${o}, uv);
        }
      `;if(m===i&&f==null)return e?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${o}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${o}, uv);
    }
  `;let h=qu(o);return e?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${o}Shape[1] * ${o}Shape[2];
      int stride1 = ${o}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${h};
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
      return sampleTexture(${o}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${h};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${o}, uv);
      }
  `}function k9(r,e){let t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),n=Le();if(e)return`
    vec4 ${o}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,i=s.length,a=r.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],p=Math.ceil(s[i-1]/2),m=p*Math.ceil(s[i-2]/2),f="int b, int row, int col",h=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let g=2;g<i-1;g++)f=`int b${g}, `+f,m*=s[i-g-1],h=`b${g} * ${m} + `+h;return`
    vec4 ${o}(${f}) {
      int index = ${h};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${n.texture2D}(${t}, uv);
    }
  `}function E9(r,e){let t=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=t[3],i=t[2]*s,a=t[1]*i,{newShape:l,keptDims:u}=b.squeezeShape(t);if(l.length<t.length){let y=mm(r,l),w=["row","col","depth","depth2"];return`
      ${cm(y,e)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${fm(w,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${s}, 1)));
        ${pm(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1],h=`int stride2 = ${o}Shape[3];`,g=`int stride1 = ${o}Shape[2] * stride2;`,d=`int stride0 = ${o}Shape[1] * stride1;`;if(f===a&&c==null)return e?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${h}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(f===s&&c==null)return e?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${o}Shape[1] * ${o}Shape[2], ${o}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${o}, uv);
      }
    `;let x=qu(o);return e?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${h}
      ${g}
      ${d}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index + ${x});
      return sampleTexture(${o}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${f}, index + ${x});
      return sampleTexture(${o}, uv);
    }
  `}function $9(r){let e=r.shapeInfo.logicalShape,t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),n=e[4],s=e[3]*n,i=e[2]*s,a=e[1]*i,{newShape:l,keptDims:u}=b.squeezeShape(e);if(l.length<e.length){let g=mm(r,l),d=["row","col","depth","depth2","depth3"];return`
      ${cm(g)}
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        return ${o}(${fm(d,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${s}, ${n})) +
          depth3;
        ${pm(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===a&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===n&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=qu(t);return`
    float ${o}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${s} +
          depth2 * ${n} + depth3 + ${h};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function A9(r){let e=r.shapeInfo.logicalShape,t=r.name,o="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:n,keptDims:s}=b.squeezeShape(e);if(n.length<e.length){let d=mm(r,n),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${cm(d)}
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${o}(${fm(x,s)});
      }
    `}let i=e[5],a=e[4]*i,l=e[3]*a,u=e[2]*l,c=e[1]*u;if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${pm(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],h=m[1];if(h===c&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(h===i&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;let g=qu(t);return`
    float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${h}, index);
      return sampleTexture(${t}, uv);
    }
  `}function pm(r){let e=r.name,t=b.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function D9(r,e){let t=r.name,o=t.charAt(0).toUpperCase()+t.slice(1),n="get"+o+"AtOutCoords",s=r.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=aF(r.shapeInfo.logicalShape,e.logicalShape),l=Ft(i),u=i-s,c,p=["x","y","z","w","u","v"];s===0?c="":i<2&&a.length>=1?c="coords = 0;":c=a.map(y=>`coords.${p[y+u]} = 0;`).join(`
`);let m="";i<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((y,w)=>`coords.${p[w+u]}`).join(", ");let f="return outputValue;",g=b.sizeFromShape(r.shapeInfo.logicalShape)===1,x=b.sizeFromShape(e.logicalShape)===1;if(s===1&&!g&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!x)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){let y=s-2,w=s-1;a.indexOf(y)>-1&&a.indexOf(w)>-1?f="return vec4(outputValue.x);":a.indexOf(y)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${o}(${m});
      ${f}
    }
  `}function _9(r,e){let t=r.name,o=t.charAt(0).toUpperCase()+t.slice(1),n="get"+o+"AtOutCoords",s=e.texShape,i=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!r.shapeInfo.isUniform&&a===l&&r.shapeInfo.flatOffset==null&&b.arraysEqual(i,s))return`
      float ${n}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let u=Ft(l),c=aF(r.shapeInfo.logicalShape,e.logicalShape),p=l-a,m,f=["x","y","z","w","u","v"];a===0?m="":l<2&&c.length>=1?m="coords = 0;":m=c.map(g=>`coords.${f[g+p]} = 0;`).join(`
`);let h="";return l<2&&a>0?h="coords":h=r.shapeInfo.logicalShape.map((g,d)=>`coords.${f[d+p]}`).join(", "),`
    float ${n}() {
      ${u} coords = getOutputCoords();
      ${m}
      return get${o}(${h});
    }
  `}function Ft(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Rx(r,e,t){let{newShape:o,keptDims:n}=b.squeezeShape(e),s=e.length,i=r&&s===3&&e[0]===1,a=i?e.slice(1):o,l=!r&&s>1&&!b.arraysEqual(e,t)&&o.length<s||i;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:n}}function mm(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function fm(r,e){return e.map(t=>r[t]).join(", ")}function mF(r,e,t,o){let n=t.map((c,p)=>{let m={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(m.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[p],shapeInfo:m}}),s=n.map(c=>c.shapeInfo),i={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},a=lF(n,i,e),l=GR(r.gl,a),u=r.createProgram(l);return W().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(r.buildVao(u),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},bS(r,e,u)))}function bS(r,e,t){let o=[],n=[],s,i,a,l=null,u=null;u=r.getUniformLocation(t,"NAN",!1),W().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(t,"INFINITY",!1));let c=!1;for(let p of e.variableNames){let m={name:p,uniform:r.getUniformLocation(t,p,c),offset:r.getUniformLocation(t,`offset${p}`,c)};e.enableShapeUniforms&&(m.shape=r.getUniformLocation(t,`${p}Shape`,c),m.texShape=r.getUniformLocation(t,`${p}TexShape`,c)),o.push(m)}if(e.enableShapeUniforms&&(s=r.getUniformLocation(t,"outShape",c),a=r.getUniformLocation(t,"outShapeStrides",c),i=r.getUniformLocation(t,"outTexShape",c)),e.customUniforms)for(let p of e.customUniforms)n.push(r.getUniformLocation(t,p.name,c));return{variablesLocations:o,customUniformLocations:n,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:a,outTexShapeLocation:i}}function pF(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,o)=>{let n=t.logicalShape,s=e[o],i=s.shape;if(!b.arraysEqual(n,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${i} must match`);if(t.isUniform&&s.isUniform)return;let a=t.texShape,l=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function fF(r,e,t,o,n){e.program.enableShapeUniforms||(pF(e.inShapeInfos,t),pF([e.outShapeInfo],[o]));let s=o.texData.texture,i=o.texData.texShape;o.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):r.setOutputMatrixTexture(s.texture,i[0],i[1]),r.setProgram(e.webGLProgram),r.bindVertexArray(e.webGLProgram.vao),W().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){let u=t[l],{uniform:c,offset:p,shape:m,texShape:f}=e.variablesLocations[l];if(m){let{uniformShape:h}=Rx(e.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(m,new Int32Array(h));break;case 2:r.gl.uniform2iv(m,new Int32Array(h));break;case 3:r.gl.uniform3iv(m,new Int32Array(h));break;case 4:r.gl.uniform4iv(m,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(b.sizeFromShape(u.shape)<2)r.gl.uniform1f(c,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(c,h)}continue}u.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,c,l)}}let a=e.outShapeLocation;if(a)switch(o.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(o.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(o.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(o.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(o.shape));break;default:break}if(e.outShapeStridesLocation){let l=b.computeStrides(o.shape);switch(o.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,o.texData.texShape[0],o.texData.texShape[1]),e.program.customUniforms&&n)for(let l=0;l<e.program.customUniforms.length;++l){let u=e.program.customUniforms[l],c=e.customUniformLocations[l],p=n[l];if(u.type==="float")r.gl.uniform1fv(c,p);else if(u.type==="vec2")r.gl.uniform2fv(c,p);else if(u.type==="vec3")r.gl.uniform3fv(c,p);else if(u.type==="vec4")r.gl.uniform4fv(c,p);else if(u.type==="int")r.gl.uniform1iv(c,p);else if(u.type==="ivec2")r.gl.uniform2iv(c,p);else if(u.type==="ivec3")r.gl.uniform3iv(c,p);else if(u.type==="ivec4")r.gl.uniform4iv(c,p);else throw Error(`uniform type ${u.type} is not supported yet.`)}r.executeProgram()}function hF(r,e,t){let o="";e.concat(t).forEach(i=>{let a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:p}=Rx(r.packedInputs,i.shape,l),m="",f="",h="";if(c.length===1&&r.packedInputs){let v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];m=`${v[0]>1}_${v[1]>1}`}else if(c.length===2&&!r.packedInputs)f=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!r.packedInputs){let v=b.computeStrides(c);h=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}let g=i.shape.length,d=c.length===2&&b.arraysEqual(i.shape,l),x=b.sizeFromShape(i.shape)===1,y=I.getBroadcastDims(i.shape,t.shape),w=!r.packedInputs&&g===t.shape.length&&b.arraysEqual(l,t.texData.texShape),N=r.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;o+=`${g}_${w}_${u?p:""}_${c.length}_${x}_${y}_${d}_${m}_${f}_${h}_${N}_${a}`}else{let l=i.isUniform?"uniform":i.texData.texShape;o+=`${i.shape}_${l}_${a}`}});let n=r.userCode,s=r.constructor.name;return s+="_"+o+"_"+n+`${W().getNumber("WEBGL_VERSION")}`,s}function ce(r){return W().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var Fx=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Gu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Le();this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hu(["r","c","d"],e):Xn(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var Ox=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Gu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Le();this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hu(["r","c","d"],e):Xn(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var Lx=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Hr.DOWNLOAD;let t=Le();this.outputShape=e,this.userCode=`
      ${_x}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var Px=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Hr.DOWNLOAD;let t=Le();this.outputShape=e,this.userCode=`
      ${_x}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var O9={R:0,G:1,B:2,A:3},yh=class{constructor(e,t=!1,o="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Le();this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let i="";for(let a=0;a<o.length;a++){let l=o[a];i+=`
          if(offset == ${a}) {
            result = values[${O9[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?lm():am(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${o.length});

        flatIndex = idiv(flatIndex, ${o.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${i}
        }
        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}};var zx=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=Le();this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length);let n="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let l=i*2+a;n+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${o.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?lm():am(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${o.output} = ${s};
        }
    `}};function dF(r){let e=Le(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return VR(r,t)}function gF(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return HR(r,e)}function xF(r){let e=new Uint16Array([0,1,2,2,1,3]);return qR(r,e)}function bh(r,e,t,o,n,s){jR(e,t);let i=KR(r),a=r.TEXTURE_2D;return yt(r,()=>r.bindTexture(a,i)),yt(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),yt(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),yt(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),yt(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),W().getNumber("WEBGL_VERSION")===1?yt(r,()=>r.texImage2D(a,0,o,e,t,0,n,s,null)):yt(r,()=>r.texStorage2D(a,1,o,e,t)),yt(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function wS(r){return r.internalFormatFloat}function yF(r,e,t,o){let[n,s]=Wu(e,t);return bh(r,n,s,wS(o),o.textureFormatFloat,r.FLOAT)}function NS(r){return r.internalFormatHalfFloat}function bF(r,e,t,o){let[n,s]=Wu(e,t);return bh(r,n,s,NS(o),o.textureFormatFloat,o.textureTypeHalfFloat)}function TS(r){return r.downloadTextureFormat}function wF(r,e,t,o){let[n,s]=Wu(e,t);return bh(r,n,s,TS(o),r.RGBA,r.UNSIGNED_BYTE)}function SS(r){return r.internalFormatPackedFloat}function NF(r,e,t,o){let[n,s]=Ns(e,t);return bh(r,n,s,SS(o),r.RGBA,r.FLOAT)}function vS(r){return r.internalFormatPackedHalfFloat}function TF(r,e,t,o){let[n,s]=Ns(e,t);return bh(r,n,s,vS(o),r.RGBA,o.textureTypeHalfFloat)}function SF(r,e,t){return yt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),gS(r,e,"clipSpacePos",t,3,20,0)&&gS(r,e,"uv",t,2,20,12)}function vF(r,e,t,o,n,s){yt(r,()=>r.bindTexture(r.TEXTURE_2D,e));let i,a,l;n instanceof Uint8Array?(i=new Uint8Array(t*o*4),a=r.UNSIGNED_BYTE,l=r.RGBA):(i=new Float32Array(t*o*4),a=r.FLOAT,l=s.internalFormatPackedFloat),i.set(n),W().getNumber("WEBGL_VERSION")===2?yt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,o,r.RGBA,a,i)):yt(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,t,o,0,r.RGBA,a,i)),yt(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function CF(r,e,t){yt(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?W().getNumber("WEBGL_VERSION")===2?yt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):yt(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):W().getNumber("WEBGL_VERSION")===2?yt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):yt(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),yt(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function IF(r,e,t,o){let n=r.createBuffer();yt(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,n));let a=4*4*e*t;return yt(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),yt(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),yt(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),n}function kF(r,e,t){let o=r,n=new Float32Array(t);return o.bindBuffer(o.PIXEL_PACK_BUFFER,e),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,n),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),n}function EF(r,e,t,o){let[n,s]=Wu(e,t),i=4,a=new Uint8Array(zR(e*t,i));return yt(r,()=>r.readPixels(0,0,n,s,o.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function $F(r,e,t,o,n,s,i,a){let l=r,u=new Float32Array(BR(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function AF(r,e,t){let o=new Float32Array(e*t*4);return yt(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,o)),o}var hm=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=W().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,PR(t,e)):this.gl=Fo(t),e=this.gl,W().getNumber("WEBGL_VERSION")===2){let s=e;this.createVertexArray=()=>yt(s,()=>s.createVertexArray()),this.bindVertexArray=i=>yt(s,()=>s.bindVertexArray(i)),this.deleteVertexArray=i=>yt(s,()=>s.deleteVertexArray(i)),this.getVertexArray=()=>yt(s,()=>s.getParameter(s.VERTEX_ARRAY_BINDING))}else if(e!=null){let s=e.getExtension("OES_vertex_array_object");if(s==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>yt(e,()=>s.createVertexArrayOES()),this.bindVertexArray=i=>yt(e,()=>s.bindVertexArrayOES(i)),this.deleteVertexArray=i=>yt(e,()=>s.deleteVertexArrayOES(i)),this.getVertexArray=()=>yt(e,()=>e.getParameter(s.VERTEX_ARRAY_BINDING_OES))}let o="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),W().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=dh(this.gl,s),Qo(this.gl,i))this.textureHalfFloatExtension=dh(this.gl,i);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(o),Qo(this.gl,n))this.colorBufferHalfFloatExtension=dh(this.gl,n);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(o="EXT_color_buffer_float",Qo(this.gl,o))this.colorBufferFloatExtension=this.gl.getExtension(o);else if(Qo(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=gF(this.gl),this.indexBuffer=xF(this.gl),this.framebuffer=XR(this.gl),this.textureConfig=hh(this.gl,this.textureHalfFloatExtension)}get debug(){return W().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;yt(e,()=>e.finish()),yt(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),yt(e,()=>e.deleteFramebuffer(this.framebuffer)),yt(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),yt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),yt(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),yF(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),bF(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),wF(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),CF(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,o,n){this.throwIfDisposed(),vF(this.gl,e,t,o,n,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),TF(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),NF(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(xS(this.gl,this.framebuffer),this.outputTexture=null),yt(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,o){return this.downloadMatrixDriver(e,()=>EF(this.gl,t,o,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,o,n,s,i){return $F(this.gl,e,t,o,n,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return kF(this.gl,e,t)}createBufferFromTexture(e,t,o){this.bindTextureToFrameBuffer(e);let n=IF(this.gl,t,o,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,o;if(W().getBool("WEBGL_FENCE_API_ENABLED")){let n=e,s=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),o=()=>{let i=n.clientWaitSync(s,0,0);return i===n.ALREADY_SIGNALED||i===n.CONDITION_SATISFIED},t=s}else W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),o=()=>this.isQueryAvailable(t,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):o=()=>!0;return{query:t,isFencePassed:o}}downloadMatrixFromPackedTexture(e,t,o){return this.downloadMatrixDriver(e,()=>AF(this.gl,t,o))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=dF(t));let o=WR(t);yt(t,()=>t.attachShader(o,this.vertexShader)),yt(t,()=>t.attachShader(o,e)),UR(t,o);let n=Object.assign(o,{vao:this.createVertexArray()});return this.debug&&$x(t,n),n}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;yt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),SF(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(yt(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&$x(this.gl,this.program),yt(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,o=!0){return this.throwIfDisposed(),o?YR(this.gl,e,t):ZR(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),yt(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,o){this.throwIfDisposed(),this.throwIfNoProgram(),JR(this.gl,e,t,o)}setOutputMatrixTexture(e,t,o){this.setOutputMatrixTextureDriver(e,o,t)}setOutputPackedMatrixTexture(e,t,o){this.throwIfDisposed();let[n,s]=Ns(t,o);this.setOutputMatrixTextureDriver(e,n,s)}setOutputMatrixWriteRegion(e,t,o,n){this.setOutputMatrixWriteRegionDriver(o,e,n,t)}setOutputPackedMatrixWriteRegion(e,t,o,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&$x(this.gl,this.program),gh(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}yt(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),yt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=dh(this.gl,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=o.createQuery();return o.beginQuery(n.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,o=this.getQueryTimerExtensionWebGL2();t.endQuery(o.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(e){return V(this,null,function*(){return yield b.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(e,t){if(t===0)return null;if(t===2){let o=this.gl;return o.getQueryParameter(e,o.QUERY_RESULT)/1e6}else{let o=this.getQueryTimerExtensionWebGL1();return o.getQueryObjectEXT(e,o.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let o=this.getQueryTimerExtensionWebGL1(),n=o.getQueryObjectEXT(e,o.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=P9(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:o}=this.itemsToPoll[t];o()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let o;"setTimeoutCustom"in W().platform&&(o=W().platform.setTimeoutCustom.bind(W().platform)),b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,o)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Ax(this.gl,e,this.framebuffer),this.debug&&gh(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Ax(this.gl,this.outputTexture,this.framebuffer),this.debug&&gh(this.gl)):xS(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let o=t();return this.unbindTextureToFrameBuffer(),o}setOutputMatrixTextureDriver(e,t,o){this.throwIfDisposed();let n=this.gl;Ax(n,e,this.framebuffer),this.debug&&gh(n),this.outputTexture=e,yt(n,()=>n.viewport(0,0,t,o)),yt(n,()=>n.scissor(0,0,t,o))}setOutputMatrixWriteRegionDriver(e,t,o,n){this.throwIfDisposed(),yt(this.gl,()=>this.gl.scissor(e,t,o,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function P9(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:DF,bincountImpl:Bx,bincountReduceImpl:_F,bitwiseAndImpl:RF,castImpl:FF,ceilImpl:OF,concatImpl:LF,equalImpl:PF,expImpl:zF,expm1Impl:BF,floorImpl:MF,gatherNdImpl:VF,gatherV2Impl:GF,greaterImpl:WF,greaterEqualImpl:UF,lessImpl:HF,lessEqualImpl:qF,linSpaceImpl:KF,logImpl:jF,maxImpl:XF,maximumImpl:YF,minimumImpl:ZF,multiplyImpl:JF,negImpl:QF,notEqualImpl:tO,prodImpl:eO,raggedGatherImpl:rO,raggedRangeImpl:oO,raggedTensorToTensorImpl:nO,rangeImpl:sO,rsqrtImpl:iO,scatterImpl:aO,sigmoidImpl:lO,simpleAbsImpl:Mx,sliceImpl:uO,sparseFillEmptyRowsImpl:cO,sparseReshapeImpl:pO,sparseSegmentReductionImpl:Vx,sqrtImpl:mO,staticRegexReplaceImpl:fO,stridedSliceImpl:hO,stringNGramsImpl:dO,stringSplitImpl:gO,stringToHashBucketFastImpl:xO,subImpl:yO,tileImpl:bO,topKImpl:wO,transposeImpl:Ku,uniqueImpl:NO}=JT;function CS(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function Ke(r,e){return e===1?[r]:CS(r,e)}function TO(r,e){if(r===1)return"rc";let t="";for(let o=0;o<r;o++)t+=e[o],o<r-1&&(t+=",");return t}var Gx=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ce(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=Ke("rc",this.rank),o=Ft(this.rank),n=this.getOutOfBoundsCondition(t),s=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let o=0;o<=1;o++)for(let n=0;n<=1;n++){let s=`${o===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)s=`${e[e.length-1-i]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let o=this.rank-2;o<this.rank;o++)t+=`${e[o]} >= ${this.enableShapeUniforms?`outShape[${o}]`:this.outputShape[o]}`,o<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),o=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${o};
      bool rEdge = rp1 >= ${n};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}};var dm=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length);let o="";for(let n=0;n<4;n++){let s="thisRC = rc;";n%2===1&&(s+="thisRC.z += 1;"),n>1&&(s+="thisRC.y += 1;"),o+=`
        ${s}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${z9(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?lm():am(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${o}

        setOutput(result);
      }
    `}};function z9(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?iF(["r","c","d"],"inputShape"):Xn(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var Wx=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,o){let n=vO(t,o),s=CO(e,n,o);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=SO(e,n,this.gpgpu.gl,this.gpgpu.textureConfig,o);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let l=this.freeTextures[s].pop();return this.usedTextures[s].push(l),l}let a;return n===zr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):n===zr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):n===zr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):n===zr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):n===zr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,o,n){if(this.freeTextures==null)return;let s=vO(o,n),i=CO(t,s,n);i in this.freeTextures||(this.freeTextures[i]=[]);let a=SO(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=W().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let u=this.usedTextures[i],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function B9(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function SO(r,e,t,o,n){let s=M9(e,o),i;if(n){let[l,u]=Ns(r[0],r[1]);i=l*u}else{let[l,u]=Wu(r[0],r[1]);i=l*u}let a=B9(t,s);return i*a}function M9(r,e){switch(r){case zr.PACKED_2X2_FLOAT32:return SS(e);case zr.PACKED_2X2_FLOAT16:return vS(e);case zr.UNPACKED_FLOAT32:return wS(e);case zr.UNPACKED_FLOAT16:return NS(e);case zr.PACKED_4X1_UNSIGNED_BYTE:return TS(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function V9(r){return W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?zr.PACKED_2X2_FLOAT32:zr.UNPACKED_FLOAT32:r?zr.PACKED_2X2_FLOAT16:zr.UNPACKED_FLOAT16}function vO(r,e){if(r===Hr.UPLOAD)return zr.PACKED_2X2_FLOAT32;if(r===Hr.RENDER||r==null)return V9(e);if(r===Hr.DOWNLOAD||r===Hr.PIXELS)return zr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function CO(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var $r=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},ar="if (isnan(x)) return x;",IO="return x;",IS="return abs(x);";var kO="return (x >= 0.0) ? x : (exp(x) - 1.0);",EO=ar+`
  return (x < 0.0) ? 0.0 : x;
`,$O=ar+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ss="return x;",AO="return 1.0 / (1.0 + exp(-1.0 * x));";var _O="return x;",RO=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,FO=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,OO=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,LO="return 1.0 / (1.0 + exp(-1.0 * x));",xo=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var Ux=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length);let t=e.length,o=Ke("rc",t),n=Ft(t),s=TO(t,o),i=o.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var W9=Lr.whereImpl,U9=1e-7,H9=1e-4,Hx={};function q9(r){return r in Hx||(Hx[r]={}),Hx[r]}var K9=W().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),j9=600;function X9(){return W().global.screen==null?1024:W().global.screen.height*W().global.screen.width*window.devicePixelRatio*j9/1024/1024}var PO=(()=>{class r extends Rs{nextDataId(){return r.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!W().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let o;if(t!=null){if(t instanceof hm)o=t;else{let n=Fo(W().getNumber("WEBGL_VERSION"),t);o=new hm(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Fo(W().getNumber("WEBGL_VERSION"));o=new hm(n),this.binaryCache=q9(W().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=o,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Wx(this.gpgpu),this.numMBBeforeWarning=X9(),this.texData=new Vl(this,un())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,o,n,s,i,a){let l=this.makeTensorInfo(o,n),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[s,i]},u.texShape=[s,i];let c=xh(o),p=new yh(c,!1,a),m=this.runWebGLProgram(p,[l],n,[[s,i]]);return m.shape=o,u.texture=null,this.disposeIntermediateTensorInfo(l),m.dataId}write(t,o,n){if((W().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||W().getBool("DEBUG"))&&this.checkNumericalProblems(t),n==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:o,dtype:n,values:t,usage:Hr.UPLOAD,refCount:1}),s}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){let o=this.texData.get(t);o.refCount++}decRef(t){if(this.texData.has(t)){let o=this.texData.get(t);o.refCount--}}move(t,o,n,s,i){if(W().getBool("DEBUG")&&this.checkNumericalProblems(o),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:s,values:o,usage:Hr.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){let o=this.texData.get(t),{values:n,dtype:s,complexTensorInfos:i,slice:a,shape:l,isPacked:u}=o;if(a!=null){let f;u?f=new xo(l,Ss):f=new $r(l,Ss);let h=this.runWebGLProgram(f,[{dataId:t,shape:l,dtype:s}],s),g=this.readSync(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(t);if(s==="string")return n;let c=this.activeTimers!=null,p;c&&(p=b.now());let m;if(s==="complex64"){let f=this.readSync(i.real.dataId),h=this.readSync(i.imag.dataId);m=I.mergeRealAndImagArrays(f,h)}else m=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=b.now()-p),this.convertAndCacheOnCPU(t,m)}read(t){return V(this,null,function*(){if(this.pendingRead.has(t)){let g=this.pendingRead.get(t);return new Promise(d=>g.push(d))}let o=this.texData.get(t),{values:n,shape:s,slice:i,dtype:a,complexTensorInfos:l,isPacked:u}=o;if(i!=null){let g;u?g=new xo(s,Ss):g=new $r(s,Ss);let d=this.runWebGLProgram(g,[{dataId:t,shape:s,dtype:a}],a),x=this.read(d.dataId);return this.disposeIntermediateTensorInfo(d),x}if(n!=null)return this.convertAndCacheOnCPU(t);if(W().getBool("DEBUG")&&!W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&W().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,p;if(a!=="complex64"&&W().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(t);let g=this.texData.get(p.dataId);c=this.gpgpu.createBufferFromTexture(g.texture.texture,...fh(s))}this.pendingRead.set(t,[]),a!=="complex64"&&(yield this.gpgpu.createAndWaitForFence());let m;if(a==="complex64"){let g=yield Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),d=g[0],x=g[1];m=I.mergeRealAndImagArrays(d,x)}else if(c==null)m=this.getValuesFromTexture(t);else{let g=b.sizeFromShape(s);m=this.gpgpu.downloadFloat32MatrixFromBuffer(c,g)}if(p!=null&&this.disposeIntermediateTensorInfo(p),c!=null){let g=this.gpgpu.gl;yt(g,()=>g.deleteBuffer(c))}let f=this.convertAndCacheOnCPU(t,m),h=this.pendingRead.get(t);return this.pendingRead.delete(t),h.forEach(g=>g(f)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&un().removeDataId(t,this),this.pendingDeletes--),f})}readToGPU(t,o={}){let n=this.texData.get(t),{values:s,shape:i,slice:a,dtype:l,isPacked:u,texture:c}=n;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let h;u?h=new xo(i,Ss):h=new $r(i,Ss);let g=this.runWebGLProgram(h,[{dataId:t,shape:i,dtype:l}],l),d=this.readToGPU(g,o);return this.disposeIntermediateTensorInfo(g),d}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(t,o.customTexShape),m=un().makeTensorFromTensorInfo(p),f=this.texData.get(p.dataId);return Object.assign({tensorRef:m},f.texture)}bufferSync(t){let o=this.readSync(t.dataId);if(t.dtype==="string")try{let n=o.map(s=>b.decodeString(s));return Nt(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Nt(t.shape,t.dtype,o)}checkNumericalProblems(t){if(t!=null)for(let o=0;o<t.length;o++){let n=t[o];if(!MR(n))throw W().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:o,dtype:n,isPacked:s}=this.texData.get(t),i=b.sizeFromShape(o);if(W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let f=this.decode(t),h=this.texData.get(f.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(h.texture.texture,...fh(o)).subarray(0,i);return this.disposeIntermediateTensorInfo(f),g}let a=W().getBool("WEBGL_PACK")&&s===!0,l=a?xh(o):o,u=a?new Px(l):new Lx(l),c=this.runWebGLProgram(u,[{shape:l,dtype:n,dataId:t}],"float32"),p=this.texData.get(c.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(c),m}timerAvailable(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){let o=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,t();let i=b.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=b.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=o,s&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return V(this,null,function*(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=yield Promise.all(i);l.kernelMs=b.sum(u),l.getExtraProfileInfo=()=>u.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(t){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=b.now(),t)}getQueryTime(t){return V(this,null,function*(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let o=t;return o.endMs-o.startMs})}disposeData(t,o=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(o?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!o&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);let{complexTensorInfos:n}=this.texData.get(t);return n!=null&&(this.disposeData(n.real.dataId,o),this.disposeData(n.imag.dataId,o)),this.texData.delete(t),!0}releaseGPUData(t){let{texture:o,dtype:n,texShape:s,usage:i,isPacked:a,slice:l}=this.texData.get(t),u=l&&l.origDataId||t,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),o!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(o,s,i,a)));let p=this.texData.get(t);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,o=K9){return W().getBool("WEBGL_CPU_FORWARD")&&t.every(n=>this.texData.get(n.dataId).texture==null&&b.sizeFromShape(n.shape)<o)}getGPGPUContext(){return this.gpgpu}where(t){I.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let o=t.dataSync();return W9(t.shape,o)}packedUnaryOp(t,o,n){let s=new xo(t.shape,o),i=this.compileAndRun(s,[t],n);return un().makeTensorFromTensorInfo(i)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let s=Mx(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,s)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,IS,t.dtype);let o=new $r(t.shape,IS),n=this.compileAndRun(o,[t]);return un().makeTensorFromTensorInfo(n)}makeTensorInfo(t,o,n){let s;if(o==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let i=n.map(a=>b.encodeString(a));s=this.write(i,t,o)}else s=this.write(n,t,o);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:o}}makeOutput(t,o,n){return un().makeTensorFromTensorInfo(this.makeTensorInfo(t,o,n),this)}unpackTensor(t){let o=new Ux(t.shape);return this.runWebGLProgram(o,[t],t.dtype)}packTensor(t){let o=new Gx(t.shape);return this.runWebGLProgram(o,[t],t.dtype,null,!0)}packedReshape(t,o){let n=[bl(t.shape),...wl(t.shape)],s={dtype:t.dtype,shape:n,dataId:t.dataId},i=[bl(o),...wl(o)],a=new dm(i,n),l=!0,u=[n],c=this.runWebGLProgram(a,[s],t.dtype,u,l);return{dataId:c.dataId,shape:o,dtype:c.dtype}}decode(t,o){let n=this.texData.get(t),{isPacked:s,shape:i,dtype:a}=n;if(o!=null){let f=b.sizeFromShape(i),h=o[0]*o[1]*4;b.assert(f<=h,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let l=xh(i),u;s?u=new Ox(l):u=new Fx(l);let c=!0,p=[o??fh(l)],m=this.runWebGLProgram(u,[{shape:l,dtype:a,dataId:t}],a,p,c,o);return{dtype:a,shape:i,dataId:m.dataId}}runWebGLProgram(t,o,n,s,i=!1,a){let l=this.makeTensorInfo(t.outputShape,n),u=this.texData.get(l.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===Gu.DENSE){let y=a??fh(t.outputShape);u.texShape=y.map(w=>w*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),b.sizeFromShape(l.shape)===0)return u.values=b.getTypedArrayFromDType(l.dtype,0),l;let c=[],p=o.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let w=this.texData.get(y.dataId);if(w.texture==null){if(!t.packedInputs&&b.sizeFromShape(y.shape)<=W().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:w.values};t.packedInputs&&(w.isPacked=!0,w.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!w.isPacked!=!!t.packedInputs)y=w.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),w=this.texData.get(y.dataId);else if(w.isPacked&&!Uu(w.shape,y.shape)){let N=y,v=y.shape;y.shape=w.shape,y=this.packedReshape(y,v),c.push(y),w=this.texData.get(y.dataId),N.shape=v}return{shape:y.shape,texData:w,isUniform:!1}});this.uploadToGPU(l.dataId);let m={shape:l.shape,texData:u,isUniform:!1},f=hF(t,p,m),h=this.getAndSaveBinary(f,()=>mF(this.gpgpu,t,p,m)),g=this.activeTimers!=null,d;g&&(d=this.startTimer()),W().get("ENGINE_COMPILE_ONLY")||fF(this.gpgpu,h,p,m,s),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),g&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)}));let x=W().getNumber("WEBGL_FLUSH_THRESHOLD");if(x>0){let y=b.now();y-this.lastGlFlushTime>x&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!W().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&i===!1){let y=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),y}return l}compileAndRun(t,o,n,s,i=!1){return n=n||o[0].dtype,this.runWebGLProgram(t,o,n,s,i)}getAndSaveBinary(t,o){return t in this.binaryCache||(this.binaryCache[t]=o()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(W().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(o=>{this.gpgpu.deleteProgram(this.binaryCache[o].webGLProgram),delete this.binaryCache[o]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=U(()=>{if(!W().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=W().getBool("DEBUG");W().set("DEBUG",!1);let o=this.abs(Ct(1e-8)).dataSync()[0];if(W().set("DEBUG",t),o>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?U9:H9}uploadToGPU(t){let o=this.texData.get(t),{shape:n,dtype:s,values:i,texture:a,usage:l,isPacked:u}=o;if(a!=null)return;let c=this.activeTimers!=null,p;c&&(p=b.now());let m=o.texShape;if(m==null&&(m=QR(n,u),o.texShape=m),i!=null){let f=xh(n),h,g=m[1],d=m[0],x=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(u||!x)&&([g,d]=Ns(m[0],m[1])),u?h=new zx(f,x):h=new yh(f,x);let y=x?[d,g]:m,w=this.makeTensorInfo(y,s),N=this.texData.get(w.dataId);x?N.usage=Hr.PIXELS:N.usage=Hr.UPLOAD,N.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),g,d,i);let v=[[d,g]],R=this.runWebGLProgram(h,[w],s,v,!0),O=this.texData.get(R.dataId);o.texShape=O.texShape,o.isPacked=O.isPacked,o.usage=O.usage,W().get("ENGINE_COMPILE_ONLY")?this.disposeData(R.dataId):(o.texture=O.texture,o.values=null,this.texData.delete(R.dataId)),this.disposeIntermediateTensorInfo(w),c&&(this.uploadWaitMs+=b.now()-p)}else{let f=this.acquireTexture(m,l,s,u);o.texture=f}}convertAndCacheOnCPU(t,o){let n=this.texData.get(t),{dtype:s}=n;return o!=null&&(n.values=Y9(o,s)),n.values}acquireTexture(t,o,n,s){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,o,s)}computeBytes(t,o){return t[0]*t[1]*b.bytesPerElement(o)}checkCompileCompletion(){for(let[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}checkCompileCompletionAsync(){return V(this,null,function*(){let t=[];if(this.gpgpu.parallelCompilationExtension){for(let[,o]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(o));return Promise.all(t)}else{for(let[,o]of Object.entries(this.binaryCache)){let n=new Promise(s=>{try{this.checkCompletion_(o),s(!0)}catch(i){throw i}});t.push(n)}return Promise.all(t)}})}checkCompletionAsync_(t){return V(this,null,function*(){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(yield Vf(),this.checkCompletionAsync_(t))})}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(dS(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);let{variablesLocations:o,customUniformLocations:n,infLoc:s,nanLoc:i,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}=bS(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=o,t.customUniformLocations=n,t.infLoc=s,t.nanLoc=i,t.outShapeLocation=a,t.outShapeStridesLocation=l,t.outTexShapeLocation=u}}createTensorFromGPUData(t,o,n){t.channels=t.channels||"RGBA";let{texture:s,height:i,width:a,channels:l}=t,u=un().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let c=u.writeTexture(s,o,n,i,a,l);return un().makeTensorFromDataId(c,o,n,u)}}return r.nextDataId=0,r})();function Y9(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let o=0;o<t.length;++o)t[o]=Math.round(r[o]);return t}else throw new Error(`Unknown dtype ${e}`)}nl.isBrowser()&&Od("webgl",()=>new PO,2);var gm=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var yo=class{constructor(e,t,o){this.variableNames=["A","B"],this.outputShape=I.assertAndGetBroadcastShape(t,o),this.enableShapeUniforms=ce(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var Lo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var Oo=class{constructor(e,t,o,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=I.assertAndGetBroadcastShape(t,o);let s=this.outputShape.length;this.enableShapeUniforms=ce(s);let i="";if(n)if(s===0||b.sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Ft(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=Ke("coords",s);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}};function je(r){let{inputs:e,backend:t}=r,{x:o}=e;return t.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var zO={kernelName:as,backendName:"webgl",kernelFunc:je};function bo(r){let{inputs:e,backend:t}=r,{real:o,imag:n}=e,s=t.makeTensorInfo(o.shape,"complex64"),i=t.texData.get(s.dataId),a=je({inputs:{x:o},backend:t}),l=je({inputs:{x:n},backend:t});return i.complexTensorInfos={real:a,imag:l},s}var BO={kernelName:Dc,backendName:"webgl",kernelFunc:bo};var kS="return (a < 0.) ? b * a : a;",ES=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Z9(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{alpha:s}=o,i=t.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),a=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Oo(ES,n.shape,i.shape):new yo(kS,n.shape,i.shape),l=t.runWebGLProgram(a,[n,i],"float32");return t.disposeIntermediateTensorInfo(i),l}var MO={kernelName:Ea,backendName:"webgl",kernelFunc:Z9};var $S="return (a < 0.) ? b * a : a;",AS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function J9(r){let{inputs:e,backend:t}=r,{x:o,alpha:n}=e,s=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Oo(AS,o.shape,n.shape):new yo($S,o.shape,n.shape);return t.runWebGLProgram(s,[o,n],"float32")}var VO={kernelName:Va,backendName:"webgl",kernelFunc:J9};var vn="if (isnan(x)) return x;";function wt({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:o}){return({inputs:n,backend:s})=>{let{x:i}=n,a=s,l=o||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){let p=a.texData.get(i.dataId),m=t(p.values,l);return a.makeTensorInfo(i.shape,l,m)}let u=W().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,c;return u?c=new xo(i.shape,e):c=new $r(i.shape,r),a.runWebGLProgram(c,[i],l)}}function re({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:o=!1,cpuKernelImpl:n,dtype:s}){return({inputs:i,backend:a})=>{let{a:l,b:u}=i,c=a;if(o&&l.dtype==="complex64"){let h=c.texData.get(l.dataId),g=c.texData.get(u.dataId),[d,x]=[[h.complexTensorInfos.real,g.complexTensorInfos.real],[h.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(w=>{let[N,v]=w,k={dataId:N.dataId,dtype:N.dtype,shape:l.shape},R={dataId:v.dataId,dtype:v.dtype,shape:u.shape},O=new yo(r,l.shape,u.shape);return c.runWebGLProgram(O,[k,R],er(N.dtype,v.dtype))}),y=bo({inputs:{real:d,imag:x},backend:c});return c.disposeIntermediateTensorInfo(d),c.disposeIntermediateTensorInfo(x),y}let p=s||er(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&n!=null){let h=c.texData.get(l.dataId).values,g=c.texData.get(u.dataId).values,d=l.dtype==="string"?I.fromUint8ToStringArray(h):h,x=l.dtype==="string"?I.fromUint8ToStringArray(g):g,[y,w]=n(l.shape,u.shape,d,x,p),N=c.makeTensorInfo(w,p),v=c.texData.get(N.dataId);return v.values=y,N}let m=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,f;return m?f=new Oo(e,l.shape,u.shape,t):f=new yo(r,l.shape,u.shape),c.runWebGLProgram(f,[l,u],p)}}function Xi(r,e=!1){if(r==="linear")return e?_O:IO;if(r==="relu")return e?FO:EO;if(r==="elu")return e?RO:kO;if(r==="relu6")return e?OO:$O;if(r==="prelu")return e?AS:$S;if(r==="leakyrelu")return e?ES:kS;if(r==="sigmoid")return e?LO:AO;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var xm=class{constructor(e,t,o,n=!1,s=!1,i=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o,this.enableShapeUniforms=ce(this.outputShape.length);let c=n?e[1]:e[2],p=Math.ceil(c/2),m=n?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],d="",x="";a&&(l?d=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?d=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:d=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");let y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",N="rc.x";e[0]<t[0]?w=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(N=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${d}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${N};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${g[0]});
          result += (${h[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${x}

        setOutput(result);
      }
    `}};var DS={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},wh=class{constructor(e,t,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=I.assertAndGetBroadcastShape(t,o),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var GO="return a * b;";function Nh(r){let{inputs:e,backend:t}=r,{a:o,b:n}=e,s=I.upcastType(o.dtype,n.dtype);if(o.dtype==="complex64"){let a=t.texData.get(o.dataId),l=t.texData.get(n.dataId),u=new wh(DS.REAL,o.shape,n.shape),c=new wh(DS.IMAG,o.shape,n.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],m=t.runWebGLProgram(u,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),h=bo({inputs:{real:m,imag:f},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),h}if(t.shouldExecuteOnCPU([o,n])){let a=t.texData.get(o.dataId),l=t.texData.get(n.dataId),[u,c]=JF(o.shape,n.shape,a.values,l.values,s),p=t.makeTensorInfo(c,s),m=t.texData.get(p.dataId);return m.values=u,p}let i;return W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Oo(GO,o.shape,n.shape):i=new yo(GO,o.shape,n.shape),t.runWebGLProgram(i,[o,n],s)}var WO={kernelName:li,backendName:"webgl",kernelFunc:Nh};function UO(r,e,t){let o=[bl(r.shape),...wl(r.shape)],n={dtype:r.dtype,shape:o,dataId:r.dataId},s=[bl(e),...wl(e)],i=new dm(s,o),a=!0,l=[o],u=t.runWebGLProgram(i,[n],r.dtype,l,a);return{dataId:u.dataId,shape:e,dtype:u.dtype}}function st(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{shape:s}=o,i=t,a=b.sizeFromShape(n.shape),l=b.inferFromImplicitShape(s,a),u=b.sizeFromShape(l);b.assert(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${n.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let c=i.texData.get(n.dataId);return c.isPacked&&!Uu(n.shape,l)&&!(c.texture!==null&&Uu(c.shape,l))?UO(n,l,i):(i.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var HO={kernelName:Wa,backendName:"webgl",kernelFunc:st};var Th=class{constructor(e,t){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:s,outSize:i}=e;this.outputShape=[n,i];let a=Math.floor(o/4)*4,l=o%4,u="sumValue += dot(values, ones);";if(t!=null){let p=1/t;u=`sumValue += dot(values * ${b.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";s%o>0&&(c=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var qx=class{constructor(e,t){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:s,outSize:i}=e;this.outputShape=[n,i];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let c=Math.floor(o/4)*4,p=o%4,m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(a="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(a="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let h="";s%o>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function ttt(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],o=I.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:o,outSize:Math.ceil(t/o)})}return e}function Po(r,e,t,o){let n=ttt(r.shape),s=r;for(let i=0;i<n.length;i++){let{inSize:a,windowSize:l,outSize:u}=n[i],c,p;t==="mean"?c=i===0?new Th({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},a):new Th({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u}):c=new qx({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},t),p=s,s=o.runWebGLProgram(c,[s],e),p.dataId!==r.dataId&&o.disposeIntermediateTensorInfo(p)}return s}var Kx=class{constructor(e,t){this.variableNames=["A"];let o=new Array(e.length);for(let i=0;i<o.length;i++)o[i]=e[t[i]];this.outputShape=o,this.rank=o.length;let n=Ft(this.rank),s=ett(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function ett(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],o=new Array(e);for(let n=0;n<r.length;n++)o[r[n]]=t[n];return o.join()}var jx=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let o=new Array(e.length);for(let c=0;c<o.length;c++)o[c]=e[t[c]];if(this.outputShape=o,this.rank=o.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=Ft(this.rank),s=CS("rc",this.rank),i=new Array(this.rank);for(let c=0;c<t.length;c++)i[t[c]]=s[c];let a=`vec2(${i.slice(-2).join()})`,l=`++${s[this.rank-1]} < ${o[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${o[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function Nl(r,e,t){let o=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jx(r.shape,e):new Kx(r.shape,e);return t.runWebGLProgram(o,[r],r.dtype)}function qO(r,e,t,o){let n=e,s=r.shape.length,i=b.parseAxisParam(n,r.shape),a=i,l=I.getAxesPermutation(a,s),u=l!=null,c=r;u&&(c=Nl(r,l,o),a=I.getInnerMostAxes(a.length,s)),I.assertAxesAreInnerMostDims("sum",a,s);let[p,m]=I.computeOutAndReduceShapes(c.shape,a),f=p;t&&(f=I.expandShapeToKeepDim(p,i));let h=b.sizeFromShape(m),d=b.sizeFromShape(r.shape)/h,x=st({inputs:{x:c},attrs:{shape:[d,h]},backend:o}),y=au(r.dtype),w=Po(x,y,"sum",o),N=st({inputs:{x:w},attrs:{shape:f},backend:o});return o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),u&&o.disposeIntermediateTensorInfo(c),N}function ju(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o;return qO(n,s,i,t)}var KO={kernelName:Xa,backendName:"webgl",kernelFunc:ju};function Ee(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{perm:s}=o,i=t,a=n.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=n.shape[s[c]];let u;if(i.shouldExecuteOnCPU([n])){let p=i.texData.get(n.dataId).values,m=Ku(p,n.shape,n.dtype,s,l);u=i.makeTensorInfo(l,n.dtype);let f=i.texData.get(u.dataId);f.values=m}else u=Nl(n,s,i);return u}var jO={kernelName:us,backendName:"webgl",kernelFunc:Ee};var _S=1e3;function Xu({a:r,b:e,transposeA:t,transposeB:o,backend:n,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=e.shape.length,p=t?r.shape[u-2]:r.shape[u-1],m=o?e.shape[c-1]:e.shape[c-2],f=t?r.shape[u-1]:r.shape[u-2],h=o?e.shape[c-2]:e.shape[c-1],g=r.shape.slice(0,-2),d=e.shape.slice(0,-2),x=b.sizeFromShape(g),y=b.sizeFromShape(d),N=Eo.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,h]);b.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${o} must match.`);let v=t?[x,p,f]:[x,f,p],k=o?[y,h,m]:[y,m,h],R=st({inputs:{x:r},backend:n,attrs:{shape:v}}),O=st({inputs:{x:e},backend:n,attrs:{shape:k}}),L=[R,O],M=Math.max(x,y),H=t?R.shape[1]:R.shape[2],q=s!=null,K=i!=null,X=l==="leakyrelu",Y=l!=null?Xi(l,!0):null,Q=q||K||X||Y!=null,et;if((f===1||h===1)&&H>_S&&Q===!1){let ot=R,it=O;t&&(ot=Ee({inputs:{x:R},backend:n,attrs:{perm:[0,2,1]}}),L.push(ot)),o&&(it=Ee({inputs:{x:O},backend:n,attrs:{perm:[0,2,1]}}),L.push(it));let at=h!==1,pt=h===1,ut=ot;at&&(ut=st({inputs:{x:ot},backend:n,attrs:{shape:[M,H,1]}}),L.push(ut));let xt=h===1?2:1,mt=it;pt&&(mt=st({inputs:{x:it},backend:n,attrs:{shape:[M,1,H]}}),L.push(mt));let bt=Nh({inputs:{a:ut,b:mt},backend:n});et=ju({inputs:{x:bt},backend:n,attrs:{axis:xt,keepDims:!0}}),L.push(bt)}else{let ot=er(r.dtype,e.dtype),it=new xm(v,k,[M,f,h],t,o,q,Y,K,X),at=[R,O];if(s!=null&&at.push(s),K&&at.push(i),X){let pt=n.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));at.push(pt),L.push(pt)}et=n.runWebGLProgram(it,at,ot)}let Z=st({inputs:{x:et},backend:n,attrs:{shape:N}});L.push(et);for(let ot of L)n.disposeIntermediateTensorInfo(ot);return Z}function rtt(r){let{inputs:e,backend:t,attrs:o}=r,{a:n,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return Xu({a:n,b:s,transposeA:l,transposeB:u,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var XO={kernelName:Ql,backendName:"webgl",kernelFunc:rtt};var YO="return abs(x);";function ott(r){let{inputs:e,backend:t}=r,{x:o}=e;if(t.shouldExecuteOnCPU([o])&&o.dtype!=="complex64"){let s=t.texData.get(o.dataId),i=Mx(s.values);return t.makeTensorInfo(o.shape,o.dtype,i)}let n;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new xo(o.shape,YO):n=new $r(o.shape,YO),t.runWebGLProgram(n,[o],o.dtype)}var ZO={kernelName:ca,backendName:"webgl",kernelFunc:ott};var ntt=ar+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,stt=wt({opSnippet:ntt}),JO={kernelName:Os,backendName:"webgl",kernelFunc:stt};var itt=ar+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,att=wt({opSnippet:itt}),QO={kernelName:Ls,backendName:"webgl",kernelFunc:att};var tL="return a + b;",ltt=re({opSnippet:tL,packedOpSnippet:tL,supportsComplex:!0,cpuKernelImpl:DF}),eL={kernelName:Fn,backendName:"webgl",kernelFunc:ltt};var Xx=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((s,i)=>`T${i}`);let o=[];this.variableNames.forEach(s=>{o.push(`float v${s} = get${s}AtOutCoords();`)});let n=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}};var Yx=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((s,i)=>`T${i}`);let o=[];this.variableNames.forEach(s=>{o.push(`vec4 v${s} = get${s}AtOutCoords();`)});let n=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function Zx(r){let{inputs:e,backend:t}=r,o=e;if(o.length===1)return je({inputs:{x:o[0]},backend:t});if(o.length>W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(o.length/2),u=Zx({inputs:o.slice(0,l),backend:t}),c=Zx({inputs:o.slice(l),backend:t});return Zx({inputs:[u,c],backend:t})}let n=o.map(l=>l.dtype).reduce((l,u)=>er(l,u)),s=o.map(l=>l.shape),a=W().getBool("WEBGL_PACK")?new Yx(o[0].shape,s):new Xx(o[0].shape,s);return t.runWebGLProgram(a,o,n)}var rL={kernelName:Cc,backendName:"webgl",kernelFunc:Zx};function utt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o,a=n.shape.length,l=b.parseAxisParam(s,n.shape),u=l,c=I.getAxesPermutation(u,a),p=n;c!=null&&(p=Ee({inputs:{x:n},backend:t,attrs:{perm:c}}),u=I.getInnerMostAxes(u.length,a)),I.assertAxesAreInnerMostDims("all",u,a);let[m,f]=I.computeOutAndReduceShapes(p.shape,u),h=b.sizeFromShape(f),g=st({inputs:{x:p},backend:t,attrs:{shape:[-1,h]}}),d=Po(g,g.dtype,"all",t),x;if(i){let y=I.expandShapeToKeepDim(m,l);x=st({inputs:{x:d},backend:t,attrs:{shape:y}})}else x=st({inputs:{x:d},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(d),c!=null&&t.disposeIntermediateTensorInfo(p),x}var oL={kernelName:Ic,backendName:"webgl",kernelFunc:utt};function ctt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o,a=n.shape.length,l=b.parseAxisParam(s,n.shape),u=l,c=I.getAxesPermutation(u,a),p=n;c!=null&&(p=Ee({inputs:{x:n},backend:t,attrs:{perm:c}}),u=I.getInnerMostAxes(u.length,a)),I.assertAxesAreInnerMostDims("any",u,a);let[m,f]=I.computeOutAndReduceShapes(p.shape,u),h=b.sizeFromShape(f),g=st({inputs:{x:p},backend:t,attrs:{shape:[-1,h]}}),d=Po(g,g.dtype,"any",t),x;if(i){let y=I.expandShapeToKeepDim(m,l);x=st({inputs:{x:d},backend:t,attrs:{shape:y}})}else x=st({inputs:{x:d},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(d),c!=null&&t.disposeIntermediateTensorInfo(p),x}var nL={kernelName:kc,backendName:"webgl",kernelFunc:ctt};var Jx=class{constructor(e,t,o){this.variableNames=["A"];let{windowSize:n,batchSize:s,outSize:i}=e;o||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];let a=t==="max"?">":"<",l=o?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var Qx=class{constructor(e,t,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,b.assert(e.length>2,()=>`Packed arg${o.charAt(0).toUpperCase()+o.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),n||this.variableNames.push("bestIndicesA");let a=this.outputShape,l=a.length,u=Ft(l),c=Ke("coords",l),p,m;if(i===1){m=l+1;let O=Ft(m);p=`
        ${O} sourceLocR = ${O}(${c.join()}, 0);
        ++${c[l-1]};
        ${O} sourceLocG = ${O}(${c.join()}, 0);
        ++${c[l-2]};
        ${O} sourceLocA = ${O}(${c.join()}, 0);
        --${c[l-1]};
        ${O} sourceLocB = ${O}(${c.join()}, 0);
        --${c[l-2]};`}else m=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),h="."+f[m-1],g=f.map(O=>"int "+O),d=Ke("sourceLocR",m-1).concat("inIdx.r"),x=Ke("sourceLocG",m-1).concat("inIdx.g"),y=Ke("sourceLocB",m-1).concat("inIdx.b"),w=Ke("sourceLocA",m-1).concat("inIdx.a"),N=o==="max"?"greaterThan":"lessThan",v=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${d.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${w.join()})));`,k=`vec4(
            getAChannel(${d.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,R=n?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${R}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${N}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function sL(r,e,t,o=null){let n=e.shape[0],s=e.shape[1];o!=null&&(n=o.shape[0],s=o.shape[1]);let i=I.computeOptimalWindowSize(s),a={windowSize:i,inSize:s,batchSize:n,outSize:Math.ceil(s/i)},l=new Jx(a,t,o==null),u=[e];o!=null&&u.push(o);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=sL(r,e,t,c);return r.disposeIntermediateTensorInfo(c),p}function iL(r,e,t,o=null){let n=o!=null?o.shape:e.shape,s=n[n.length-1],i=I.computeOptimalWindowSize(s),a=new Qx(n,i,t,o==null),l=o==null?[e]:[e,o],u=r.runWebGLProgram(a,l,"int32");if(u.shape.length===e.shape.length){let c=iL(r,e,t,u);return r.disposeIntermediateTensorInfo(u),c}return u}function ty(r,e,t,o){let n=[t];if(I.assertAxesAreInnerMostDims("arg"+o.charAt(0).toUpperCase()+o.slice(1),n,e.shape.length),!W().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],i=r.texData.get(e.dataId),a=i!==null&&i.isPacked,l=e;a&&(l=r.unpackTensor(e),s.push(l));let[u,c]=I.computeOutAndReduceShapes(l.shape,n),p=b.sizeFromShape(c),m=st({inputs:{x:l},backend:r,attrs:{shape:[-1,p]}});s.push(m);let f=sL(r,m,o);s.push(f);let h=st({inputs:{x:f},backend:r,attrs:{shape:u}});return s.forEach(g=>r.disposeIntermediateTensorInfo(g)),h}return iL(r,e,o)}function ptt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s}=o,i=b.parseAxisParam(s,n.shape),a=I.getAxesPermutation(i,n.shape.length),l=n,u=[];a!=null&&(l=Ee({inputs:{x:n},backend:t,attrs:{perm:a}}),u.push(l),i=I.getInnerMostAxes(i.length,l.shape.length)),I.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let c=ty(t,l,i[0],"max");return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var aL={kernelName:pa,backendName:"webgl",kernelFunc:ptt};function mtt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s}=o,i=b.parseAxisParam(s,n.shape),a=I.getAxesPermutation(i,n.shape.length),l=n,u=[];a!=null&&(l=Ee({inputs:{x:n},backend:t,attrs:{perm:a}}),u.push(l),i=I.getInnerMostAxes(i.length,l.shape.length)),I.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let c=ty(t,l,i[0],"min");return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var lL={kernelName:ma,backendName:"webgl",kernelFunc:mtt};var ftt=ar+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,htt=wt({opSnippet:ftt}),uL={kernelName:Ps,backendName:"webgl",kernelFunc:htt};var dtt=ar+"return log(x + sqrt(x * x + 1.0));",gtt=wt({opSnippet:dtt}),cL={kernelName:zs,backendName:"webgl",kernelFunc:gtt};var xtt=ar+`
  return atan(x);
`,ytt=wt({opSnippet:xtt}),pL={kernelName:Bs,backendName:"webgl",kernelFunc:ytt};var btt=gm+`
  return atan(a, b);
`,wtt=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Lo+`
  return result;
`,Ntt=re({opSnippet:btt,packedOpSnippet:wtt}),mL={kernelName:Vs,backendName:"webgl",kernelFunc:Ntt};var Ttt=ar+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Stt=wt({opSnippet:Ttt}),fL={kernelName:Ms,backendName:"webgl",kernelFunc:Stt};var Yn=class{constructor(e,t,o,n=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,a=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let g=t==="avg",d=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(g||(y="-1.0 / 1e-20"),o){let O=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${O} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?s?d:x:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / max(count, 1.0)");let v=Math.floor(i/4)*4,k=i%4,R=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${R}
          }

          int xC = xCCorner + ${v};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${R}
          }
        }
        setOutput(${N});
      }
    `}},Tl=class{constructor(e,t,o,n=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,a=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,p=e.dilationHeight,m=e.dilationWidth,f=e.effectiveFilterDepth,h=e.effectiveFilterHeight,g=e.effectiveFilterWidth,d=e.padInfo.front,x=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let w=t==="avg",N="0.0";if(w||(N="-1.0 / 1e-20"),o){let M=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${d}, ${x}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${M} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / max(count, 1.0)");let R=Math.floor(i/4)*4,O=i%4,L=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${d}, ${x}, ${y});
      const float initializationValue = ${N};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${N});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${R}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${L}
            }

            int xC = xCCorner + ${R};
            if (${O===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${L}
            } else if (${O===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${L}
            } else if (${O===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${L}
            }
          }
        }
        setOutput(${k});
      }
    `}};function vtt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e;Ts(n,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,u=1;b.assert(I.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=I.computePool2DInfo(n.shape,s,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))return je({inputs:{x:n},backend:t});let p=new Yn(c,"avg",!1);return t.runWebGLProgram(p,[n],"float32")}var hL={kernelName:fa,backendName:"webgl",kernelFunc:vtt};function Ctt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=o,c=[1,1,1],p=I.computePool3DInfo(n.shape,s,i,c,a,l,u),m=new Tl(p,"avg",!1);return t.runWebGLProgram(m,[n],"float32")}var dL={kernelName:ha,backendName:"webgl",kernelFunc:Ctt};var ey=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,o=e.filterWidth,n=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,p=u-1-e.padInfo.left,m=1/(t*o);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},ry=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,o=e.filterHeight,n=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterDepth,m=e.effectiveFilterHeight,f=e.effectiveFilterWidth,h=p-1-e.padInfo.front,g=m-1-e.padInfo.top,d=f-1-e.padInfo.left,x=1/(t*o*n);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${g}, ${d});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Itt(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,i=s,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],m=I.computePool3DInfo(i.shape,a,l,p,u,c),f=new ry(m);return t.runWebGLProgram(f,[n],i.dtype)}var gL={kernelName:$c,backendName:"webgl",kernelFunc:Itt};function ktt(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,i=s;Ts([n,s],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=I.computePool2DInfo(i.shape,a,l,1,u),p=new ey(c);return t.runWebGLProgram(p,[n],i.dtype)}var xL={kernelName:Ec,backendName:"webgl",kernelFunc:ktt};function Ett(r){let{inputs:e,backend:t,attrs:o}=r,{a:n,b:s}=e,{transposeA:i,transposeB:a}=o;return Xu({a:n,b:s,transposeA:i,transposeB:a,backend:t})}var yL={kernelName:da,backendName:"webgl",kernelFunc:Ett};var oy=class{constructor(e,t,o,n,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,o);let a="0.0";n!=null&&(I.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var ny=class{constructor(e,t,o,n,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,o);let a="vec4(0.0)";n!=null&&(I.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var $tt=({inputs:r,backend:e,attrs:t})=>{let{x:o,mean:n,variance:s,offset:i,scale:a}=r;b.assert(n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(a==null||n.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);let u=[o,n,s],c=null;i!=null&&(c=i.shape,u.push(i));let p=null;a!=null&&(p=a.shape,u.push(a));let m=W().getBool("WEBGL_PACK_NORMALIZATION")?new ny(o.shape,n.shape,s.shape,c,p,l):new oy(o.shape,n.shape,s.shape,c,p,l);return e.runWebGLProgram(m,u,u[0].dtype)},bL={kernelName:Ia,backendName:"webgl",kernelFunc:$tt};var sy=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=Ft(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let o=Att(this.rank),n,s=e.map((i,a)=>`sourceLoc.${RS[a]} = start[${a}] + coords.${RS[a]};`);n=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${o}));
      }
    `}},RS=["x","y","z","w","u","v"];function Att(r){if(r===1)return"sourceLoc";if(r<=6)return RS.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var iy=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Ft(this.rank),o=Ke("coords",this.rank),n=Ke("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,i=`getChannel(getSource(${n.join()}), ${s})`,a=`
      result.x = ${i};
      if (++${o[this.rank-1]} < ${e[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${i};
        --${n[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${o[this.rank-1]};
      if (++${o[this.rank-2]} < ${e[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${i};
        if (++${o[this.rank-1]} < ${e[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,p)=>`start[${p}]`).join()});`:e.map((c,p)=>`${n[p]} = ${o[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}};function Dtt(r,e,t,o){let n=o.texData.get(r.dataId),s=o.makeTensorInfo(t,r.dtype),i=o.texData.get(s.dataId);Object.assign(i,n),i.refCount=1,i.shape=t,i.dtype=r.dtype;let a=gr.computeFlatOffset(e,b.computeStrides(r.shape));n.slice&&(a+=n.slice.flatOffset),i.slice={flatOffset:a,origDataId:n.slice&&n.slice.origDataId||r.dataId};let l=o.dataRefCount.get(i.slice.origDataId)||1;return o.dataRefCount.set(i.slice.origDataId,l+1),s}function Zn(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{begin:s,size:i}=o,[a,l]=gr.parseSliceParams(n,s,i);if(gr.assertParamsValid(n,a,l),b.sizeFromShape(l)===0)return t.makeTensorInfo(l,n.dtype,[]);if(t.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=t.texData.get(n.dataId),m=uO(p.values,a,l,n.shape,n.dtype);return t.makeTensorInfo(l,n.dtype,m)}let{isPacked:u}=t.texData.get(n.dataId),c=gr.isSliceContinous(n.shape,a,l);if(u||!c){let p=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iy(l):new sy(l),m=[a];return t.runWebGLProgram(p,[n],n.dtype,m)}return t.uploadToGPU(n.dataId),Dtt(n,a,l,t)}var wL={kernelName:ja,backendName:"webgl",kernelFunc:Zn};var _tt=r=>{let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockShape:s,crops:i}=o;b.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((y,w)=>y*w),l=I.getReshaped(n.shape,s,a),u=I.getPermuted(l.length,s.length),c=I.getReshapedPermuted(n.shape,s,a),p=I.getSliceBeginCoords(i,s.length),m=I.getSliceSize(c,i,s.length),f=[],h=st({inputs:{x:n},backend:t,attrs:{shape:l}}),g=Ee({inputs:{x:h},backend:t,attrs:{perm:u}}),d=st({inputs:{x:g},backend:t,attrs:{shape:c}}),x=Zn({inputs:{x:d},backend:t,attrs:{begin:p,size:m}});return f.push(h),f.push(g),f.push(d),f.forEach(y=>t.disposeIntermediateTensorInfo(y)),x},NL={kernelName:ga,backendName:"webgl",kernelFunc:_tt};function Rtt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,weights:s}=e,{size:i}=o,a=t.readSync(n.dataId),l=t.readSync(s.dataId),u=Bx(a,l,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,u)}var TL={kernelName:Ac,backendName:"webgl",kernelFunc:Rtt};var Ftt=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Ott=`
  return float(int(a.r) & int(b.r));
`;function Ltt(r){let{inputs:e,backend:t}=r,{a:o,b:n}=e,s=W().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=W().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([o,n])||i===1){let l=t.texData.get(o.dataId).values,u=t.texData.get(n.dataId).values,[c,p]=RF(o.shape,n.shape,l,u,o.dtype),m=t.makeTensorInfo(p,o.dtype),f=t.texData.get(m.dataId);return f.values=c,m}let a;return s?a=new Oo(Ftt,o.shape,n.shape,!1):a=new yo(Ott,o.shape,n.shape),t.runWebGLProgram(a,[o,n],o.dtype)}var SL={kernelName:sf,backendName:"webgl",kernelFunc:Ltt};function Ptt(r){let{inputs:e,backend:t}=r,{s0:o,s1:n}=e,s=t.readSync(o.dataId),i=t.readSync(n.dataId),a=I.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var vL={kernelName:od,backendName:"webgl",kernelFunc:Ptt};var ztt="return float(a != b);",FS=re({opSnippet:ztt,cpuKernelImpl:tO,dtype:"bool"}),CL={kernelName:Jl,backendName:"webgl",kernelFunc:FS};function Yi(r){let{inputs:e,backend:t}=r,{input:o}=e,n=t.texData.get(o.dataId);return je({inputs:{x:n.complexTensorInfos.real},backend:t})}var IL={kernelName:ep,backendName:"webgl",kernelFunc:Yi};var Btt="return float(int(x));";function kL(r,e){let t=new $r(r.shape,Btt),o=e.runWebGLProgram(t,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function OS(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{dtype:s}=o;if(s==="complex64"){if(n.dtype==="complex64")return je({inputs:{x:n},backend:t});let i=ve(n.shape),a=OS({inputs:{x:n},backend:t,attrs:{dtype:"float32"}}),l=bo({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),l}if(n.dtype==="complex64"){let i=Yi({inputs:{input:n},backend:t}),a=OS({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(i),a}if(!b.hasEncodingLoss(n.dtype,s)){let i=je({inputs:{x:n},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(t.shouldExecuteOnCPU([n])){let i=t.texData.get(n.dataId).values,[a,l,u]=FF(i,n.shape,n.dtype,s);return t.makeTensorInfo(a,l,u)}if(s==="int32")return kL(n,t);if(s==="bool"){let i=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),l=FS({inputs:{a:n,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var EL={kernelName:is,backendName:"webgl",kernelFunc:OS};var $L="return ceil(x);",Mtt=wt({opSnippet:$L,packedOpSnippet:$L,cpuKernelImpl:OF}),AL={kernelName:Gs,backendName:"webgl",kernelFunc:Mtt};var ay=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var ly=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Vtt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{clipValueMin:s,clipValueMax:i}=o,a;W().getBool("WEBGL_PACK_CLIP")?a=new ly(n.shape):a=new ay(n.shape);let l=[[s],[i]];return t.runWebGLProgram(a,[n],n.dtype,l)}var DL={kernelName:Ws,backendName:"webgl",kernelFunc:Vtt};var uy=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function _L(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function Gtt(r){let{inputs:e,backend:t}=r,{x:o}=e,n=t.texData.get(o.dataId),s=new uy(o.shape),i=[_L(o,n.complexTensorInfos.real),_L(o,n.complexTensorInfos.imag)];return t.runWebGLProgram(s,i,i[0].dtype)}var RL={kernelName:xa,backendName:"webgl",kernelFunc:Gtt};var cy=class{constructor(e){this.outputShape=[],this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((i,a)=>`T${a}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];let o=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){let a=t[i-1];o.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}let n=t.length,s=t[t.length-1];o.push(`else setOutput(getT${n}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${o.join(`
        `)}
      }
    `}};var my=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=I.computeOutShape(e,t);let o=this.outputShape,n=o.length,s=Ft(n),i=Ke("coords",n),a=["x","y","z","w","u","v"].slice(0,n);this.variableNames=e.map((g,d)=>`T${d}`);let l=new Array(e.length-1);l[0]=e[0][t];for(let g=1;g<l.length;g++)l[g]=l[g-1]+e[g][t];let u=a[t],c=a.slice(-2),p=a.join(),m=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let g=1;g<l.length;g++){let d=l[g-1];m+=`
        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${py(a,u,d)}),
            vec2(${py(c,u,d)}));
        }`}let f=l.length,h=l[l.length-1];m+=`
        return getChannel(
          getT${f}(${py(a,u,h)}),
          vec2(${py(c,u,h)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[n-1]} = ${i[n-1]} + 1;
        if (${i[n-1]} < ${o[n-1]}) {
          result.g = getValue(${i});
        }

        ${i[n-2]} = ${i[n-2]} + 1;
        if (${i[n-2]} < ${o[n-2]}) {
          result.a = getValue(${i});
        }

        ${i[n-1]} = ${i[n-1]} - 1;
        if (${i[n-2]} < ${o[n-2]} &&
            ${i[n-1]} < ${o[n-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}};function py(r,e,t){let o=r.indexOf(e);return r.map((s,i)=>i===o?`${s} - ${t}`:s).join()}function Yu(r){let{inputs:e,backend:t}=r,{input:o}=e,n=t.texData.get(o.dataId);return je({inputs:{x:n.complexTensorInfos.imag},backend:t})}var FL={kernelName:Kc,backendName:"webgl",kernelFunc:Yu};function ym(r,e,t){let o=r[0].dtype;if(o==="complex64"){let f=r.map(y=>Yi({inputs:{input:y},backend:t})),h=r.map(y=>Yu({inputs:{input:y},backend:t})),g=ym(f,e,t),d=ym(h,e,t),x=bo({inputs:{real:g,imag:d},backend:t});return f.forEach(y=>t.disposeIntermediateTensorInfo(y)),h.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(d),x}let n=t.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let f=r.map(N=>{let k=[-1,b.sizeFromShape(N.shape.slice(e))];return st({inputs:{x:N},backend:t,attrs:{shape:k}})}),h=f.map(N=>({vals:t.readSync(N.dataId),shape:N.shape})),g=I.computeOutShape(f.map(N=>N.shape),1),d=f[0].shape[0]===1,x=LF(h,g,o,d),y=I.computeOutShape(r.map(N=>N.shape),e),w=t.makeTensorInfo(y,o,x);return f.forEach(N=>t.disposeIntermediateTensorInfo(N)),w}let s=r.filter(f=>b.sizeFromShape(f.shape)>0),i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let f=i?new $r(r[0].shape,Ss):new xo(r[0].shape,Ss);return t.runWebGLProgram(f,r,o)}let a=W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>a){let f=[];for(let g=0;g<s.length;g+=a){let d=s.slice(g,g+a);f.push(ym(d,e,t))}let h=ym(f,e,t);for(let g of f)t.disposeIntermediateTensorInfo(g);return h}if(i){let f=new my(s.map(h=>h.shape),e);return t.runWebGLProgram(f,s,o)}let{tensors2D:l,outShape:u}=Wtt(s,e,t),c=new cy(l.map(f=>f.shape)),p=t.runWebGLProgram(c,l,o);l.forEach(f=>t.disposeIntermediateTensorInfo(f));let m=st({inputs:{x:p},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(p),m}function Wtt(r,e,t){let o=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>st({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:o}}function LS(r){let{inputs:e,backend:t,attrs:o}=r,{axis:n}=o,s=b.parseAxisParam(n,e[0].shape)[0],i=e.map(u=>u.shape);I.assertParamsConsistent(i,s);let a=I.computeOutShape(e.map(u=>u.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let l=e.filter(u=>b.sizeFromShape(u.shape)>0);return l.length===1?je({inputs:{x:l[0]},backend:t}):ym(l,s,t)}var OL={kernelName:ya,backendName:"webgl",kernelFunc:LS};var bm=class{constructor(e,t=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let i=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,p=e.dilationWidth,m=e.filterHeight,f=e.filterWidth,h=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,d=e.dataFormat==="channelsLast",x=d?1:2,y=d?2:3,w=d?3:1,N="",v="";o&&(n?N=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?N=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:N=`
          float activation(float x) {
            ${o}
          }
        `,v="result = activation(result);");let k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${N}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${d}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${d}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${d}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${d}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${v}
        setOutput(result);
      }
    `}},fy=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,o=e.padInfo.top,n=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,p=e.filterDepth,m=e.filterHeight,f=e.filterWidth,h=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${o}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var wm=class{constructor(e,t=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ce(this.outputShape.length);let i=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,p=c,m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let d=0;d<c;d++)m+=`
           vec4 xTexelC${d*2};
           int xTexelC${d*2}Ready;
           vec4 xTexelC${d*2+1};
           int xTexelC${d*2+1}Ready;
           vec4 xC${d};`;m+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let d=0;d<c;d++)m+=`
           xTexelC${d*2} = vec4(0.0);
           xTexelC${d*2}Ready = 0;
           xTexelC${d*2+1} = vec4(0.0);
           xTexelC${d*2+1}Ready = 0;
           xC${d} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let d=0;d<(p+1)/2;d++){let x=d*2;if(m+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<c&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?m+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<c)){let y=i%2===0?b.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:m+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):y===1?m+=`
                     xC${x+1} = xTexelC${x};
                     `:m+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<c&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<c&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<c&&(m+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<c&&(m+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<c&&(m+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let f="",h="";o&&(n?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${o}
         }`:s?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${o}
         }`:f=`vec4 activation(vec4 x) {
           ${o}
         }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${h}
         setOutput(result);
       }
     `}};var hy=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length);let{dataFormat:o}=t,n=Le(),s=o==="channelsLast",i=s?1:2,a=s?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,u="";for(let c=0;c<=1;c++)for(let p=0;p<=1;p++)u+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${n.output} = result;
      }
    `}};function dy(r,e){let t=r.length;return t>=3?e?[...r.slice(0,-3),r[t-3]*r[t-2],r[t-1]]:[...r.slice(0,-3),r[t-3],r[t-2]*r[t-1]]:!e&&t===1&&r[0]>1?[r[0],1]:null}function gy({x:r,filter:e,convInfo:t,backend:o,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let l=r.shape,u=o.texData.get(r.dataId),c=t.inChannels,p=l[0]*l[1]*l[2],m=t.outChannels,f=t.dataFormat==="channelsLast",h=!1,g=!1,d,x=[];if(s!=null){let N=dy(s.shape,f);N!=null&&(s=st({inputs:{x:s},backend:o,attrs:{shape:N}}),x.push(s))}if(n!=null){let N=dy(n.shape,f);N!=null&&(n=st({inputs:{x:n},backend:o,attrs:{shape:N}}),x.push(n))}if(!((p===1||m===1)&&c>_S)&&u.isPacked&&f&&u.texture!=null&&l[2]%2!==0&&b.arraysEqual(u.shape.slice(-3),l.slice(-3))){let N=l[0]*l[1]*(l[2]+1),v={dataId:r.dataId,shape:[1,N,t.inChannels],dtype:r.dtype},k=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,b.assert(Uu(u.shape,v.shape),()=>`packed reshape ${u.shape} to ${v.shape} isn't free`);let R=st({inputs:{x:e},backend:o,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(R);let O=Xu({a:v,b:R,backend:o,transposeA:h,transposeB:g,bias:n,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),L=o.texData.get(O.dataId);b.assert(L.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=k,L.shape=t.outShape,d=je({inputs:{x:O},backend:o}),d.shape=t.outShape,x.push(O)}else{let N=t.outHeight*t.outWidth,v=st({inputs:{x:r},backend:o,attrs:{shape:f?[t.batchSize,N,t.inChannels]:[t.batchSize,t.inChannels,N]}}),k=st({inputs:{x:e},backend:o,attrs:{shape:[1,t.inChannels,t.outChannels]}}),R=Xu({a:f?v:k,b:f?k:v,transposeA:!f,transposeB:g,backend:o,bias:n,activation:a,preluActivationWeights:s,leakyreluAlpha:i});d=st({inputs:{x:R},backend:o,attrs:{shape:t.outShape}}),x.push(v),x.push(k),x.push(R)}for(let N of x)o.disposeIntermediateTensorInfo(N);return d}function xy({x:r,filter:e,convInfo:t,backend:o,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:m,dataFormat:f}=t,h=f==="channelsLast",g=l*u*c,d=m*p,x=[t.batchSize,g,d],y=!0,w=!1,N=[];if(s!=null){let Z=dy(s.shape,h);Z!=null&&(s=st({inputs:{x:s},backend:o,attrs:{shape:Z}}),N.push(s))}if(n!=null){let Z=dy(n.shape,h);Z!=null&&(n=st({inputs:{x:n},backend:o,attrs:{shape:Z}}),N.push(n))}let v=st({inputs:{x:e},backend:o,attrs:{shape:[1,g,b.sizeFromShape(e.shape)/g]}});N.push(v);let k=new hy(x,t),R=[r.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],O=o.runWebGLProgram(k,[r],"float32",R),L=st({inputs:{x:O},backend:o,attrs:{shape:x}});N.push(O),N.push(L);let M=n!=null,H=s!=null,q=a==="leakyrelu",K=a?Xi(a,!0):null,X=new xm(h?L.shape:v.shape,h?v.shape:L.shape,h?[t.batchSize,d,t.outChannels]:[t.batchSize,t.outChannels,d],y,w,M,K,H,q),Y=h?[L,v]:[v,L];if(n&&Y.push(n),H&&Y.push(s),q){let Z=o.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));Y.push(Z),N.push(Z)}let Q=o.runWebGLProgram(X,Y,"float32"),et=st({inputs:{x:Q},backend:o,attrs:{shape:t.outShape}});N.push(Q);for(let Z of N)o.disposeIntermediateTensorInfo(Z);return et}function Utt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(n.shape,s.shape,i,u,a,c,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=gy({x:n,filter:s,convInfo:m,backend:t});else if(m.strideWidth<=2&&p==="channelsLast"&&W().getBool("WEBGL_EXP_CONV")){let g=new wm(m),d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];f=t.runWebGLProgram(g,[n,s],"float32",d)}else if(W().getBool("WEBGL_CONV_IM2COL"))f=xy({x:n,filter:s,convInfo:m,backend:t});else{let g=new bm(m);f=t.runWebGLProgram(g,[n,s],"float32")}let h=st({inputs:{x:f},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(f),h}var LL={kernelName:ba,backendName:"webgl",kernelFunc:Utt};var yy=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,o=e.strideWidth,n=e.padInfo.top,s=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},by=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,o=e.filterWidth,n=e.strideHeight,s=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=o-1-e.padInfo.left,u=i?1:2,c=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},wy=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,o=e.strideHeight,n=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${o} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ny=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,o=e.filterHeight,n=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,u=o-1-e.padInfo.top,c=n-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${o}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${o} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Htt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(n.shape,c,i,1,a,u,!1,p),f=new yy(m);return t.runWebGLProgram(f,[n,s],"float32")}var PL={kernelName:_c,backendName:"webgl",kernelFunc:Htt};var Ty=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ce(this.outputShape.length);let t=e.filterHeight,o=e.filterWidth,n=t-1-e.padInfo.top,s=o-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            int wCPerm = ${o} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function qtt(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(i,s.shape,a,1,l,c,!1,p);if(W().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){let f=[[m.strideHeight,m.strideWidth]],h=new Ty(m);return t.runWebGLProgram(h,[n,s],"float32",f)}else{let f=new by(m);return t.runWebGLProgram(f,[n,s],"float32")}}var zL={kernelName:wa,backendName:"webgl",kernelFunc:qtt};function Ktt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:i,pad:a,dilations:l}=o,u=I.computeConv3DInfo(n.shape,s.shape,i,l,a),c=new fy(u);return t.runWebGLProgram(c,[n,s],"float32")}var BL={kernelName:Na,backendName:"webgl",kernelFunc:Ktt};function jtt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:i,pad:a,filterShape:l}=o,u=I.computeConv3DInfo(n.shape,l,i,1,a),c=new wy(u);return t.runWebGLProgram(c,[n,s],"float32")}var ML={kernelName:Rc,backendName:"webgl",kernelFunc:jtt};function Xtt(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{pad:i,strides:a,inputShape:l}=o,u=I.computeConv3DInfo(l,s.shape,a,1,i),c=new Ny(u);return t.runWebGLProgram(c,[n,s],"float32")}var VL={kernelName:Fc,backendName:"webgl",kernelFunc:Xtt};var Ytt=vn+`
  return cos(x);
`,Ztt=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Lo}
  return result;
`,Jtt=wt({opSnippet:Ytt,packedOpSnippet:Ztt}),GL={kernelName:Us,backendName:"webgl",kernelFunc:Jtt};var Qtt=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,tet=wt({opSnippet:Qtt}),WL={kernelName:Hs,backendName:"webgl",kernelFunc:tet};var Sy=class{constructor(e,t,o,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,a,l,u]=e,[c]=t,[p,m]=o;this.outputShape=[c,p,m,u];let f=n==="bilinear"?1:0,[h,g]=[`${a-1}.0`,`${l-1}.0`],[d,x,y]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[w,N,v]=m>1?[`${(l-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${d});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${N};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var eet=r=>{let{inputs:e,backend:t,attrs:o}=r,{image:n,boxes:s,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=o,c=new Sy(n.shape,s.shape,a,l,u);return t.runWebGLProgram(c,[n,s,i],"float32")},UL={kernelName:Lc,backendName:"webgl",kernelFunc:eet};var Nm=function(r){return r.Prod="*",r.Sum="+",r}(Nm||{}),Sh=class{constructor(e,t,o,n){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,i=this.op===Nm.Prod?"1.0":"0.0",a=o?i:`getX(${HL(s,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],u="",c="";o?(u=n?`end != ${l-1}`:"end != 0",c=n?"end + 1":"end - 1"):(u=n?`end + pow2 < ${l}`:"end >= pow2",c=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ft(s)} coords = getOutputCoords();
        int end = ${qL(s,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${qL(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${HL(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function HL(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function qL(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function vy(r,e,t,o,n,s){let i=e.shape.length,a=I.getAxesPermutation([o],i),l=e;a!=null&&(l=Ee({inputs:{x:e},backend:t,attrs:{perm:a}}));let u=I.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${o}`);let c=l.shape[u],p=je({inputs:{x:l},backend:t});for(let m=0;m<=Math.ceil(Math.log2(c))-1;m++){let f=new Sh(r,l.shape,!1,s),h=[[m]],g=p;p=t.runWebGLProgram(f,[p],p.dtype,h),t.disposeIntermediateTensorInfo(g)}if(n){let m=new Sh(r,l.shape,n,s),f=p;p=t.runWebGLProgram(m,[p],p.dtype),t.disposeIntermediateTensorInfo(f)}if(a!=null){let m=I.getUndoAxesPermutation(a),f=Ee({inputs:{x:p},backend:t,attrs:{perm:m}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(l),f}return p}function ret(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,exclusive:i,reverse:a}=o;return vy(Nm.Prod,n,t,s,i,a)}var KL={kernelName:Oc,backendName:"webgl",kernelFunc:ret};function oet(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,exclusive:i,reverse:a}=o;return vy(Nm.Sum,n,t,s,i,a)}var jL={kernelName:Ta,backendName:"webgl",kernelFunc:oet};function net(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,weights:s}=e,{size:i,binaryOutput:a}=o;if(n.shape.length===1){let l=t.readSync(n.dataId),u=t.readSync(s.dataId),c=Bx(l,u,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,c)}else if(n.shape.length===2){let l=t.bufferSync(n),u=t.bufferSync(s),c=_F(l,u,i,a);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var XL={kernelName:Pc,backendName:"webgl",kernelFunc:net};var Cy=class{constructor(e,t,o){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=o,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function set(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockSize:s,dataFormat:i}=o,a=n.shape[0],l=i==="NHWC"?n.shape[1]:n.shape[2],u=i==="NHWC"?n.shape[2]:n.shape[3],c=i==="NHWC"?n.shape[3]:n.shape[1],p=l*s,m=u*s,f=c/(s*s),h=i==="NHWC"?[a,p,m,f]:[a,f,p,m],g=new Cy(h,s,i);return t.runWebGLProgram(g,[n],n.dtype)}var YL={kernelName:zc,backendName:"webgl",kernelFunc:set};var Tm=class{constructor(e,t=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ce(this.outputShape.length);let i=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels,u="",c="";o&&(n?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:u=`
          float activation(float x) {
            ${o}
          }
        `,c="result = activation(result);");let p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${c}
        setOutput(result);
      }
    `}};var Sm=class{constructor(e,t=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ce(this.outputShape.length);let i=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,p=e.filterWidth,m=p,f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<p;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let x=0;x<p;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(m+1)/2;x++){let y=x*2;if(f+=`
          xC = xCCorner + ${y*u};
          `,l===1){if(y<p&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,u===1&&y>0?f+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<p)){let w=a%2===0?b.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,u>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:f+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):w===1?f+=`
                    xC${y+1} = xTexelC${y};
                    `:f+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<p&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<p&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<p&&(f+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<p&&(f+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<p&&(f+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let h="",g="";o&&(n?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:h=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${d}
        ${g}
        setOutput(result);
      }
    `}};function iet(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=o,c=l;c==null&&(c=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let p=I.computeConv2DInfo(n.shape,s.shape,i,c,a,u,!0),m;W().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new Sm(p):m=new Tm(p);let f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return t.runWebGLProgram(m,[n,s],"float32",f)}var ZL={kernelName:Sa,backendName:"webgl",kernelFunc:iet};var Iy=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,o=e.strideWidth,n=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},ky=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,o=e.filterWidth,n=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=o-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function aet(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,dy:s}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o,p=I.computeConv2DInfo(n.shape,c,i,a,l,u,!0),m=new Iy(p);return t.runWebGLProgram(m,[n,s],"float32")}var JL={kernelName:Bc,backendName:"webgl",kernelFunc:aet};function uet(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,filter:s}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o,p=I.computeConv2DInfo(c,s.shape,i,a,l,u,!0),m=new ky(p);return t.runWebGLProgram(m,[n,s],"float32")}var QL={kernelName:Mc,backendName:"webgl",kernelFunc:uet};var Ey=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function cet(r){let{inputs:e,backend:t}=r,{x:o}=e,n=[...o.shape,...o.shape],s=b.sizeFromShape(o.shape),i=st({inputs:{x:o},backend:t,attrs:{shape:[s]}}),a=new Ey(s),l=t.runWebGLProgram(a,[i],i.dtype),u=st({inputs:{x:l},backend:t,attrs:{shape:n}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}var tP={kernelName:nd,backendName:"webgl",kernelFunc:cet};var $y=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:o,padInfo:n,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:p,left:m}=n;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${o}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function pet(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s}=e,{strides:i,pad:a,dilations:l}=o,u=I.computeDilation2DInfo(n.shape,s.shape,i,a,"NHWC",l),c,p=new $y(u);c=t.runWebGLProgram(p,[n,s],"float32");let m=st({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),m}var eP={kernelName:va,backendName:"webgl",kernelFunc:pet};function met(r){let{inputs:e,backend:t,attrs:o}=r,{equation:n}=o,s=e,{allDims:i,summedDims:a,idDims:l}=I.decodeEinsumEquation(n,s.length);I.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:c}=I.getEinsumComputePath(a,l),p=c.length,m=null,f=i.length,h=[];for(let g=0;g<p;++g){for(let d of c[g]){let{permutationIndices:x,expandDims:y}=I.getEinsumPermutation(f,l[d]),w;I.isIdentityPermutation(x)?w=s[d]:(w=Ee({inputs:{x:s[d]},backend:t,attrs:{perm:x}}),h.push(w));let N=w.shape.slice();for(let v=0;v<y.length;++v)N.splice(y[v],0,1);b.arraysEqual(w.shape,N)||(w=st({inputs:{x:w},backend:t,attrs:{shape:N}}),h.push(w)),m===null?m=w:(m=Nh({inputs:{a:w,b:m},backend:t}),h.push(m))}g<p-1&&(u[g]>=0&&(m=ju({inputs:{x:m},backend:t,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),h.push(m)),f--)}for(let g of h)g!==m&&t.disposeIntermediateTensorInfo(g);return m}var rP={kernelName:Vc,backendName:"webgl",kernelFunc:met};var fet="return (x >= 0.0) ? x : (exp(x) - 1.0);",het=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,det=wt({opSnippet:fet,packedOpSnippet:het}),oP={kernelName:Ks,backendName:"webgl",kernelFunc:det};var get="return (b >= 0.0) ? a : a * (b + 1.0);",xet=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,yet=r=>{let{inputs:e,backend:t}=r,{dy:o,y:n}=e,s=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Oo(xet,o.shape,n.shape):new yo(get,o.shape,n.shape);return t.runWebGLProgram(s,[o,n],o.dtype)},nP={kernelName:Gc,backendName:"webgl",kernelFunc:yet};var bet=`
  return vec4(equal(a, b));
`,wet="return float(a == b);",Net=re({opSnippet:wet,packedOpSnippet:bet,dtype:"bool",cpuKernelImpl:PF}),sP={kernelName:Hl,backendName:"webgl",kernelFunc:Net};var Tet=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${I.ERF_P};
  float a1 = ${I.ERF_A1};
  float a2 = ${I.ERF_A2};
  float a3 = ${I.ERF_A3};
  float a4 = ${I.ERF_A4};
  float a5 = ${I.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,vet=wt({opSnippet:Tet}),iP={kernelName:js,backendName:"webgl",kernelFunc:vet};var Cet=vn+`
  return exp(x);
`,Iet=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,PS=wt({opSnippet:Cet,packedOpSnippet:Iet,cpuKernelImpl:zF,dtype:"float32"}),aP={kernelName:Xs,backendName:"webgl",kernelFunc:PS};function Ay(r){let{inputs:e,attrs:t,backend:o}=r,{dim:n}=t,{input:s}=e,i=s.shape.length,a=s.shape.slice(),l=n;return n<0&&(b.assert(-(i+1)<=n,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+n+1),a.splice(l,0,1),st({inputs:{x:s},backend:o,attrs:{shape:a}})}var lP={kernelName:Ca,backendName:"webgl",kernelFunc:Ay};var uP="return exp(x) - 1.0;",ket=wt({opSnippet:uP,packedOpSnippet:uP,cpuKernelImpl:BF}),cP={kernelName:Ys,backendName:"webgl",kernelFunc:ket};var vh=class{constructor(e,t,o){this.variableNames=["real","imag"];let n=t[1];this.outputShape=t;let s=o?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=o?`${n}.0`:"1.0",a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function Dy(r,e,t){let o=t.texData.get(r.dataId),n=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=n/s,a=st({inputs:{x:r},backend:t,attrs:{shape:[i,s]}}),l=a.shape,u=new vh("real",l,e),c=new vh("imag",l,e),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:l},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:l}],m=t.runWebGLProgram(u,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),h=bo({inputs:{real:m,imag:f},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f);let g=st({inputs:{x:h},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(h),g}function Eet(r){let{inputs:e,backend:t}=r,{input:o}=e;return Dy(o,!1,t)}var pP={kernelName:Wc,backendName:"webgl",kernelFunc:Eet};var _y=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Zi(r){let{backend:e,attrs:t}=r,{shape:o,value:n}=t,{dtype:s}=t;if(s=s||b.inferDtype(n),s==="string"){let i=b.getArrayFromDType(s,b.sizeFromShape(o));return i.fill(n),e.makeTensorInfo(o,s,i)}else{let i=new _y(o,n),a=[[n]];return e.runWebGLProgram(i,[],s,a)}}var mP={kernelName:Uc,backendName:"webgl",kernelFunc:Zi};var Ry=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var fP={kernelName:Hc,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,o=e,n=new Ry(t.shape);return o.runWebGLProgram(n,[t],t.dtype)}};var hP="return floor(x);",$et=wt({opSnippet:hP,packedOpSnippet:hP,cpuKernelImpl:MF}),dP={kernelName:Zs,backendName:"webgl",kernelFunc:$et};var Aet=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Det=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,_et=re({opSnippet:Aet,packedOpSnippet:Det,dtype:"int32"}),gP={kernelName:Js,backendName:"webgl",kernelFunc:_et};var Fy=class{constructor(e){this.variableNames=["A"];let t=Le(),[o,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${o}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var Oy=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Le(),[o,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${o}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var xP={kernelName:b1,backendName:"webgl",kernelFunc:Ret},vm,zS=W().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Ret(r){let{inputs:e,backend:t,attrs:o}=r,{pixels:n}=e,{numChannels:s}=o,i=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,[l,u]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height],c=[u,l],p=[u,l,s];if(a||i){let g=W().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(vm==null||g!==zS)&&(zS=g,vm=document.createElement("canvas").getContext("2d",{willReadFrequently:zS})),vm.canvas.width=l,vm.canvas.height=u,vm.drawImage(n,0,0,l,u),n=vm.canvas}let m=t.makeTensorInfo(c,"int32");t.texData.get(m.dataId).usage=Hr.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(m.dataId),n);let f=W().getBool("WEBGL_PACK")?new Oy(p):new Fy(p),h=t.runWebGLProgram(f,[m],"int32");return t.disposeData(m.dataId),h}function Fet(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,g=I.convertConv2DDataFormat(c),d=I.computeConv2DInfo(n.shape,s.shape,l,p,u,m,!1,g),x,y=[],w=i!=null,N=a!=null,v=f==="leakyrelu",k=()=>{let O=[n,s],L=(M,H)=>{if(H==="NCHW"&&M.shape.length===1&&M.shape[0]!==1){let q=st({inputs:{x:M},backend:t,attrs:{shape:[M.shape[0],1,1]}});return y.push(q),q}return M};if(w&&O.push(L(i,c)),N&&O.push(L(a,c)),v){let M=t.makeTensorInfo([],"float32",b.createScalarValue(h,"float32"));O.push(M),y.push(M)}return O};if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))x=gy({x:n,filter:s,convInfo:d,backend:t,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:h});else if(d.strideWidth<=2&&g==="channelsLast"&&W().getBool("WEBGL_EXP_CONV")){let O=f?Xi(f,!0):null,L=new wm(d,w,O,N,v),M=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]],H=k();x=t.runWebGLProgram(L,H,"float32",M)}else if(W().getBool("WEBGL_CONV_IM2COL"))x=xy({x:n,filter:s,convInfo:d,backend:t,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:h});else{let O=f?Xi(f,!1):null,L=new bm(d,w,O,N,v),M=k();x=t.runWebGLProgram(L,M,"float32")}let R=st({inputs:{x},backend:t,attrs:{shape:d.outShape}});return y.push(x),y.forEach(O=>t.disposeIntermediateTensorInfo(O)),R}var yP={kernelName:tu,backendName:"webgl",kernelFunc:Fet};function Oet(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=o,h=[],g=c;g==null&&(g=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);let d=I.computeConv2DInfo(n.shape,s.shape,l,g,u,p,!0),x=W().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1,y=m?Xi(m,x):null,w=[n,s],N=i!=null,v=a!=null,k=m==="leakyrelu";if(N&&w.push(i),v&&w.push(a),k){let M=t.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));w.push(M),h.push(M)}let R;x?R=new Sm(d,N,y,v,k):R=new Tm(d,N,y,v,k);let O=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]],L=t.runWebGLProgram(R,w,"float32",O);return h.forEach(M=>t.disposeIntermediateTensorInfo(M)),L}var bP={kernelName:eu,backendName:"webgl",kernelFunc:Oet};var Ly=class{constructor(e,t,o,n){this.sliceDim=e,this.strides=t,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=o;let s=Ft(o.length),i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function Let(r){let{inputs:e,backend:t}=r,{params:o,indices:n}=e,s=n.shape,i=s[s.length-1],a=b.sizeFromShape(o.shape),[l,u,c,p]=I.prepareAndValidate(o,n),m=st({inputs:{x:n},backend:t,attrs:{shape:[u,i]}}),f=st({inputs:{x:o},backend:t,attrs:{shape:[b.sizeFromShape(o.shape)/c,c]}});if(t.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let x=t.readSync(n.dataId),y=t.bufferSync(o),w=VF(x,y,o.dtype,u,i,c,p,o.shape,a);return t.makeTensorInfo(l,o.dtype,w.values)}let h=new Ly(i,p,[u,c],o.shape),g=t.runWebGLProgram(h,[f,m],f.dtype),d=st({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),d}var wP={kernelName:sd,backendName:"webgl",kernelFunc:Let};var Py=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let o=Ft(this.rank),n=Pet(e,2);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function Pet(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r.length;n++)n===2?o.push("index"):o.push(`${t[n]}`);return o.join()}function BS(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,indices:s}=e,{axis:i,batchDims:a}=o,l=b.parseAxisParam(i,n.shape)[0];if(W().get("DEBUG")){let y=t.readSync(s.dataId),w=n.shape[l];for(let N=0;N<y.length;++N){let v=y[N];b.assert(v<=w-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${w-1}]`)}}let u=I.segment_util.collectGatherOpShapeInfo(n,s,l,a),c=b.sizeFromShape(s.shape),p=[],m=st({inputs:{x:n},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=st({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(m),p.push(f);let h=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([n,s])||n.dtype==="string"){let y=t.bufferSync(f),w=t.bufferSync(m),N=GF(w,y,h);return p.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.makeTensorInfo(u.outputShape,N.dtype,N.values)}let g=new Py(m.shape,h),d=t.runWebGLProgram(g,[m,f],m.dtype);p.push(d);let x=st({inputs:{x:d},backend:t,attrs:{shape:u.outputShape}});return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),x}var NP={kernelName:ka,backendName:"webgl",kernelFunc:BS};var zet="return float(a > b);",Bet=`
  return vec4(greaterThan(a, b));
`,Met=re({opSnippet:zet,packedOpSnippet:Bet,cpuKernelImpl:WF,dtype:"bool"}),TP={kernelName:ql,backendName:"webgl",kernelFunc:Met};var Vet="return float(a >= b);",Get=`
  return vec4(greaterThanEqual(a, b));
`,Wet=re({opSnippet:Vet,packedOpSnippet:Get,dtype:"bool",cpuKernelImpl:UF}),SP={kernelName:Qs,backendName:"webgl",kernelFunc:Wet};function Uet(r){let{inputs:e,backend:t}=r,{input:o}=e;return Dy(o,!0,t)}var vP={kernelName:qc,backendName:"webgl",kernelFunc:Uet};var Het="return float(!isnan(x) && !isinf(x));",qet=wt({opSnippet:Het,dtype:"bool"}),CP={kernelName:ti,backendName:"webgl",kernelFunc:qet};var Ket="return float(isinf(x));",jet=wt({opSnippet:Ket,dtype:"bool"}),IP={kernelName:ei,backendName:"webgl",kernelFunc:jet};var Xet="return float(isnan(x));",Yet=wt({opSnippet:Xet,dtype:"bool"}),kP={kernelName:ri,backendName:"webgl",kernelFunc:Yet};var Zet="return float(a < b);",Jet=`
  return vec4(lessThan(a, b));
`,Qet=re({opSnippet:Zet,packedOpSnippet:Jet,cpuKernelImpl:HF,dtype:"bool"}),EP={kernelName:Kl,backendName:"webgl",kernelFunc:Qet};var trt="return float(a <= b);",ert=`
  return vec4(lessThanEqual(a, b));
`,rrt=re({opSnippet:trt,packedOpSnippet:ert,cpuKernelImpl:qF,dtype:"bool"}),$P={kernelName:jl,backendName:"webgl",kernelFunc:rrt};function ort(r){let{backend:e,attrs:t}=r,{start:o,stop:n,num:s}=t,i=KF(o,n,s);return e.makeTensorInfo([i.length],"float32",i)}var AP={kernelName:id,backendName:"webgl",kernelFunc:ort};var nrt=vn+`
  return x < 0.0 ? 0./0. : log(x);
`,srt=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,irt=wt({opSnippet:nrt,packedOpSnippet:srt,cpuKernelImpl:jF}),DP={kernelName:oi,backendName:"webgl",kernelFunc:irt};var art=vn+`
  return log(1.0 + x);
`,lrt=wt({opSnippet:art}),_P={kernelName:ni,backendName:"webgl",kernelFunc:lrt};var urt="return float(a >= 1.0 && b >= 1.0);",crt=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,prt=re({opSnippet:urt,packedOpSnippet:crt,dtype:"bool"}),RP={kernelName:Xl,backendName:"webgl",kernelFunc:prt};var mrt="return float(!(x >= 1.0));",frt=wt({opSnippet:mrt}),FP={kernelName:Yl,backendName:"webgl",kernelFunc:frt};var hrt="return float(a >= 1.0 || b >= 1.0);",drt=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,grt=re({opSnippet:hrt,packedOpSnippet:drt,dtype:"bool"}),OP={kernelName:Zl,backendName:"webgl",kernelFunc:grt};var zy=class{constructor(e,t,o,n,s){this.variableNames=["x"],this.outputShape=[];let i=t,a=e[3]-1;this.outputShape=e;let l,u=`float(${o}) + float(${n}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var By=class{constructor(e,t,o,n,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=t,a=e[3]-1;this.outputShape=e;let l,u=`float(${o}) + float(${n}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var xrt=r=>{let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{depthRadius:s,bias:i,alpha:a,beta:l}=o,u=W().getBool("WEBGL_PACK_NORMALIZATION")?new By(n.shape,s,i,a,l):new zy(n.shape,s,i,a,l);return t.runWebGLProgram(u,[n],n.dtype)},LP={kernelName:$a,backendName:"webgl",kernelFunc:xrt};var My=class{constructor(e,t,o,n,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=o,this.alpha=n,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${o});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${s})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var yrt=r=>{let{inputs:e,backend:t,attrs:o}=r,{x:n,y:s,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=o,p=new My(n.shape,a,l,u,c);return t.runWebGLProgram(p,[n,s,i],n.dtype)},PP={kernelName:jc,backendName:"webgl",kernelFunc:yrt};function zP(r,e,t,o){let n=b.sizeFromShape(e),i=b.sizeFromShape(r.shape)/n,a=st({inputs:{x:r},attrs:{shape:[i,n]},backend:o}),l=Po(a,r.dtype,"max",o),u=st({inputs:{x:l},attrs:{shape:t},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}function MS(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{reductionIndices:s,keepDims:i}=o,a=n.shape.length,l=b.parseAxisParam(s,n.shape),u=l,c=I.getAxesPermutation(u,a),p=c!=null,m=t.shouldExecuteOnCPU([n]),f=n;if(p){if(m){let w=t.texData.get(f.dataId).values,N=new Array(a);for(let R=0;R<N.length;R++)N[R]=n.shape[c[R]];let v=Ku(w,n.shape,n.dtype,c,N);f=t.makeTensorInfo(N,n.dtype);let k=t.texData.get(f.dataId);k.values=v}else f=Nl(n,c,t);u=I.getInnerMostAxes(u.length,a)}I.assertAxesAreInnerMostDims("max",u,a);let[h,g]=I.computeOutAndReduceShapes(f.shape,u),d=h;i&&(d=I.expandShapeToKeepDim(h,l));let x;if(m){let w=t.texData.get(f.dataId).values,N=XF(w,b.sizeFromShape(g),d,n.dtype);x=t.makeTensorInfo(d,n.dtype);let v=t.texData.get(x.dataId);v.values=N}else x=zP(f,g,d,t);return p&&t.disposeIntermediateTensorInfo(f),x}var BP={kernelName:Aa,backendName:"webgl",kernelFunc:MS};var brt=gm+`
  return max(a, b);
`,wrt=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Lo+`
  return result;
`,Nrt=re({opSnippet:brt,packedOpSnippet:wrt,cpuKernelImpl:YF}),MP={kernelName:si,backendName:"webgl",kernelFunc:Nrt};function Trt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e;Ts(n,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,u=1;b.assert(I.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=I.computePool2DInfo(n.shape,s,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))return je({inputs:{x:n},backend:t});let p=new Yn(c,"max",!1);return t.runWebGLProgram(p,[n],n.dtype)}var VP={kernelName:Da,backendName:"webgl",kernelFunc:Trt};function Srt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{filterSize:s,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=I.computePool3DInfo(n.shape,s,i,c,a,u,l),m=new Tl(p,"max",!1);return t.runWebGLProgram(m,[n],n.dtype)}var GP={kernelName:_a,backendName:"webgl",kernelFunc:Srt};var Vy=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,o=e.strideWidth,n=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,l=i-1-e.padInfo.left,u=s*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Gy=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,o=e.strideHeight,n=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,p=l-1-e.padInfo.front,m=u-1-e.padInfo.top,f=c-1-e.padInfo.left,h=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function vrt(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s}=e,i=s,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],m=I.computePool3DInfo(i.shape,a,l,p,u,c),f=new Tl(m,"max",!0),h=t.runWebGLProgram(f,[i],i.dtype),g=new Gy(m),d=t.runWebGLProgram(g,[n,h],i.dtype);return t.disposeIntermediateTensorInfo(h),d}var WP={kernelName:Yc,backendName:"webgl",kernelFunc:vrt};function Crt(r){let{inputs:e,backend:t,attrs:o}=r,{dy:n,input:s,output:i}=e,a=s;Ts([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,m=I.computePool2DInfo(a.shape,l,u,1,c,p),f=!0,h=new Yn(m,"max",f),g=t.runWebGLProgram(h,[a],a.dtype),d=new Vy(m),x=t.runWebGLProgram(d,[n,g],a.dtype);return t.disposeIntermediateTensorInfo(g),x}var UP={kernelName:Xc,backendName:"webgl",kernelFunc:Crt};function HP(r,e,t,o){let n=new Yn(t,"max",!1),s=o.runWebGLProgram(n,[r],"float32");n=new Yn(t,"max",!0,!0,e);let i=o.runWebGLProgram(n,[r],"float32");return[s,i]}var qP={kernelName:ad,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:o}=r,{filterSize:n,strides:s,pad:i,includeBatchInIndex:a}=e,l=t;b.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let u=[1,1];b.assert(I.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=I.computePool2DInfo(o.shape,n,s,u,i),[p,m]=HP(o,a,c,l);return[p,m]}};function KP(r,e,t,o){let n=b.sizeFromShape(e),i=b.sizeFromShape(r.shape)/n,a=st({inputs:{x:r},attrs:{shape:[i,n]},backend:o}),l=Po(a,"float32","mean",o),u=st({inputs:{x:l},attrs:{shape:t},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}var jP={kernelName:Ra,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:o}=r,{keepDims:n,axis:s}=e,i=t,a=o.shape.length,l=b.parseAxisParam(s,o.shape),u=l,c=I.getAxesPermutation(u,a),p=c!=null,m=i.shouldExecuteOnCPU([o]),f=[],h=o;if(p){if(m){let N=i.texData.get(h.dataId).values,v=new Array(a);for(let O=0;O<v.length;O++)v[O]=o.shape[c[O]];let k=Ku(N,o.shape,o.dtype,c,v);h=i.makeTensorInfo(v,o.dtype);let R=i.texData.get(h.dataId);R.values=k}else h=Nl(o,c,i);f.push(h),u=I.getInnerMostAxes(u.length,a)}I.assertAxesAreInnerMostDims("sum",u,a);let[g,d]=I.computeOutAndReduceShapes(h.shape,u),x=g;n&&(x=I.expandShapeToKeepDim(g,l));let y=KP(h,d,x,i);for(let w of f)i.disposeIntermediateTensorInfo(w);return y}};function Irt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o,a=n.shape.length,l=b.parseAxisParam(s,n.shape),u=l,c=I.getAxesPermutation(u,a),p=n;c!=null&&(p=Ee({inputs:{x:n},backend:t,attrs:{perm:c}}),u=I.getInnerMostAxes(u.length,n.shape.length)),I.assertAxesAreInnerMostDims("min",u,a);let[m,f]=I.computeOutAndReduceShapes(p.shape,u),h=b.sizeFromShape(f),g=st({inputs:{x:p},backend:t,attrs:{shape:[-1,h]}}),d=Po(g,g.dtype,"min",t),x;if(i){let y=I.expandShapeToKeepDim(m,l);x=st({inputs:{x:d},backend:t,attrs:{shape:y}})}else x=st({inputs:{x:d},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(d),c!=null&&t.disposeIntermediateTensorInfo(p),x}var XP={kernelName:Fa,backendName:"webgl",kernelFunc:Irt};var krt=gm+`
  return min(a, b);
`,Ert=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Lo+`
  return result;
`,$rt=re({opSnippet:krt,packedOpSnippet:Ert,cpuKernelImpl:ZF}),YP={kernelName:ii,backendName:"webgl",kernelFunc:$rt};var Wy=class{constructor(e,t,o){this.variableNames=["x"],this.outputShape=t.map((c,p)=>c[0]+e[p]+c[1]);let n=e.length,s=Ft(n),i=t.map(c=>c[0]).join(","),a=t.map((c,p)=>c[0]+e[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u=o==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var Uy=class{constructor(e,t,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let n=e.length,s=Ft(n),i=t.map(h=>h[0]).join(","),a=t.map((h,g)=>h[0]+e[g]).join(","),l=Ke("rc",n),u=Ke("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,m=o==="reflect"?0:1,f="";if(n===1){let h=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let h=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[n-2]} += 1;
        if(${l[n-2]} < ${this.outputShape[n-2]}) {
          ${h}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[n-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var Art=({inputs:r,backend:e,attrs:t})=>{let{x:o}=r,{paddings:n,mode:s}=t,i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Uy(o.shape,n,s):new Wy(o.shape,n,s);return e.runWebGLProgram(i,[o],o.dtype)},ZP={kernelName:Oa,backendName:"webgl",kernelFunc:Art};var Drt=`if (b == 0.0) return NAN;
  return mod(a, b);`,_rt=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Lo+`
  return result;
`,Rrt=re({opSnippet:Drt,packedOpSnippet:_rt}),JP={kernelName:ai,backendName:"webgl",kernelFunc:Rrt};var Hy=class{constructor(e,t,o){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,o],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var Frt=`
if (a == b) {
  return 1.0;
};
return a / b;`,Ort=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,VS=re({opSnippet:Frt,packedOpSnippet:Ort,checkOutOfBounds:!0}),QP={kernelName:qs,backendName:"webgl",kernelFunc:VS};var t3="return a - b;",GS=re({opSnippet:t3,packedOpSnippet:t3,supportsComplex:!0,cpuKernelImpl:yO}),e3={kernelName:Si,backendName:"webgl",kernelFunc:GS};function WS(r){let{inputs:e,backend:t,attrs:o}=r,{logits:n}=e,{dim:s}=o,i=b.parseAxisParam([s],n.shape),a=MS({inputs:{x:n},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),l=I.expandShapeToKeepDim(a.shape,i),u=st({inputs:{x:a},backend:t,attrs:{shape:l}}),c=GS({inputs:{a:n,b:u},backend:t}),p=PS({inputs:{x:c},backend:t}),m=ju({inputs:{x:p},backend:t,attrs:{axis:i,keepDims:!1}}),f=st({inputs:{x:m},backend:t,attrs:{shape:l}}),h=VS({inputs:{a:p,b:f},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),h}var r3={kernelName:Ja,backendName:"webgl",kernelFunc:WS};function Lrt(r){let{inputs:e,backend:t,attrs:o}=r,{logits:n}=e,{numSamples:s,seed:i,normalized:a}=o,l=a?n:WS({inputs:{logits:n},backend:t,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new Hy(u,c,s),m=[[i]],f=t.runWebGLProgram(p,[l],"int32",m);return a||t.disposeIntermediateTensorInfo(l),f}var o3={kernelName:ld,backendName:"webgl",kernelFunc:Lrt};var Prt=ar+`
  return -x;
`,zrt=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Brt(r){let{inputs:e,backend:t}=r,{x:o}=e;if(t.shouldExecuteOnCPU([o])){let s=t.texData.get(o.dataId),[i,a]=QF(s.values,o.shape,o.dtype);return t.makeTensorInfo(a,o.dtype,i)}let n;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new xo(o.shape,zrt):n=new $r(o.shape,Prt),t.runWebGLProgram(n,[o],o.dtype)}var n3={kernelName:La,backendName:"webgl",kernelFunc:Brt};var Mrt=Lr.nonMaxSuppressionV3Impl;function Vrt(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=o,u=t.readSync(n.dataId),c=t.readSync(s.dataId),{selectedIndices:p}=Mrt(u,c,i,a,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var s3={kernelName:Zc,backendName:"webgl",kernelFunc:Vrt};var Grt=Lr.nonMaxSuppressionV4Impl;function Wrt(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=o,c=t.readSync(n.dataId),p=t.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=Grt(c,p,i,a,l,u);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var i3={kernelName:Jc,backendName:"webgl",kernelFunc:Wrt};var Urt=Lr.nonMaxSuppressionV5Impl;function Hrt(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:o}=r,{boxes:n,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o,c=t.readSync(n.dataId),p=t.readSync(s.dataId),m=i,f=a,h=l,g=u,{selectedIndices:d,selectedScores:x}=Urt(c,p,m,f,h,g);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var a3={kernelName:Qc,backendName:"webgl",kernelFunc:Hrt};var qy=class{constructor(e,t,o,n){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${o}),
                      float(index == coords.y)));
      }
    `}};var qrt=r=>{let{inputs:e,backend:t,attrs:o}=r,{indices:n}=e,{dtype:s,depth:i,onValue:a,offValue:l}=o,u=b.sizeFromShape(n.shape),c=new qy(u,i,a,l),p=st({inputs:{x:n},backend:t,attrs:{shape:[u]}}),m=t.runWebGLProgram(c,[p],s);t.disposeIntermediateTensorInfo(p);let f=[...n.shape,i],h=st({inputs:{x:m},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(m),h},l3={kernelName:za,backendName:"webgl",kernelFunc:qrt};function Ch(r){let{inputs:e,backend:t}=r,{x:o}=e;if(o.dtype==="complex64"){let n=Yi({inputs:{input:o},backend:t}),s=Ch({inputs:{x:n},backend:t}),i=Yu({inputs:{input:o},backend:t}),a=Ch({inputs:{x:i},backend:t}),l=bo({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Zi({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:t})}var u3={kernelName:el,backendName:"webgl",kernelFunc:Ch};function c3(r){let{inputs:e,backend:t}=r,{x:o}=e;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=Yi({inputs:{input:o},backend:t}),s=c3({inputs:{x:n},backend:t}),i=Yu({inputs:{input:o},backend:t}),a=Ch({inputs:{x:i},backend:t}),l=bo({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Zi({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:t})}var p3={kernelName:Pa,backendName:"webgl",kernelFunc:c3};function Krt(r){let{inputs:e,backend:t,attrs:o}=r,{axis:n}=o;if(e.length===1)return Ay({inputs:{input:e[0]},backend:t,attrs:{dim:n}});let s=e[0].shape,i=e[0].dtype;e.forEach(c=>{b.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=e.map(c=>{let p=Ay({inputs:{input:c},backend:t,attrs:{dim:n}});return a.push(p),p}),u=LS({inputs:l,backend:t,attrs:{axis:n}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}var m3={kernelName:Ba,backendName:"webgl",kernelFunc:Krt};var Ky=class{constructor(e,t,o){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let n=e.length,s=Ft(n),i=t.map(u=>u[0]).join(","),a=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var jy=class{constructor(e,t,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((g,d)=>g[0]+e[d]+g[1]);let n=e.length,s=Ft(n),i=t.map(g=>g[0]).join(","),a=t.map((g,d)=>g[0]+e[d]).join(","),l=Ke("rc",n),u=Ke("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${l[n-1]} += 1;
       if(${c}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${l[n-2]} += 1;
       if(${l[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${l[n-1]} += 1;
         if(${c}) {`],f=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let g=0,d=n===1?2:4;g<d;g++)h+=`
        ${m[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${p});
        }
      `;h+=n===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}};var US=r=>{let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{paddings:s,constantValue:i}=o;if(b.sizeFromShape(n.shape)===0){let u=s.map((c,p)=>c[0]+n.shape[p]+c[1]);return Zi({backend:t,attrs:{shape:u,value:i,dtype:n.dtype}})}let a=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jy(n.shape,s,i):new Ky(n.shape,s,i),l=[[i]];return t.runWebGLProgram(a,[n],n.dtype,l)},f3={kernelName:Ma,backendName:"webgl",kernelFunc:US};var jrt=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Xrt=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Lo+`
  return result;
`,Yrt=re({opSnippet:jrt,packedOpSnippet:Xrt}),h3={kernelName:ui,backendName:"webgl",kernelFunc:Yrt};function Zrt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{axis:s,keepDims:i}=o,a=n.shape.length,l=[],u=b.parseAxisParam(s,n.shape),c=u,p=I.getAxesPermutation(c,a),m=n;p!=null&&(m=Ee({inputs:{x:n},backend:t,attrs:{perm:p}}),c=I.getInnerMostAxes(c.length,a),l.push(m)),I.assertAxesAreInnerMostDims("prod",c,a);let f;if(t.shouldExecuteOnCPU([m])){let h=t.texData.get(m.dataId).values,{outVals:g,outShape:d,outDtype:x}=eO(m.shape,m.dtype,h,c);f=t.makeTensorInfo(d,x,g)}else{let[h,g]=I.computeOutAndReduceShapes(m.shape,c),d=b.sizeFromShape(g),x=st({inputs:{x:m},backend:t,attrs:{shape:[-1,d]}}),y=au(n.dtype),w=Po(x,y,"prod",t);f=st({inputs:{x:w},backend:t,attrs:{shape:h}}),l.push(x),l.push(w)}if(i){l.push(f);let h=I.expandShapeToKeepDim(f.shape,u);f=st({inputs:{x:f},backend:t,attrs:{shape:h}})}return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var d3={kernelName:Ga,backendName:"webgl",kernelFunc:Zrt};function Jrt(r){let{inputs:e,backend:t,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:s,indices:i}=e,{outputRaggedRank:a}=o,l=n.map(x=>t.readSync(x.dataId)),u=n.map(x=>x.shape),c=t.readSync(s.dataId),p=t.readSync(i.dataId),[m,f,h]=rO(l,u,c,s.shape,s.dtype,p,i.shape,a),g=m.map(x=>t.makeTensorInfo([x.length],"int32",x)),d=t.makeTensorInfo(h,s.dtype,f);return g.concat([d])}var g3={kernelName:ud,backendName:"webgl",kernelFunc:Jrt};function Qrt(r){let{inputs:e,backend:t}=r,{starts:o,limits:n,deltas:s}=e,i=t.readSync(o.dataId),a=t.readSync(n.dataId),l=t.readSync(s.dataId),[u,c]=oO(i,o.shape,o.dtype,a,n.shape,l,s.shape),p=t.makeTensorInfo([u.length],"int32",u),m=t.makeTensorInfo([c.length],o.dtype,c);return[p,m]}var x3={kernelName:cd,backendName:"webgl",kernelFunc:Qrt};function tot(r){let{inputs:e,backend:t,attrs:o}=r,{shape:n,values:s,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=o,u=t.readSync(n.dataId),c=t.readSync(s.dataId),p=t.readSync(i.dataId),m=a.map(d=>t.readSync(d.dataId)),f=a.map(d=>d.shape),[h,g]=nO(u,n.shape,c,s.shape,s.dtype,p,i.shape,m,f,l);return t.makeTensorInfo(h,s.dtype,g)}var y3={kernelName:pd,backendName:"webgl",kernelFunc:tot};var HS=r=>{let{backend:e,attrs:t}=r,{start:o,stop:n,step:s,dtype:i}=t,a=sO(o,n,s,i);return e.makeTensorInfo([a.length],i,a)},b3={kernelName:tp,backendName:"webgl",kernelFunc:HS};var eot="return 1.0 / x;",rot=wt({opSnippet:eot}),w3={kernelName:ci,backendName:"webgl",kernelFunc:rot};var oot=ar+`
  return (x < 0.0) ? 0.0 : x;
`,not=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,sot=wt({opSnippet:oot,packedOpSnippet:not}),N3={kernelName:pi,backendName:"webgl",kernelFunc:sot};var iot=ar+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,aot=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,lot=wt({opSnippet:iot,packedOpSnippet:aot}),T3={kernelName:mi,backendName:"webgl",kernelFunc:lot};var Xy=class{constructor(e,t,o,n,s){this.variableNames=["A"],this.outputShape=[];let[i,a,l,u]=e;this.outputShape=[i,t,o,u];let c=[n&&t>1?a-1:a,n&&o>1?l-1:l],p=[n&&t>1?t-1:t,n&&o>1?o-1:o],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var Yy=class{constructor(e,t,o,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,l,u]=e;this.outputShape=[i,t,o,u];let c=[n&&t>1?a-1:a,n&&o>1?l-1:l],p=[n&&t>1?t-1:t,n&&o>1?o-1:o],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function uot(r){let{inputs:e,backend:t,attrs:o}=r,{images:n}=e,{alignCorners:s,halfPixelCenters:i,size:a}=o,[l,u]=a,c=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Yy(n.shape,l,u,s,i):new Xy(n.shape,l,u,s,i);return t.runWebGLProgram(c,[n],"float32")}var S3={kernelName:Ha,backendName:"webgl",kernelFunc:uot};var Zy=class{constructor(e,t,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,s]=t,[,i,a]=e,l=[o&&i>1?n-1:n,o&&a>1?s-1:s],u=[o&&i>1?i-1:i,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,h=Math.ceil(m)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${h});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function cot(r){let{inputs:e,backend:t,attrs:o}=r,{images:n,dy:s}=e,{alignCorners:i}=o,a=new Zy(s.shape,n.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}var v3={kernelName:op,backendName:"webgl",kernelFunc:cot};var Jy=class{constructor(e,t,o,n,s){this.variableNames=["A"],this.outputShape=[];let[i,a,l,u]=e;this.outputShape=[i,t,o,u];let c=[n&&t>1?a-1:a,n&&o>1?l-1:l],p=[n&&t>1?t-1:t,n&&o>1?o-1:o],m=n?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var Qy=class{constructor(e,t,o,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,l,u]=e;this.outputShape=[i,t,o,u];let c=[n&&t>1?a-1:a,n&&o>1?l-1:l],p=[n&&t>1?t-1:t,n&&o>1?o-1:o],m=n?"0.5":"0.0",f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function pot(r){let{inputs:e,backend:t,attrs:o}=r,{images:n}=e,{alignCorners:s,halfPixelCenters:i,size:a}=o,[l,u]=a,c=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Qy(n.shape,l,u,s,i):new Jy(n.shape,l,u,s,i);return t.runWebGLProgram(c,[n],n.dtype)}var C3={kernelName:Ua,backendName:"webgl",kernelFunc:pot};var tb=class{constructor(e,t,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,s]=t,[,i,a]=e,l=[o&&i>1?n-1:n,o&&a>1?s-1:s],u=[o&&i>1?i-1:i,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,h=Math.ceil(m)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${h});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${o} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${o} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function mot(r){let{inputs:e,backend:t,attrs:o}=r,{images:n,dy:s}=e,{alignCorners:i}=o,a=new tb(s.shape,n.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}var I3={kernelName:rp,backendName:"webgl",kernelFunc:mot};var eb=class{constructor(e,t){this.variableNames=["x"];let o=e.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);if(this.outputShape=e,o===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,s=e.map((a,l)=>n(l)).join(","),i=Ft(o);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var rb=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let o=e.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);this.outputShape=e;let n=Ke("rc",o),s=`${n[o-1]} + 1 < ${this.outputShape[o-1]}`,i=`${n[o-2]} + 1 < ${this.outputShape[o-2]}`,a=Ft(o);o===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(n.slice())};
          if(${s}){
            result.g = ${u(n.slice())};
          }
          if(${i}) {
            result.b = ${c(n.slice())};
            if(${s}) {
              result.a = ${p(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(h){return m(h)}function u(h){return h[o-1]="("+h[o-1]+" + 1)",m(h)}function c(h){return h[o-2]="("+h[o-2]+" + 1)",m(h)}function p(h){return h[o-1]="("+h[o-1]+" + 1)",h[o-2]="("+h[o-2]+" + 1)",m(h)}function m(h){let g=e.map((y,w)=>f(w,h)),d=g.join(","),x=g.slice(-2).join(",");return`getChannel(getX(${d}), vec2(${x}))`}function f(h,g){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${g[h]} - 1`:`${g[h]}`}}};function fot(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{dims:s}=o,i=n.shape.length,a=b.parseAxisParam(s,n.shape);if(i===0)return je({inputs:{x:n},backend:t});let l=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rb(n.shape,a):new eb(n.shape,a);return t.runWebGLProgram(l,[n],n.dtype)}var k3={kernelName:qa,backendName:"webgl",kernelFunc:fot};var ob=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let o=e[1],n=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${o}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var E3={kernelName:up,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:o}=r,{radians:n,fillValue:s,center:i}=e,a=t,l=new ob(o.shape,s),[u,c]=I.getImageCenter(i,o.shape[1],o.shape[2]),p=[[u,c,Math.sin(n),Math.cos(n)]];return a.runWebGLProgram(l,[o],o.dtype,p)}};var hot=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,dot=wt({opSnippet:hot}),$3={kernelName:fi,backendName:"webgl",kernelFunc:dot};var got="return inversesqrt(x);",xot=wt({opSnippet:got,cpuKernelImpl:iO}),A3={kernelName:hi,backendName:"webgl",kernelFunc:xot};var Sl=class{constructor(e,t,o,n,s,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let u=Ft(s.length),c=Ft(i.length),p="";o===1?p="i":o===2&&(p="i, j");let m=`getIndices(${p})`,f="";n===1?f="i":n===2&&(f="i, coords[1]");let h=`getUpdates(${f})`,g="";l&&(g="coords[0], coords[1]");let d=`getDefaultValue(${g})`,x=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${h};
              found = true;
            }
          }
          setOutput(mix(${d}, sum, float(found)));
        }
      `}};var nb=class{constructor(e,t,o,n,s,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;let u=Ft(s.length),c=Ft(i.length),p="";o===1?p="i":o===2&&(p="i, j");let m=`getIndices(${p})`,f="";n===1?f="i":n===2&&(f="i, coords[1]");let h=`getUpdates(${f})`,g="";l&&(g="coords[0], coords[1]");let d=`getDefaultValue(${g})`,x=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${h};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${d}, sum, found));
        }
      `}};function yot(r){let{inputs:e,backend:t,attrs:o}=r,{indices:n,updates:s}=e,{shape:i}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=I.calculateShapes(s,n,i),m=[p/u,u];if(p===0)return t.makeTensorInfo(i,n.dtype);let f=st({inputs:{x:n},backend:t,attrs:{shape:[l,a]}}),h=st({inputs:{x:s},backend:t,attrs:{shape:[l,u]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0])),d;W().getBool("WEBGL_PACK")?d=new nb(l,a,f.shape.length,h.shape.length,c,m):d=new Sl(l,a,f.shape.length,h.shape.length,c,m);let x=t.runWebGLProgram(d,[h,f,g],h.dtype),y=st({inputs:{x},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),y}var D3={kernelName:md,backendName:"webgl",kernelFunc:yot};var sb=class{constructor(e,t,o,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,o];let s="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=W().getNumber("WEBGL_VERSION")===2?s:i,l=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function bot(r){let{inputs:e,backend:t,attrs:o}=r,{sortedSequence:n,values:s}=e,{side:i}=o,a=new sb(n.shape[0],n.shape[1],s.shape[1],i),l=[[n.shape[1]]];return t.runWebGLProgram(a,[n,s],"int32",l)}var _3={kernelName:hd,backendName:"webgl",kernelFunc:bot};var ib=class{constructor(e,t,o){this.variableNames=["c","a","b"],this.outputShape=t;let n,s;if(o>4)throw Error(`Where for rank ${o} is not yet supported`);if(o===1)s="resRC",n="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${a[c]}`),c<e&&l.push(`${a[c]}`);n=l.join(),s=u.join()}let i=Ft(o);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function wot(r){let{inputs:e,backend:t}=r,{condition:o,t:n,e:s}=e,i=new ib(o.shape.length,n.shape,n.shape.length);return t.runWebGLProgram(i,[o,n,s],er(n.dtype,s.dtype))}var R3={kernelName:Ka,backendName:"webgl",kernelFunc:wot};var Not=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${I.SELU_SCALEALPHA};
  float scale = ${I.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Tot=wt({opSnippet:Not}),F3={kernelName:di,backendName:"webgl",kernelFunc:Tot};var Sot=vn+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,vot=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Cot=wt({opSnippet:Sot,packedOpSnippet:vot,cpuKernelImpl:lO}),O3={kernelName:bi,backendName:"webgl",kernelFunc:Cot};var Iot=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,kot=wt({opSnippet:Iot}),L3={kernelName:yi,backendName:"webgl",kernelFunc:kot};var Eot=vn+`
  return sin(x);
`,$ot=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Lo}
  return result;
`,Aot=wt({opSnippet:Eot,packedOpSnippet:$ot}),P3={kernelName:gi,backendName:"webgl",kernelFunc:Aot};var Dot=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,_ot=wt({opSnippet:Dot}),z3={kernelName:xi,backendName:"webgl",kernelFunc:_ot};var Rot=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Fot=wt({opSnippet:Rot}),B3={kernelName:wi,backendName:"webgl",kernelFunc:Fot};var Oot=r=>{let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{blockShape:s,paddings:i}=o;b.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((x,y)=>x*y),l=[[0,0]];l.push(...i);for(let x=1+s.length;x<n.shape.length;++x)l.push([0,0]);let u=[],c=US({inputs:{x:n},backend:t,attrs:{paddings:l,constantValue:0}}),p=I.getReshaped(c.shape,s,a,!1),m=I.getPermuted(p.length,s.length,!1),f=I.getReshapedPermuted(c.shape,s,a,!1),h=st({inputs:{x:c},backend:t,attrs:{shape:p}}),g=Ee({inputs:{x:h},backend:t,attrs:{perm:m}}),d=st({inputs:{x:g},backend:t,attrs:{shape:f}});return u.push(c),u.push(h),u.push(g),u.forEach(x=>t.disposeIntermediateTensorInfo(x)),d},M3={kernelName:Ya,backendName:"webgl",kernelFunc:Oot};function Lot(r){let{inputs:e,backend:t}=r,{indices:o,values:n,denseShape:s,defaultValue:i}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=t.readSync(o.dataId),l=t.readSync(n.dataId),u=t.readSync(s.dataId),c=t.readSync(i.dataId)[0],[p,m,f,h,g]=cO(a,o.shape,o.dtype,l,n.dtype,u,c);return[t.makeTensorInfo(m,o.dtype,p),t.makeTensorInfo([m[0]],n.dtype,f),t.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(d=>Number(d)))),t.makeTensorInfo([g.length],o.dtype,new Int32Array(g))]}var V3={kernelName:dd,backendName:"webgl",kernelFunc:Lot};function Pot(r){let{inputs:e,backend:t}=r,{inputIndices:o,inputShape:n,newShape:s}=e;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(t.readSync(n.dataId)),a=t.readSync(o.dataId),l=Array.from(t.readSync(s.dataId)),[u,c,p]=pO(a,o.shape,o.dtype,i,l);return[t.makeTensorInfo(c,o.dtype,u),t.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var G3={kernelName:gd,backendName:"webgl",kernelFunc:Pot};function zot(r){let{inputs:e,backend:t}=r,{data:o,indices:n,segmentIds:s}=e;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=t.readSync(o.dataId),a=t.readSync(n.dataId),l=t.readSync(s.dataId),[u,c]=Vx(i,o.shape,o.dtype,a,l,!0);return t.makeTensorInfo(c,o.dtype,u)}var W3={kernelName:xd,backendName:"webgl",kernelFunc:zot};function Bot(r){let{inputs:e,backend:t}=r,{data:o,indices:n,segmentIds:s}=e;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=t.readSync(o.dataId),a=t.readSync(n.dataId),l=t.readSync(s.dataId),[u,c]=Vx(i,o.shape,o.dtype,a,l);return t.makeTensorInfo(c,o.dtype,u)}var U3={kernelName:yd,backendName:"webgl",kernelFunc:Bot};function Mot(r){let{inputs:e,backend:t,attrs:o}=r,{sparseIndices:n,sparseValues:s,defaultValue:i}=e,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=I.calculateShapes(s,n,a),f=!1;if(s.dtype==="string"){let x=t.bufferSync(n),y=t.bufferSync(s),w=b.decodeString(t.readSync(i.dataId)[0]),N=aO(x,y,a,m,c,u,l,p,w,f);return t.makeTensorInfo(a,N.dtype,N.values)}let h=new Sl(u,l,n.shape.length,s.shape.length,p,[m,1],f),g=t.runWebGLProgram(h,[s,n,i],s.dtype),d=st({inputs:{x:g},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(g),d}var H3={kernelName:bd,backendName:"webgl",kernelFunc:Mot};function Vot(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{numOrSizeSplits:s,axis:i}=o,a=b.parseAxisParam(i,n.shape)[0],l=I.prepareSplitSize(n,s,a),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(m=>{let f=[...p];f[a]=m;let h=Zn({inputs:{x:n},backend:t,attrs:{begin:c,size:f}});return c[a]+=m,h})}var q3={kernelName:Za,backendName:"webgl",kernelFunc:Vot};var K3="return sqrt(x);",Got=wt({opSnippet:K3,packedOpSnippet:K3,cpuKernelImpl:mO}),j3={kernelName:Ni,backendName:"webgl",kernelFunc:Got};var Wot="return x * x;",Uot=wt({opSnippet:Wot}),X3={kernelName:np,backendName:"webgl",kernelFunc:Uot};var Y3="return (a - b) * (a - b);",Hot=re({opSnippet:Y3,packedOpSnippet:Y3}),Z3={kernelName:Ti,backendName:"webgl",kernelFunc:Hot};function qot(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e;if(n.dtype!=="string")throw new Error("Input must be of datatype string");let s=t.readSync(n.dataId),i=I.fromUint8ToStringArray(s),a=fO(i,"string",o);return t.makeTensorInfo(n.shape,"string",a)}var J3={kernelName:uf,backendName:"webgl",kernelFunc:qot};function Kot({inputs:r,attrs:e,backend:t}){let{x:o}=r,n=ar+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new $r(o.shape,n);return t.runWebGLProgram(s,[o],o.dtype)}var Q3={kernelName:Ii,backendName:"webgl",kernelFunc:Kot};var ab=class{constructor(e,t,o){this.variableNames=["x"],this.outputShape=o;let n=o.length,s=Ft(o.length),i=Ft(o.length),a="";if(n===1)a="coords * strides + begin";else{let l=0;a=o.map((u,c)=>(l++,o.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function jot(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{begin:s,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=o,{finalShapeSparse:f,finalShape:h,isIdentity:g,sliceDim0:d,isSimpleSlice:x,begin:y,end:w,strides:N}=gr.sliceInfo(n.shape,s,i,a,l,u,c,p,m),v;if(g)v=st({inputs:{x:n},backend:t,attrs:{shape:h}});else if(d||x){b.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let R=gr.computeOutShape(y,w,N),O=Zn({inputs:{x:n},backend:t,attrs:{begin:y,size:R}});v=st({inputs:{x:O},backend:t,attrs:{shape:h}}),t.disposeIntermediateTensorInfo(O)}else if(t.shouldExecuteOnCPU([n])){let O=t.readSync(n.dataId),L=Nt(n.shape,n.dtype,O),M=hO(f,L,N,y);v=t.makeTensorInfo(h,n.dtype,M.values)}else{let O=new ab(y,N,f);v=t.runWebGLProgram(O,[n],n.dtype)}let k=st({inputs:{x:v},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(v),k}var tz={kernelName:sp,backendName:"webgl",kernelFunc:jot};function Xot(r){let{inputs:e,backend:t,attrs:o}=r,{separator:n,nGramWidths:s,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=e,m=t.readSync(c.dataId),f=t.readSync(p.dataId),[h,g]=dO(m,f,n,s,i,a,l,u);return[t.makeTensorInfo([h.length],"string",h),t.makeTensorInfo(p.shape,"int32",g)]}var ez={kernelName:wd,backendName:"webgl",kernelFunc:Xot};function Yot(r){let{inputs:e,backend:t,attrs:o}=r,{skipEmpty:n}=o,{input:s,delimiter:i}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=t.readSync(s.dataId),l=t.readSync(i.dataId)[0],[u,c,p]=gO(a,l,n),m=c.length;return[t.makeTensorInfo([m,2],"int32",u),t.makeTensorInfo([m],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(p))]}var rz={kernelName:Nd,backendName:"webgl",kernelFunc:Yot};function Zot(r){let{inputs:e,backend:t,attrs:o}=r,{numBuckets:n}=o,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=t.readSync(s.dataId),a=xO(i,n);return t.makeTensorInfo(s.shape,"int32",a)}var oz={kernelName:Td,backendName:"webgl",kernelFunc:Zot};var Jot="return tan(x);",Qot=wt({opSnippet:Jot}),nz={kernelName:vi,backendName:"webgl",kernelFunc:Qot};var tnt=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,ent=wt({opSnippet:tnt}),sz={kernelName:Ci,backendName:"webgl",kernelFunc:ent};function rnt(r){let{inputs:e,backend:t,attrs:o}=r,{tensor:n,indices:s,updates:i}=e,{}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=I.calculateShapes(i,s,n.shape),m=[p/u,u];if(p===0)return t.makeTensorInfo(n.shape,s.dtype);let f=st({inputs:{x:s},backend:t,attrs:{shape:[l,a]}}),h=st({inputs:{x:i},backend:t,attrs:{shape:[l,u]}}),g=st({inputs:{x:n},backend:t,attrs:{shape:m}}),d=new Sl(l,a,f.shape.length,h.shape.length,c,m,!1,!0),x=t.runWebGLProgram(d,[h,f,g],g.dtype),y=st({inputs:{x},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),y}var iz={kernelName:fd,backendName:"webgl",kernelFunc:rnt};var lb=class{constructor(e,t){this.variableNames=["A"];let o=new Array(e.length);for(let i=0;i<o.length;i++)o[i]=e[i]*t[i];this.outputShape=o,this.rank=o.length;let n=Ft(this.rank),s=ont(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function ont(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],o=[];for(let n=0;n<r.length;n++)o.push(`imod(${t[n]}, ${r[n]})`);return o.join()}function qS(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{reps:s}=o;if(n.dtype==="string"||n.shape.length>5){let l=t.readSync(n.dataId),u=n.dtype==="string"?l.map(m=>b.decodeString(m)):l,c=Nt(n.shape,n.dtype,u),p=bO(c,s);return t.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new lb(n.shape,s);return t.runWebGLProgram(i,[n],n.dtype)}var az={kernelName:ls,backendName:"webgl",kernelFunc:qS};var ub=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},cb=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Zu(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function lz(r){let e=1;for(;e<r;)e*=2;return e}function nnt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n}=e,{k:s,sorted:i}=o,a=W().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=W().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=n.shape,c=u[u.length-1];if(t.shouldExecuteOnCPU([n])||c<a||s>l){let M=t.readSync(n.dataId),[H,q]=wO(M,u,n.dtype,s,i);return[t.makeTensorInfo(H.shape,H.dtype,H.values),t.makeTensorInfo(q.shape,q.dtype,q.values)]}if(s===0)return u[u.length-1]=0,[t.makeTensorInfo(u,n.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(c===1)return[n,Zi({attrs:{shape:u,dtype:"int32",value:0},backend:t})];let p=t.texData.get(n.dataId),m=p!==null&&p.isPacked,f=m?t.unpackTensor(n):n,g=b.sizeFromShape(u)/c,d=st({inputs:{x:f},attrs:{shape:[g,c]},backend:t});m&&Zu(t,f);let x=lz(s),y=lz(c),w=null,N=()=>w===null?[d,d]:[d,w],v=(M,H,q)=>{let K=N(),X=new ub(q),Q=[[c],[w===null?1:0],[Number.NEGATIVE_INFINITY],[M],[H]],et=w;w=t.runWebGLProgram(X,K,"int32",Q),Zu(t,et)};for(let M=1;M<x;M*=2){let H=M*2;for(let q=M;q>=1;q/=2)v(H,q,[g,y])}for(let M=y;M>x;M/=2){let H=N(),q=new cb([g,M/2]),X=[[c],[w===null?1:0],[x]],Y=w;w=t.runWebGLProgram(q,H,"int32",X),Zu(t,Y);let Q=x/2,et=Q*2;for(let Z=Q;Z>=1;Z/=2)v(et,Z,w.shape)}let k=w;w=Zn({inputs:{x:w},backend:t,attrs:{begin:0,size:[g,s]}}),Zu(t,k);let R=BS({inputs:{x:d,indices:w},backend:t,attrs:{axis:1,batchDims:1}});Zu(t,d);let O=u.slice(0,-1);O.push(s),k=w,w=st({inputs:{x:w},attrs:{shape:O},backend:t}),Zu(t,k);let L=R;return R=st({inputs:{x:R},attrs:{shape:O},backend:t}),Zu(t,L),[R,w]}var uz={kernelName:ip,backendName:"webgl",kernelFunc:nnt};var pb=class{constructor(e,t,o,n,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;let a=o==="nearest"?1:2,l;switch(n){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function snt(r){let{inputs:e,backend:t,attrs:o}=r,{image:n,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=o,[c,p,m,f]=n.shape,[h,g]=u??[p,m],d=[c,h,g,f],x=new pb(p,m,i,a,l,d);return t.runWebGLProgram(x,[n,s],"float32")}var cz={kernelName:ap,backendName:"webgl",kernelFunc:snt};function int(r){let{inputs:e,attrs:t,backend:o}=r,{axis:n}=t,{x:s}=e;Ts(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=o.readSync(s.dataId),{outputValues:a,outputShape:l,indices:u}=NO(i,n,s.shape,s.dtype);return[o.makeTensorInfo(l,s.dtype,a),o.makeTensorInfo([u.length],"int32",u)]}var pz={kernelName:lp,backendName:"webgl",kernelFunc:int};function ant(r){let{inputs:e,backend:t,attrs:o}=r,{value:n}=e,{axis:s}=o;s<0&&(s+=n.shape.length);let i=n,a=i.shape.length,l=n.shape[s],u=new Array(a-1),c=0;for(let g=0;g<a;g++)g!==s&&(u[c++]=i.shape[g]);let p=[],m=new Array(a).fill(0),f=i.shape.slice();f[s]=1;let h=new Array(l);for(let g=0;g<h.length;g++){m[s]=g;let d=Zn({inputs:{x:i},backend:t,attrs:{begin:m,size:f}}),x=st({inputs:{x:d},backend:t,attrs:{shape:u}});h[g]=x,p.push(d)}return p.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var mz={kernelName:Qa,backendName:"webgl",kernelFunc:ant};var mb=class{constructor(e,t){this.variableNames=["x","segmentIds"];let o=e.windowSize,n=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/o);this.outputShape=[n,a];let l="0.0",u="sumValue",c=Math.floor(o/4)*4,p=o%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let h="";s%o>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${o}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function lnt(r){let{inputs:e,backend:t,attrs:o}=r,{x:n,segmentIds:s}=e,{numSegments:i}=o,a=n.shape.length,l=[],u=0,c=I.getAxesPermutation([u],a),p=n;c!=null&&(p=Ee({inputs:{x:n},backend:t,attrs:{perm:c}}),l.push(p),u=I.getInnerMostAxes(1,a)[0]);let m=I.segment_util.computeOutShape(p.shape,u,i),f=b.sizeFromShape([p.shape[u]]),h=st({inputs:{x:p},backend:t,attrs:{shape:[-1,f]}});l.push(h);let g=au(n.dtype),d=(N,v,k,R,O)=>{let L=N.shape[0],M=N.shape[1],H=I.segment_util.segOpComputeOptimalWindowSize(M,O),q={windowSize:H,inSize:M,batchSize:L,numSegments:O},K=new mb(q,v),X=t.compileAndRun(K,[N,k],R);if(l.push(X),X.shape[1]===O)return X;let Y=HS({backend:t,attrs:{start:0,stop:O,step:1,dtype:"float32"}}),Q=qS({inputs:{x:Y},backend:t,attrs:{reps:[M/H]}});return l.push(Y),l.push(Q),d(X,v,Q,R,O)},x=d(h,"unsortedSegmentSum",s,g,i),y=st({inputs:{x},backend:t,attrs:{shape:m}}),w=y;if(c!=null){l.push(y);let N=I.getUndoAxesPermutation(c);w=Ee({inputs:{x:w},backend:t,attrs:{perm:N}})}return l.forEach(N=>t.disposeIntermediateTensorInfo(N)),w}var fz={kernelName:tl,backendName:"webgl",kernelFunc:lnt};var unt=[XO,ZO,JO,QO,eL,rL,oL,nL,aL,lL,uL,cL,pL,mL,fL,hL,dL,gL,xL,yL,bL,NL,TL,SL,vL,EL,AL,DL,BO,RL,OL,LL,PL,zL,BL,ML,VL,GL,WL,UL,KL,jL,XL,YL,ZL,JL,QL,tP,eP,rP,oP,nP,sP,iP,aP,lP,cP,pP,mP,fP,dP,gP,xP,yP,bP,wP,NP,TP,SP,zO,vP,FL,CP,IP,kP,MO,EP,$P,AP,DP,_P,RP,FP,OP,LP,PP,BP,MP,VP,GP,WP,UP,qP,jP,XP,YP,ZP,JP,o3,WO,n3,s3,i3,a3,CL,l3,p3,m3,f3,h3,VO,d3,g3,x3,y3,b3,IL,QP,w3,N3,T3,HO,S3,v3,C3,I3,k3,E3,$3,A3,D3,_3,R3,F3,O3,L3,P3,z3,wL,r3,B3,M3,V3,G3,W3,U3,H3,q3,j3,X3,Z3,J3,Q3,tz,ez,rz,oz,e3,KO,nz,sz,iz,az,uz,cz,jO,pz,mz,fz,u3];for(let r of unt)vd(r);var fb=class{refCount(e){return tn("refCount")}incRef(e){return tn("incRef")}timerAvailable(){return!0}time(e){return tn("time")}read(e){return tn("read")}readSync(e){return tn("readSync")}readToGPU(e,t){return tn("readToGPU")}numDataIds(){return tn("numDataIds")}disposeData(e,t){return tn("disposeData")}write(e,t,o){return tn("write")}move(e,t,o,n,s){return tn("move")}memory(){return tn("memory")}floatPrecision(){return tn("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return tn("dispose")}};function tn(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function hz(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,hb(r,e,t)}function pnt(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,o=0;for(;t>0;)o=Math.random()*t|0,t--,hb(r,t,o),hb(e,t,o)}function mnt(r,e,t){return Math.max(r,Math.min(e,t))}function fnt(r){return r%2===0?r:r+1}function hb(r,e,t){let o=r[e];r[e]=r[t],r[t]=o}function hnt(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function dnt(r,e){let t=Math.random();return e*t+(1-t)*r}function gnt(r,e){let t=0;for(let o=0;o<r.length;o++){let n=Number(r[o])-Number(e[o]);t+=n*n}return t}function F(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Qe(r,e,t=""){F(Cn(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function en(r){F(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function vl(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||zo(r)&&!t)for(let o=0;o<r.length;++o)vl(r[o],e,t);else e.push(r);return e}function we(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function xnt(r){return r.length===0}function Cn(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function Ji(r){return r%1===0}function ynt(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function bnt(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function wnt(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return hz(e),e}function Qu(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function Nnt(r,e=n=>0,t,o=setTimeout){return new Promise((n,s)=>{let i=0,a=()=>{if(r()){n();return}i++;let l=e(i);if(t!=null&&i>=t){s();return}o(a,l)};a()})}function Tnt(r,e){let t=1,o=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(o!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${o} and dim ${s}`);o=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(o===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let n=r.slice();return n[o]=e/t,n}function Cl(r,e){let t=e.length;return r=r==null?e.map((o,n)=>n):[].concat(r),F(r.every(o=>o>=-t&&o<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),F(r.every(o=>Ji(o)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(o=>o<0?t+o:o)}function KS(r,e){let t=[],o=[],n=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||n?null:Cl(e,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(t.push(r[a]),o.push(a)),s[i]<=a&&i++}r[a]!==1&&(t.push(r[a]),o.push(a))}return{newShape:t,keptDims:o}}function jS(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function XS(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function YS(r,e){for(let t=0;t<r.length;t++){let o=r[t];if(isNaN(o)||!isFinite(o))throw Error(`A tensor of type ${e} being uploaded contains ${o}.`)}}function ZS(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function Snt(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function zo(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function db(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function JS(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function Cm(r){return typeof r=="string"||r instanceof String}function dz(r){return typeof r=="boolean"}function gz(r){return typeof r=="number"}function Im(r){return Array.isArray(r)?Im(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":gz(r)?"float32":Cm(r)?"string":dz(r)?"bool":"float32"}function gb(r){return!!(r&&r.constructor&&r.call&&r.apply)}function vnt(r,e){for(let t=e;t<r;++t)if(r%t===0)return t;return r}function km(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let o=e-3;o>=0;--o)t[o]=t[o+1]*r[o+1];return t}function xz(r,e,t,o=!1){let n=new Array;if(e.length===1){let s=e[0]*(o?2:1);for(let i=0;i<s;i++)n[i]=t[r+i]}else{let s=e[0],i=e.slice(1),a=i.reduce((l,u)=>l*u)*(o?2:1);for(let l=0;l<s;l++)n[l]=xz(r+l*a,i,t,o)}return n}function Ju(r,e,t=!1){if(r.length===0)return e[0];let o=r.reduce((n,s)=>n*s)*(t?2:1);if(o===0)return[];if(o!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return xz(0,r,e,t)}function Ih(r,e){let t=Em(r,e);for(let o=0;o<t.length;o++)t[o]=1;return t}function Em(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function Cnt(r,e){let t=r.reduce((o,n)=>o*n,1);if(e==null||e==="float32")return Ju(r,new Float32Array(t));if(e==="int32")return Ju(r,new Int32Array(t));if(e==="bool")return Ju(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function kh(r){r.forEach(e=>{F(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function Int(r,e,t){if(e===0)return 0;if(e===1)return r[0];let o=r[r.length-1];for(let n=0;n<r.length-1;++n)o+=t[n]*r[n];return o}function knt(r,e,t){if(e===0)return[];if(e===1)return[r];let o=new Array(e);for(let n=0;n<o.length-1;++n)o[n]=Math.floor(r/t[n]),r-=o[n]*t[n];return o[o.length-1]=r,o}function Eh(r){return r&&r.then&&typeof r.then=="function"}var yz="tfjsflags",$h=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=$nt,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Ot().getBool("IS_TEST")||Ot().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,o){if(this.flagRegistry[e]={evaluationFn:t,setHook:o},this.urlFlags[e]!=null){let n=this.urlFlags[e];Ot().getBool("IS_TEST")||Ot().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${n}.`),this.set(e,n)}}getAsync(e){return V(this,null,function*(){return e in this.flags?this.flags[e]:(this.flags[e]=yield this.evaluateFlag(e),this.flags[e])})}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Eh(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);yz in e&&e[yz].split(",").forEach(o=>{let[n,s]=o.split(":");this.urlFlags[n]=Dnt(n,s)})}};function $nt(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...o)=>(Ant(e,o[0],o[1]),o.join("="))),e}function Ant(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function Dnt(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function Ot(){return QS}var QS=null;function bz(r){QS=r}var tv;function ev(){if(tv==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");tv=r}return tv}function _nt(){let r=ev();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function Ah(r,e){let t=_nt();if(t.has(r))return t.get(r);{let o=e();return t.set(r,o),t.get(r)}}var wz="Abs",Nz="Acos",Tz="Acosh",xb="Add",Sz="AddN",vz="All",Cz="Any",Iz="ArgMax",kz="ArgMin",Ez="Asin",$z="Asinh",Az="Atan",Dz="Atanh",_z="Atan2",Rz="AvgPool";var Fz="AvgPool3D";var Oz="BatchMatMul",Lz="BatchToSpaceND",Pz="Bincount";var zz="BroadcastArgs",yb="Cast",Bz="Ceil",Mz="ClipByValue",Vz="Complex",Gz="ComplexAbs",Wz="Concat",Uz="Conv2D",Hz="Conv2DBackpropFilter",qz="Conv2DBackpropInput",Kz="Conv3D";var jz="Conv3DBackpropInputV2",Xz="Cos",Yz="Cosh",Zz="Cumprod",Jz="Cumsum",Qz="CropAndResize",tB="DenseBincount",eB="DepthToSpace",rB="DepthwiseConv2dNative",oB="DepthwiseConv2dNativeBackpropFilter",nB="DepthwiseConv2dNativeBackpropInput",sB="Diag",iB="Dilation2D";var aB="RealDiv",lB="Einsum",uB="Elu";var cB="Erf",pB="Equal",mB="Exp",fB="ExpandDims",hB="Expm1",dB="FFT",gB="Fill",xB="FlipLeftRight",yB="Floor",bB="FloorDiv",wB="FusedBatchNorm",NB="GatherV2",TB="GatherNd",SB="Greater",vB="GreaterEqual",bb="Identity",CB="IFFT",IB="Imag",kB="IsFinite",EB="IsInf",$B="IsNan",AB="LeakyRelu",DB="Less",_B="LessEqual",RB="LinSpace",FB="Log",OB="Log1p",LB="LogicalAnd",PB="LogicalNot",zB="LogicalOr";var BB="LRN";var MB="Max",VB="Maximum",GB="MaxPool";var WB="MaxPool3D";var UB="MaxPoolWithArgmax",HB="Mean",qB="Min",KB="Minimum",jB="MirrorPad",XB="Mod",YB="Multinomial",ZB="Multiply",JB="Neg",QB="NotEqual",tM="NonMaxSuppressionV3",eM="NonMaxSuppressionV4",rM="NonMaxSuppressionV5",oM="OnesLike",nM="OneHot",sM="Pack",iM="PadV2";var aM="Pow",lM="Prelu",uM="Prod",cM="RaggedGather",pM="RaggedTensorToTensor",mM="Range",fM="Real",hM="Reciprocal",dM="Relu",gM="Reshape",xM="ResizeNearestNeighbor";var yM="ResizeBilinear";var bM="Relu6",wM="Reverse",NM="Round",TM="Rsqrt",SM="ScatterNd",vM="SearchSorted",CM="Select",IM="Selu",kM="Slice",EM="Sin",$M="Sinh",AM="Sign",DM="Sigmoid",_M="Softplus",RM="Sqrt",FM="Sum",OM="SpaceToBatchND",LM="SplitV",PM="Softmax",zM="SparseFillEmptyRows",BM="SparseReshape",MM="SparseSegmentMean",VM="SparseSegmentSum",GM="SparseToDense",WM="SquaredDifference";var UM="StridedSlice",HM="StringNGrams",qM="StringSplit",KM="StringToHashBucketFast",jM="Sub",XM="Tan",YM="Tanh",wb="Tile",ZM="TopK",JM="Transform",Nb="Transpose",QM="Unique",tV="Unpack",eV="UnsortedSegmentSum";var rV="ZerosLike",oV="Step";var nV="RotateWithOffset",rv="_FusedMatMul",ov="FusedConv2D",nv="FusedDepthwiseConv2D";function $m(...r){Ot().getBool("IS_TEST")||Ot().getBool("PROD")||console.warn(...r)}var sV=Ah("kernelRegistry",()=>new Map),Fnt=Ah("gradRegistry",()=>new Map);function sv(r,e){let t=Ont(r,e);return sV.get(t)}function iv(r){return Fnt.get(r)}function av(r){let e=sV.entries(),t=[];for(;;){let{done:o,value:n}=e.next();if(o)break;let[s,i]=n,[a]=s.split("_");a===r&&t.push(i)}return t}function Ont(r,e){return`${e}_${r}`}var ct={};le(ct,{arraysEqual:()=>Cn,assert:()=>F,assertNonNegativeIntegerDimensions:()=>kh,assertNonNull:()=>en,assertShapesMatch:()=>Qe,bytesFromStringArray:()=>JS,bytesPerElement:()=>db,checkConversionForErrors:()=>YS,clamp:()=>mnt,computeStrides:()=>km,createScalarValue:()=>Gnt,createShuffledIndices:()=>wnt,decodeString:()=>Cb,distSquared:()=>gnt,encodeString:()=>vb,fetch:()=>Unt,fingerPrint64:()=>Vnt,flatten:()=>vl,getArrayFromDType:()=>XS,getTypedArrayFromDType:()=>jS,hasEncodingLoss:()=>Snt,hexToLong:()=>Dh,indexToLoc:()=>knt,inferDtype:()=>Im,inferFromImplicitShape:()=>Tnt,isBoolean:()=>dz,isFunction:()=>gb,isInt:()=>Ji,isNumber:()=>gz,isPromise:()=>Eh,isScalarShape:()=>xnt,isString:()=>Cm,isTypedArray:()=>zo,isValidDtype:()=>ZS,locToIndex:()=>Int,makeOnesTypedArray:()=>Ih,makeZerosNestedTypedArray:()=>Cnt,makeZerosTypedArray:()=>Em,nearestDivisor:()=>vnt,nearestLargerEven:()=>fnt,now:()=>nc,parseAxisParam:()=>Cl,randUniform:()=>dnt,repeatedTry:()=>Nnt,rightPad:()=>Qu,shuffle:()=>hz,shuffleCombo:()=>pnt,sizeFromShape:()=>we,sizeToSquarishShape:()=>bnt,squeezeShape:()=>KS,sum:()=>hnt,swap:()=>hb,tanh:()=>ynt,toNestedArray:()=>Ju,toTypedArray:()=>_m});var pv=Ml(gV());var oc=pv.default||pv;function Dh(r){return oc.fromString(r,!0,16)}var yV=Dh("c3a5c85c97cb3127"),rc=Dh("b492b66fbe98f273"),no=Dh("9ae16a3b2f90404f");function cv(r){return r.xor(r.shru(47))}function bV(r,e,t){let o=r.slice(e,e+t);return oc.fromBytes(Array.from(o),!0,!0)}function Pe(r,e){return bV(r,e,8)}function xV(r,e){return bV(r,e,4)}function Ar(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Il(r,e,t=Dh("9ddfea08eb382d69")){let o=r.xor(e).mul(t);o=o.xor(o.shru(47));let n=e.xor(o).mul(t);return n=n.xor(n.shru(47)),n=n.mul(t),n}function Pnt(r,e,t,o,n,s){n=n.add(r),s=Ar(s.add(n).add(o),21);let i=n;return n=n.add(e),n=n.add(t),s=s.add(Ar(n,44)),[n.add(o),s.add(i)]}function Sb(r,e,t,o){return Pnt(Pe(r,e),Pe(r,e+8),Pe(r,e+16),Pe(r,e+24),t,o)}function znt(r,e=r.length){if(e>=8){let t=no.add(e*2),o=Pe(r,0).add(no),n=Pe(r,e-8),s=Ar(n,37).mul(t).add(o),i=Ar(o,25).add(n).mul(t);return Il(s,i,t)}if(e>=4){let t=no.add(e*2),o=xV(r,0);return Il(o.shl(3).add(e),xV(r,e-4),t)}if(e>0){let t=r[0],o=r[e>>1],n=r[e-1],s=t+(o<<8),i=e+(n<<2);return cv(no.mul(s).xor(yV.mul(i))).mul(no)}return no}function Bnt(r,e=r.length){let t=no.add(e*2),o=Pe(r,0).mul(rc),n=Pe(r,8),s=Pe(r,e-8).mul(t),i=Pe(r,e-16).mul(no);return Il(Ar(o.add(n),43).add(Ar(s,30)).add(i),o.add(Ar(n.add(no),18)).add(s),t)}function Mnt(r,e=r.length){let t=no.add(e*2),o=Pe(r,0).mul(no),n=Pe(r,8),s=Pe(r,e-8).mul(t),i=Pe(r,e-16).mul(no),a=Ar(o.add(n),43).add(Ar(s,30)).add(i),l=Il(a,o.add(Ar(n.add(no),18)).add(s),t),u=Pe(r,16).mul(t),c=Pe(r,24),p=a.add(Pe(r,e-32)).mul(t),m=l.add(Pe(r,e-24)).mul(t);return Il(Ar(u.add(c),43).add(Ar(p,30)).add(m),u.add(Ar(c.add(o),18)).add(p),t)}function Vnt(r,e=r.length){let t=oc.fromNumber(81,!0);if(e<=32)return e<=16?znt(r,e):Bnt(r,e);if(e<=64)return Mnt(r,e);let o=t,n=t.mul(rc).add(113),s=cv(n.mul(no).add(113)).mul(no),i=[oc.UZERO,oc.UZERO],a=[oc.UZERO,oc.UZERO];o=o.mul(no).add(Pe(r,0));let l=0,u=(e-1>>6)*64,c=u+(e-1&63)-63;do o=Ar(o.add(n).add(i[0]).add(Pe(r,l+8)),37).mul(rc),n=Ar(n.add(i[1]).add(Pe(r,l+48)),42).mul(rc),o=o.xor(a[1]),n=n.add(i[0]).add(Pe(r,l+40)),s=Ar(s.add(a[0]),33).mul(rc),i=Sb(r,l,i[1].mul(rc),o.add(a[0])),a=Sb(r,l+32,s.add(a[1]),n.add(Pe(r,l+16))),[s,o]=[o,s],l+=64;while(l!==u);let p=rc.add(s.and(255).shl(1));return l=c,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),o=Ar(o.add(n).add(i[0]).add(Pe(r,l+8)),37).mul(p),n=Ar(n.add(i[1]).add(Pe(r,l+48)),42).mul(p),o=o.xor(a[1].mul(9)),n=n.add(i[0].mul(9).add(Pe(r,l+40))),s=Ar(s.add(a[0]),33).mul(p),i=Sb(r,l,i[1].mul(p),o.add(a[0])),a=Sb(r,l+32,s.add(a[1]),n.add(Pe(r,l+16))),[s,o]=[o,s],Il(Il(i[0],a[0],p).add(cv(n).mul(yV)).add(s),Il(i[1],a[1],p).add(o),p)}function Gnt(r,e){return e==="string"?vb(r):_m([r],e)}function Wnt(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function _m(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=vl(r)),Ot().getBool("DEBUG")&&YS(r,e),Wnt(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let o=0;o<t.length;++o)Math.round(r[o])!==0&&(t[o]=1);return t}else throw new Error(`Unknown data type ${e}`)}function nc(){return Ot().platform.now()}function Unt(r,e){return Ot().platform.fetch(r,e)}function vb(r,e="utf-8"){return e=e||"utf-8",Ot().platform.encode(r,e)}function Cb(r,e="utf-8"){return e=e||"utf-8",Ot().platform.decode(r,e)}var Ib=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new mv)}profileKernel(e,t,o){let n,s=()=>{n=o()},i,a=nc();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let u of n)u.dataSync();i=Promise.resolve({kernelMs:nc()-a})}if(Ot().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<n.length;u++){let c=n[u];c.data().then(p=>{Hnt(p,c.dtype,e)})}return{kernelName:e,outputs:n,inputs:t,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:o,timeMs:n,inputs:s,extraInfo:i}=e;o.forEach(a=>{Promise.all([a.data(),n,i]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],s,l[2])})})}};function Hnt(r,e,t){if(e!=="float32")return!1;for(let o=0;o<r.length;o++){let n=r[o];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${t}'`),!0}return!1}var mv=class{logKernelProfile(e,t,o,n,s,i){let a=typeof n=="number"?Qu(`${n}ms`,9):n.error,l=Qu(e,25),u=t.rank,c=t.size,p=Qu(t.shape.toString(),14),m="";for(let f in s){let h=s[f];if(h!=null){let g=h.shape||t.shape,d=g.length;m+=`${f}: ${d}D ${d>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${p}	%c${c}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function wV(r,e,t){let o={},n={};for(let l=0;l<e.length;l++)o[e[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let m=c[p],f=!1;for(let h=0;h<e.length;h++)if(o[m.id]){u.outputs.forEach(g=>o[g.id]=!0),f=!0,n[u.id]=!0;break}if(f)break}}let s={};s[t.id]=!0;let i={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(s[u.outputs[p].id]){for(let m in c)s[c[m].id]=!0,i[u.id]=!0;break}}let a=[];for(let l=0;l<r.length;l++){let u=r[l];if(n[u.id]&&i[u.id]){let c={};for(let m in u.inputs){let f=u.inputs[m];o[f.id]&&(c[m]=f)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,a.push(p)}}return a}function NV(r,e,t,o){for(let n=e.length-1;n>=0;n--){let s=e[n],i=[];if(s.outputs.forEach(l=>{let u=r[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let l in s.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);let u=t(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=s.inputs[l];if(!Cn(u.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=o(p,u),p.dispose()}}}}var TV=20,_h=3,fv=7;function SV(r,e,t,o){let n=km(e),s=qnt(r,e,t,n),i=e.length,a=kb(r,e,t,n,s),l=["Tensor"];return o&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function qnt(r,e,t,o){let n=we(e),s=o[o.length-1],i=new Array(s).fill(0),a=e.length,l=t==="complex64"?Fh(r):r;if(a>1)for(let u=0;u<n/s;u++){let c=u*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],Rh(l[c+p],0,t).length)}return i}function Rh(r,e,t){let o;return Array.isArray(r)?o=`${parseFloat(r[0].toFixed(fv))} + ${parseFloat(r[1].toFixed(fv))}j`:Cm(r)?o=`'${r}'`:t==="bool"?o=vV(r):o=parseFloat(r.toFixed(fv)).toString(),Qu(o,e)}function vV(r){return r===0?"false":"true"}function kb(r,e,t,o,n,s=!0){let i=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){let g=Fh(r);return[Rh(g[0],0,t)]}return t==="bool"?[vV(r[0])]:[r[0].toString()]}if(l===1){if(a>TV){let d=_h*i,x=Array.from(r.slice(0,d)),y=Array.from(r.slice((a-_h)*i,a*i));return t==="complex64"&&(x=Fh(x),y=Fh(y)),["["+x.map((w,N)=>Rh(w,n[N],t)).join(", ")+", ..., "+y.map((w,N)=>Rh(w,n[a-_h+N],t)).join(", ")+"]"]}return["["+(t==="complex64"?Fh(r):Array.from(r)).map((d,x)=>Rh(d,n[x],t)).join(", ")+"]"]}let u=e.slice(1),c=o.slice(1),p=o[0]*i,m=[];if(a>TV){for(let g=0;g<_h;g++){let d=g*p,x=d+p;m.push(...kb(r.slice(d,x),u,t,c,n,!1))}m.push("...");for(let g=a-_h;g<a;g++){let d=g*p,x=d+p;m.push(...kb(r.slice(d,x),u,t,c,n,g===a-1))}}else for(let g=0;g<a;g++){let d=g*p,x=d+p;m.push(...kb(r.slice(d,x),u,t,c,n,g===a-1))}let f=l===2?",":"";m[0]="["+m[0]+f;for(let g=1;g<m.length-1;g++)m[g]=" "+m[g]+f;let h=`,
`;for(let g=2;g<l;g++)h+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":h),m}function Fh(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var kl=class{constructor(e,t,o){if(this.dtype=t,this.shape=e.slice(),this.size=we(e),o!=null){let n=o.length;F(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=o||XS(t,this.size),this.strides=km(e)}set(e,...t){t.length===0&&(t=[0]),F(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let o=this.locToIndex(t);this.values[o]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let o=e[e.length-1];for(let n=0;n<e.length-1;++n)o+=this.strides[n]*e[n];return this.values[o]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let o=0;o<e.length-1;++o)t+=this.strides[o]*e[o];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let o=0;o<t.length-1;++o)t[o]=Math.floor(e/this.strides[o]),e-=t[o]*this.strides[o];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Qn().makeTensor(this.values,this.shape,this.dtype)}},Qn=null,Rm=null,Knt=null;function CV(r){Qn=r}function IV(r){Rm=r}function kV(r){Knt=r}var ze=class{constructor(e,t,o,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=we(e),this.strides=km(e),this.dataId=o,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return V(this,null,function*(){let e=yield this.data();return Rm.buffer(this.shape,this.dtype,e)})}bufferSync(){return Rm.buffer(this.shape,this.dtype,this.dataSync())}array(){return V(this,null,function*(){let e=yield this.data();return Ju(this.shape,e,this.dtype==="complex64")})}arraySync(){return Ju(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return V(this,null,function*(){this.throwIfDisposed();let e=Qn().read(this.dataId);if(this.dtype==="string"){let t=yield e;try{return t.map(o=>Cb(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e})}dataToGPU(e){return this.throwIfDisposed(),Qn().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Qn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Cb(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}bytes(){return V(this,null,function*(){this.throwIfDisposed();let e=yield Qn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)})}dispose(){this.isDisposed||(Qn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Rm.print(this,e)}clone(){return this.throwIfDisposed(),Rm.clone(this)}toString(e=!1){let t=this.dataSync();return SV(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Rm.cast(this,e)}variable(e=!0,t,o){return this.throwIfDisposed(),Qn().makeVariable(this,e,t,o)}};Object.defineProperty(ze,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function jnt(){return Ah("Tensor",()=>ze)}jnt();var El=class extends ze{constructor(e,t,o,n){super(e.shape,e.dtype,e.dataId,n),this.trainable=t,this.name=o}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Cn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Qn().disposeTensor(this),this.dataId=e.dataId,Qn().incRef(this,null)}dispose(){Qn().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(El,Symbol.hasInstance,{value:r=>r instanceof ze&&r.assign!=null&&r.assign instanceof Function});var EV=function(r){return r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64",r}(EV||{}),$V=function(r){return r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64",r}($V||{}),AV=function(r){return r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64",r}(AV||{}),DV=function(r){return r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64",r}(DV||{}),Xnt={float32:AV,int32:EV,bool:$V,complex64:DV};function _V(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return Xnt[r][e]}function Wt(r,e){if(r.dtype===e.dtype)return[r,e];let t=_V(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function RV(r,e){F(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function Eb(r){let e=[];return FV(r,e,new Set),e}function FV(r,e,t){if(r==null)return;if(r instanceof ze){e.push(r);return}if(!Ynt(r))return;let o=r;for(let n in o){let s=o[n];t.has(s)||(t.add(s),FV(s,e,t))}}function Ynt(r){return Array.isArray(r)||typeof r=="object"}function hv(r){return r.kernelName!=null}var $b=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Znt=(()=>{class r{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new $b}ready(){return V(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let o=0;o<t.length;o++){let n=t[o];if(yield this.initializeBackend(n).success){yield this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:o}=this.initializeBackendsAndReturnBest();if(o)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:o}=this.initializeBackend(t);if(o)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,o,n=1){return t in this.registryFactory?($m(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:o,priority:n},!0)}setBackend(t){return V(this,null,function*(){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:o,asyncInit:n}=this.initializeBackend(t);if(!(n?yield o:o))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Ib(this.backendInstance),!0})}setupRegisteredKernels(){av(this.backendName).forEach(o=>{o.setupFunc!=null&&o.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){av(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let o=this.registryFactory[t];if(o==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let n=o.factory();if(n&&!(n instanceof fb)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,i=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,$m(`Initialization of backend ${t} failed`),$m(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return $m(`Initialization of backend ${t} failed`),$m(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,o)=>this.registryFactory[o].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let o=0;o<t.length;o++){let n=t[o],{success:s,asyncInit:i}=this.initializeBackend(n);if(i||s)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,o){let n=this.state.tensorInfo.get(o),s=n.backend,i=this.readSync(o),a=s.refCount(o);s.disposeData(o,!0),n.backend=t,t.move(o,i,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,o){let n=null;if(o==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");o=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof o!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=o(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(t,o,n){t();try{let s=n();return o(),s}catch(s){throw o(),s}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(t){let o=_.runKernel(bb,{x:t}),n={x:t},s=a=>({x:()=>{let l="float32",u={x:a},c={dtype:l};return _.runKernel(yb,u,c)}}),i=[];return this.addTapeNode(this.state.activeScope.name,n,[o],s,i,{}),o}runKernel(t,o,n){if(this.backendName==null&&this.backend,!(sv(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:o,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,o,n){let s=this.backend.numDataIds(),i=0;n.forEach(u=>{i+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=s-o-i-a;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${t}'`)}runKernelFunc(t){let o,n=[],s=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u,c=hv(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(hv(t)){let{kernelName:g,inputs:d,attrs:x}=t;this.backendName==null&&this.backend;let y=sv(g,this.backendName);F(y!=null,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),l=()=>{let w=this.backend.numDataIds();u=y.kernelFunc({inputs:d,attrs:x,backend:this.backend});let N=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,w,N);let v=N.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(s){let k=this.getTensorsForGradient(g,d,v);n=this.saveTensorsForBackwardMode(k)}return v}}else{let{forwardFunc:g}=t,d=x=>{s&&(n=x.map(y=>this.keep(this.clone(y))))};l=()=>{let x=this.backend.numDataIds();u=this.tidy(()=>g(this.backend,d));let y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,x,y),y}}let{inputs:p,attrs:m}=t,f=hv(t)?null:t.backwardsFunc,h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?o=l():(h=this.profiler.profileKernel(c,p,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),o=h.outputs)}),s&&this.addTapeNode(c,p,o,f,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(g=>p[g]!=null?p[g].shape:null),outputShapes:o.map(g=>g.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(u)?o:o[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,o,n){let s=iv(t);if(s!=null){let i=s.inputsToSave||[],a=s.outputsToSave||[],l;s.saveAllInputs?(F(Array.isArray(o),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(o).map(c=>o[c])):l=i.map(c=>o[c]);let u=n.filter((c,p)=>a[p]);return l.concat(u)}return[]}makeTensor(t,o,n,s){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let i=t;n==="string"&&Cm(t[0])&&(i=t.map(u=>vb(u)));let a=s.write(i,o,n),l=new ze(o,n,a,this.nextTensorId());if(this.trackTensor(l,s),n==="string"){let u=this.state.tensorInfo.get(a),c=JS(i);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(t,o,n,s){n=n||"float32";let i={dataId:t,shape:o,dtype:n};return this.makeTensorFromTensorInfo(i,s)}makeTensorFromTensorInfo(t,o){let{dataId:n,shape:s,dtype:i}=t,a=new ze(s,i,n,this.nextTensorId());return this.trackTensor(a,o),a}makeVariable(t,o=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==t.dtype&&(t=t.cast(s));let i=new El(t,o,n,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,o){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*db(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:o||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof El||this.track(t)}incRef(t,o){this.trackTensor(t,o),this.backend.incRef(t.dataId)}removeDataId(t,o){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===o&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let o=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=o.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let n=t.size*db(t.dtype);this.state.numBytes-=n}o.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,o.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let o=this.state.registeredVariables[t];this.disposeVariable(o)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}profile(t){return V(this,null,function*(){this.state.profiling=!0;let o=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-o,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=yield s.kernelTimeMs,s.extraInfo=yield s.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,o,n,s,i,a){let l={id:this.state.nextTapeNodeId++,kernelName:t,inputs:o,outputs:n,saved:i},u=iv(t);u!=null&&(s=u.gradFunc),s!=null&&(l.gradient=c=>(c=c.map((p,m)=>{if(p==null){let f=n[m],h=Em(f.size,f.dtype);return this.makeTensor(h,f.shape,f.dtype)}return p}),s(c.length>1?c:c[0],i,a))),this.state.activeTape.push(l)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let o={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(o.name=t),this.state.scopeStack.push(o),this.state.activeScope=o}endScope(t){let o=Eb(t),n=new Set(o.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){let a=this.state.activeScope.track[i];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],o.forEach(i=>{!i.kept&&i.scopeId===s.id&&this.track(i)})}gradients(t,o,n,s=!1){if(F(o.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));F(i instanceof ze,()=>"The result y returned by f() must be a tensor.");let a=wV(this.state.activeTape,o,i);if(!s&&a.length===0&&o.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let l={};l[i.id]=n??Jnt(i.shape),NV(l,a,c=>this.tidy(c),Qnt);let u=o.map(c=>l[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let p of c.saved)p.dispose()}),this.state.activeTape=null),{value:i,grads:u}})}customGrad(t){return F(gb(t),()=>"The f passed in customGrad(f) must be a function."),(...o)=>{F(o.every(l=>l instanceof ze),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};o.forEach((l,u)=>{s[u]=l});let i=(l,u)=>(n=t(...o,u),F(n.value instanceof ze,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(gb(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(l,u)=>{let c=n.gradFunc(l,u),p=Array.isArray(c)?c:[c];F(p.length===o.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(p.every(f=>f instanceof ze),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return p.forEach((f,h)=>{m[h]=()=>f}),m};return this.runKernelFunc({forwardFunc:i,backwardsFunc:a,inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,o){return this.state.tensorInfo.get(t).backend.readToGPU(t,o)}time(t){return V(this,null,function*(){let o=nc(),n=yield this.backend.time(t);return n.wallMs=nc()-o,n})}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new $b;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return r.nextTensorId=0,r.nextVariableId=0,r})();function Jnt(r){let e=Ih(we(r),"float32");return _.makeTensor(e,r,"float32")}function dv(){let r=ev();if(r._tfengine==null){let e=new $h(r);r._tfengine=new Znt(e)}return bz(r._tfengine.ENV),CV(()=>r._tfengine),r._tfengine}var _=dv();function Qnt(r,e){let t={a:r,b:e};return _.runKernel(xb,t)}function OV(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Vo=Ot();Vo.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Vo.registerFlag("IS_BROWSER",()=>OV());Vo.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Vo.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Vo.registerFlag("PROD",()=>!1);Vo.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Vo.getBool("DEBUG"));Vo.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Vo.registerFlag("IS_TEST",()=>!1);Vo.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Vo.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Vo.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Vo.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Vo.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function wo(r,e){let t=r;if(zo(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let o=[];for(;Array.isArray(t)||zo(t)&&e!=="string";)o.push(t.length),t=t[0];return Array.isArray(r)&&Ot().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&PV(r,o,[]),o}function PV(r,e,t){if(t=t||[],!Array.isArray(r)&&!zo(r)){F(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}F(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),F(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let o=e.slice(1);for(let n=0;n<r.length;++n)PV(r[n],o,t.concat(n))}function LV(r,e,t,o){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${o}' must be ${r} tensor, but got ${e} tensor`)}}function S(r,e,t,o="numeric"){if(r instanceof ze)return LV(o,r.dtype,e,t),r;let n=Im(r);if(n!=="string"&&["bool","int32","float32"].indexOf(o)>=0&&(n=o),LV(o,n,e,t),r==null||!zo(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}let s=wo(r,n);!zo(r)&&!Array.isArray(r)&&(r=[r]);let a=n!=="string"?_m(r,n):vl(r,[],!0);return _.makeTensor(a,s,n)}function sc(r,e,t,o="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>S(s,`${e}[${i}]`,t,o))}var gv="__op";function C(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],o=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+gv;let n=(...s)=>{_.startScope(t);try{let i=o(...s);return Eh(i)&&console.error("Cannot return a Promise inside of tidy."),_.endScope(i),i}catch(i){throw _.endScope(null),i}};return Object.defineProperty(n,"name",{value:t,configurable:!0}),n}function est(r,e){let t=S(r,"real","complex"),o=S(e,"imag","complex");Qe(t.shape,o.shape,`real and imag shapes, ${t.shape} and ${o.shape}, must match in call to tf.complex().`);let n={real:t,imag:o};return _.runKernel(Vz,n)}var No=C({complex_:est});function so(r,e,t,o){if(o==null&&(o=Im(r)),o==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!zo(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){kh(e);let n=we(e),s=we(t);F(n===s,()=>`Based on the provided shape, [${e}], the tensor should have ${n} values but has ${s}`);for(let i=0;i<t.length;++i){let a=t[i],l=i===t.length-1?a!==we(e.slice(i)):!0;F(t[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!zo(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=o!=="string"?_m(r,o):vl(r,[],!0),_.makeTensor(r,e,o)}function io(r,e,t){let o=wo(r,t);return so(r,e,o,t)}var Oh={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Ab=4;function BV(r,e){return V(this,null,function*(){let t=[],o=[],n=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<n.length;++i){let a=n[i],l=Array.isArray(r)?r[i].tensor:r[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);let u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(p=>V(this,null,function*(){let m=yield l.bytes(),f=m.reduce((d,x)=>d+x.length,0)+Ab*m.length,h=new Uint8Array(f),g=0;for(let d=0;d<m.length;d++){let x=m[d],y=new Uint8Array(new Uint32Array([x.length]).buffer);h.set(y,g),g+=Ab,h.set(x,g),g+=x.length}p(h)}));o.push(c)}else o.push(l.data());e!=null&&(u.group=e),t.push(u)}let s=yield Promise.all(o);return{data:rst(s),specs:t}})}function Db(r,e){let t={},o,n=0;for(let s of e){let i=s.name,a=s.dtype,l=s.shape,u=we(l),c;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let m=Oh[p.dtype],f=r.slice(n,n+u*m),h=p.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(a==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(h.length);for(let g=0;g<h.length;g++){let d=h[g];c[g]=d*p.scale+p.min}}else if(p.dtype==="float16")o===void 0&&(o=ist()),c=o(h);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(a==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(h.length);for(let g=0;g<h.length;g++){let d=h[g];c[g]=Math.round(d*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);n+=u*m}else if(a==="string"){let p=we(s.shape);c=[];for(let m=0;m<p;m++){let f=new Uint32Array(r.slice(n,n+Ab))[0];n+=Ab;let h=new Uint8Array(r.slice(n,n+f));c.push(h),n+=f}}else{let p=Oh[a],m=r.slice(n,n+u*p);if(a==="float32")c=new Float32Array(m);else if(a==="int32")c=new Int32Array(m);else if(a==="bool")c=new Uint8Array(m);else if(a==="complex64"){c=new Float32Array(m);let f=new Float32Array(c.length/2),h=new Float32Array(c.length/2);for(let x=0;x<f.length;x++)f[x]=c[x*2],h[x]=c[x*2+1];let g=io(f,l,"float32"),d=io(h,l,"float32");t[i]=No(g,d),g.dispose(),d.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);n+=u*p}a!=="complex64"&&(t[i]=io(c,l,a))}return t}function rst(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let o=new Uint8Array(e),n=0;return t.forEach(s=>{o.set(new Uint8Array(s.buffer),n),n+=s.byteLength}),o.buffer}var xv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function zV(r){return xv?Buffer.byteLength(r):new Blob([r]).size}function MV(r){if(xv)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let o=0,n=e.length;o<n;o++)t+=String.fromCharCode(e[o]);return btoa(t)}function VV(r){if(xv){let o=Buffer.from(r,"base64");return o.buffer.slice(o.byteOffset,o.byteOffset+o.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let o=0;o<e.length;++o)t.set([e.charCodeAt(o)],o);return t.buffer}function Fm(r){if(r.length===1)return r[0];let e=0;r.forEach(n=>{e+=n.byteLength});let t=new Uint8Array(e),o=0;return r.forEach(n=>{t.set(new Uint8Array(n),o),o+=n.byteLength}),t.buffer}function yv(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function _b(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}function bv(r,e,t){let o={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(o.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");o.weightSpecs=e,o.weightData=t}return r.signature!=null&&(o.signature=r.signature),r.userDefinedMetadata!=null&&(o.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(o.modelInitializer=r.modelInitializer),o}function Om(r,e){return V(this,null,function*(){let t,o;return r.weightsManifest!=null&&([t,o]=yield e(r.weightsManifest)),bv(r,t,o)})}function vs(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:zV(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:zV(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function Rb(r){let e=[];for(let t of r)e.push(...t.weights);return e}function ost(){let r=t=>{let o=t<<13,n=0;for(;(o&8388608)===0;)n-=8388608,o<<=1;return o&=-8388609,n+=947912704,o|n},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function nst(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function sst(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function ist(){let r=ost(),e=nst(),t=sst();return o=>{let n=new ArrayBuffer(4*o.length),s=new Uint32Array(n);for(let i=0;i<o.length;i++){let a=o[i],l=r[t[a>>10]+(a&1023)]+e[a>>10];s[i]=l}return new Float32Array(n)}}var Nr=class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(e){r.getInstance().saveRouters.push(e)}static registerLoadRouter(e){r.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return r.getHandlers(e,"save")}static getLoadHandlers(e,t){return r.getHandlers(e,"load",t)}static getHandlers(e,t,o){let n=[];return(t==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(i=>{let a=i(e,o);a!==null&&n.push(a)}),n}},GV=r=>Nr.registerSaveRouter(r),WV=r=>Nr.registerLoadRouter(r),UV=r=>Nr.getSaveHandlers(r),HV=(r,e)=>Nr.getLoadHandlers(r,e);var wv="tensorflowjs",Nv=1,ic="models_store",$l="model_info_store";function qV(){if(!Ot().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Tv(r){let e=r.result;e.createObjectStore(ic,{keyPath:"modelPath"}),e.createObjectStore($l,{keyPath:"modelPath"})}var ac=(()=>{class r{constructor(t){if(this.indexedDB=qV(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}save(t){return V(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)})}load(){return V(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(t,o){return new Promise((n,s)=>{let i=this.indexedDB.open(wv,Nv);i.onupgradeneeded=()=>Tv(i),i.onsuccess=()=>{let a=i.result;if(o==null){let l=a.transaction(ic,"readonly"),c=l.objectStore(ic).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=p=>(a.close(),s(c.error)),l.oncomplete=()=>a.close()}else{let l=vs(o),u=a.transaction($l,"readwrite"),c=u.objectStore($l),p=c.put({modelPath:this.modelPath,modelArtifactsInfo:l}),m;p.onsuccess=()=>{m=a.transaction(ic,"readwrite");let h=m.objectStore(ic).put({modelPath:this.modelPath,modelArtifacts:o,modelArtifactsInfo:l});h.onsuccess=()=>n({modelArtifactsInfo:l}),h.onerror=g=>{c=u.objectStore($l);let d=c.delete(this.modelPath);d.onsuccess=()=>(a.close(),s(h.error)),d.onerror=x=>(a.close(),s(h.error))}},p.onerror=f=>(a.close(),s(p.error)),u.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},i.onerror=a=>s(i.error)})}}return r.URL_SCHEME="indexeddb://",r})(),KV=r=>Ot().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ac.URL_SCHEME)?ast(r.slice(ac.URL_SCHEME.length)):null;Nr.registerSaveRouter(KV);Nr.registerLoadRouter(KV);function ast(r){return new ac(r)}function lst(r){return r.startsWith(ac.URL_SCHEME)?r.slice(ac.URL_SCHEME.length):r}var Fb=class{constructor(){this.indexedDB=qV()}listModels(){return V(this,null,function*(){return new Promise((e,t)=>{let o=this.indexedDB.open(wv,Nv);o.onupgradeneeded=()=>Tv(o),o.onsuccess=()=>{let n=o.result,s=n.transaction($l,"readonly"),a=s.objectStore($l).getAll();a.onsuccess=()=>{let l={};for(let u of a.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},a.onerror=l=>(n.close(),t(a.error)),s.oncomplete=()=>n.close()},o.onerror=n=>t(o.error)})})}removeModel(e){return V(this,null,function*(){return e=lst(e),new Promise((t,o)=>{let n=this.indexedDB.open(wv,Nv);n.onupgradeneeded=()=>Tv(n),n.onsuccess=()=>{let s=n.result,i=s.transaction($l,"readwrite"),a=i.objectStore($l),l=a.get(e),u;l.onsuccess=()=>{if(l.result==null)return s.close(),o(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=a.delete(e),p=()=>{u=s.transaction(ic,"readwrite");let f=u.objectStore(ic).delete(e);f.onsuccess=()=>t(l.result.modelArtifactsInfo),f.onerror=h=>o(l.error)};c.onsuccess=p,c.onerror=m=>(p(),s.close(),o(l.error))}},l.onerror=c=>(s.close(),o(l.error)),i.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},n.onerror=s=>o(n.error)})})}};var Qi="/",Lm="tensorflowjs_models",jV="info",ust="model_topology",cst="weight_specs",pst="weight_data",mst="model_metadata";function XV(r){return{info:[Lm,r,jV].join(Qi),topology:[Lm,r,ust].join(Qi),weightSpecs:[Lm,r,cst].join(Qi),weightData:[Lm,r,pst].join(Qi),modelMetadata:[Lm,r,mst].join(Qi)}}function YV(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function fst(r){let e=r.split(Qi);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(Qi)}function hst(r){return r.startsWith(lc.URL_SCHEME)?r.slice(lc.URL_SCHEME.length):r}var lc=(()=>{class r{constructor(t){if(!Ot().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=XV(this.modelPath)}save(t){return V(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let o=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),s=vs(t);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,o),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,MV(t.weightData));let i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:s}}catch{throw YV(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}})}load(){return V(this,null,function*(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let o={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);o.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);o.weightSpecs=s;let i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){let l=JSON.parse(i);o.format=l.format,o.generatedBy=l.generatedBy,o.convertedBy=l.convertedBy,l.signature!=null&&(o.signature=l.signature),l.userDefinedMetadata!=null&&(o.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(o.modelInitializer=l.modelInitializer),l.trainingConfig!=null&&(o.trainingConfig=l.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return o.weightData=VV(a),o})}}return r.URL_SCHEME="localstorage://",r})(),ZV=r=>Ot().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(lc.URL_SCHEME)?dst(r.slice(lc.URL_SCHEME.length)):null;Nr.registerSaveRouter(ZV);Nr.registerLoadRouter(ZV);function dst(r){return new lc(r)}var Ob=class{constructor(){F(Ot().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return V(this,null,function*(){let e={},t=Lm+Qi,o=Qi+jV;for(let n=0;n<this.LS.length;++n){let s=this.LS.key(n);if(s.startsWith(t)&&s.endsWith(o)){let i=fst(s);e[i]=JSON.parse(this.LS.getItem(s))}}return e})}removeModel(e){return V(this,null,function*(){e=hst(e);let t=XV(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let o=JSON.parse(this.LS.getItem(t.info));return YV(t),o})}};var Pm="://",ts=class r{constructor(){this.managers={}}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerManager(e,t){F(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Pm)&&(e=e.slice(0,e.indexOf(Pm))),F(e.length>0,()=>"scheme must not be an empty string.");let o=r.getInstance();F(o.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),o.managers[e]=t}static getManager(e){let t=r.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(r.getInstance().managers)}};function Lb(r){if(r.indexOf(Pm)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ts.getSchemes().join(",")}`);return{scheme:r.split(Pm)[0],path:r.split(Pm)[1]}}function JV(r,e,t=!1){return V(this,null,function*(){F(r!==e,()=>`Old path and new path are the same: '${r}'`);let o=Nr.getLoadHandlers(r);F(o.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),F(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${r}.`);let n=o[0],s=Nr.getSaveHandlers(e);F(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),F(s.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${e}.`);let i=s[0],a=Lb(r).scheme,l=Lb(r).path,u=a===Lb(r).scheme,c=yield n.load();t&&u&&(yield ts.getManager(a).removeModel(l));let p=yield i.save(c);return t&&!u&&(yield ts.getManager(a).removeModel(l)),p.modelArtifactsInfo})}function QV(){return V(this,null,function*(){let r=ts.getSchemes(),e={};for(let t of r){let o=yield ts.getManager(t).listModels();for(let n in o){let s=t+Pm+n;e[s]=o[n]}}return e})}function tG(r){return V(this,null,function*(){let e=Lb(r);return ts.getManager(e.scheme).removeModel(e.path)})}function eG(r,e){return V(this,null,function*(){return JV(r,e,!1)})}function rG(r,e){return V(this,null,function*(){return JV(r,e,!0)})}var Sv=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(!window||!Ot().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",o=>{if(o.source===window&&o.data.name===this.messageName){o.stopPropagation();let n=this.functionRefs[o.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}};if(Ot().get("IS_BROWSER")){Ot().setPlatform("browser",new Sv);try{ts.registerManager(lc.URL_SCHEME,new Ob)}catch{}try{ts.registerManager(ac.URL_SCHEME,new Fb)}catch{}}var gst={importFetch:()=>S0()},vv;var Cv=class{constructor(){this.util=v0(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Ot().global.fetch!=null?Ot().global.fetch(e,t):(vv==null&&(vv=gst.importFetch()),vv(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Ot().get("IS_NODE")&&!Ot().get("IS_BROWSER")&&Ot().setPlatform("node",new Cv);function qr(r,e="float32",t){return e=e||"float32",kh(r),new kl(r,e,t)}function xst(r,e){let t=S(r,"x","cast");if(!ZS(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let o={x:t},n={dtype:e};return _.runKernel(yb,o,n)}var me=C({cast_:xst});function yst(r){let t={x:S(r,"x","clone","string_or_numeric")};return _.runKernel(bb,t)}var Go=C({clone_:yst});function Pb(r,e=!1){console.log(r.toString(e))}dv();var bst={buffer:qr,cast:me,clone:Go,print:Pb};IV(bst);var Ph={};le(Ph,{browserFiles:()=>nG,browserHTTPRequest:()=>lG,concatenateArrayBuffers:()=>Fm,copyModel:()=>eG,decodeWeights:()=>Db,encodeWeights:()=>BV,fromMemory:()=>uG,fromMemorySync:()=>_v,getLoadHandlers:()=>HV,getModelArtifactsForJSON:()=>Om,getModelArtifactsForJSONSync:()=>bv,getModelArtifactsInfoForJSON:()=>vs,getSaveHandlers:()=>UV,getWeightSpecs:()=>Rb,http:()=>Bb,isHTTPScheme:()=>zb,listModels:()=>QV,loadWeights:()=>sG,moveModel:()=>rG,registerLoadRouter:()=>WV,registerSaveRouter:()=>GV,removeModel:()=>tG,weightsLoaderFactory:()=>Av,withSaveHandler:()=>cG,withSaveHandlerSync:()=>pG});var wst="model",Nst=".json",Tst=".weights.bin";function oG(r){return new Promise(e=>setTimeout(e)).then(r)}var Iv=(()=>{class r{constructor(t){if(!Ot().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(r.URL_SCHEME)&&(t=t.slice(r.URL_SCHEME.length)),(t==null||t.length===0)&&(t=wst),this.modelJsonFileName=t+Nst,this.weightDataFileName=t+Tst}save(t){return V(this,null,function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let o=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s=_b(t,n),i=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=i,yield oG(()=>a.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=o,yield oG(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:vs(t)}}})}}return r.URL_SCHEME="downloads://",r})(),kv=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}load(){return V(this,null,function*(){return new Promise((e,t)=>{let o=new FileReader;o.onload=n=>{let s=JSON.parse(n.target.result),i=s.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}let l=Om(s,u=>this.loadWeights(u));e(l)},o.onerror=n=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(this.jsonFile)})})}loadWeights(e){let t=[],o=[];for(let i of e)t.push(...i.weights),o.push(...i.paths);let n=this.checkManifestAndWeightFiles(e),s=o.map(i=>this.loadWeightsFile(i,n[i]));return Promise.all(s).then(i=>[t,Fm(i)])}loadWeightsFile(e,t){return new Promise((o,n)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;o(a)},s.onerror=i=>n(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],o=this.weightsFiles.map(s=>yv(s.name)),n={};for(let s of e)s.paths.forEach(i=>{let a=yv(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),o.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);n[i]=this.weightsFiles[o.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},Sst=r=>Ot().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Iv.URL_SCHEME)?vst(r.slice(Iv.URL_SCHEME.length)):null;Nr.registerSaveRouter(Sst);function vst(r="model"){return new Iv(r)}function nG(r){return new kv(r)}function Ev(r,e,t,o){i(r),t=t??0,o=o??1,a(t,o);let n=0,s=l=>(l.then(u=>{let c=t+ ++n/r.length*(o-t);return e(c),u}),l);function i(l){F(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){F(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),F(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),F(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(s))}function $v(r,e){return V(this,null,function*(){e==null&&(e={});let t=e.fetchFunc==null?Ot().platform.fetch:e.fetchFunc,o=r.map(p=>t(p,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?yield Promise.all(o):yield Ev(o,e.onProgress,0,.5)).map(p=>p.arrayBuffer());return e.onProgress==null?yield Promise.all(a):yield Ev(a,e.onProgress,.5,1)})}function sG(r,e="",t,o){return V(this,null,function*(){return Av(i=>$v(i,{requestInit:o}))(r,e,t)})}function Av(r){return(e,t="",o)=>V(this,null,function*(){let n=e.map(()=>!1),s={},i=o!=null?o.map(()=>!1):[],a=[];if(e.forEach((f,h)=>{let g=0;f.weights.forEach(d=>{let x="quantization"in d?d.quantization.dtype:d.dtype,y=Oh[x]*we(d.shape),w=()=>{n[h]=!0,s[h]==null&&(s[h]=[]),s[h].push({manifestEntry:d,groupOffset:g,sizeBytes:y})};o!=null?o.forEach((N,v)=>{N===d.name&&(w(),i[v]=!0)}):w(),a.push(d.name),g+=y})}),!i.every(f=>f)){let f=o.filter((h,g)=>!i[g]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let l=n.reduce((f,h,g)=>(h&&f.push(g),f),[]),u=[];l.forEach(f=>{e[f].paths.forEach(h=>{let g=t+(t.endsWith("/")?"":"/")+h;u.push(g)})});let c=yield r(u),p={},m=0;return l.forEach(f=>{let h=e[f].paths.length,g=0;for(let N=0;N<h;N++)g+=c[m+N].byteLength;let d=new ArrayBuffer(g),x=new Uint8Array(d),y=0;for(let N=0;N<h;N++){let v=new Uint8Array(c[m+N]);x.set(v,y),y+=v.byteLength}s[f].forEach(N=>{let v=d.slice(N.groupOffset,N.groupOffset+N.sizeBytes),k=Db(v,[N.manifestEntry]);for(let R in k)p[R]=k[R]}),m+=h}),p})}var Cst="application/octet-stream",Ist="application/json",iG=(()=>{class r{constructor(t,o){if(this.DEFAULT_METHOD="POST",o==null&&(o={}),this.weightPathPrefix=o.weightPathPrefix,this.onProgress=o.onProgress,this.weightUrlConverter=o.weightUrlConverter,o.fetchFunc!=null?(F(typeof o.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=o.fetchFunc):this.fetch=Ot().platform.fetch,F(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&F(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,o.requestInit!=null&&o.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=o.requestInit||{}}save(t){return V(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let o=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);o.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],s=_b(t,n);o.body.append("model.json",new Blob([JSON.stringify(s)],{type:Ist}),"model.json"),t.weightData!=null&&o.body.append("model.weights.bin",new Blob([t.weightData],{type:Cst}),"model.weights.bin");let i=yield this.fetch(this.path,o);if(i.ok)return{modelArtifactsInfo:vs(t),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)})}load(){return V(this,null,function*(){let t=yield this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let o;try{o=yield t.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=o.modelTopology,s=o.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Om(o,i=>this.loadWeights(i))})}loadWeights(t){return V(this,null,function*(){let o=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=kst(o),i=this.weightPathPrefix||n,a=Rb(t),l=[],u=[];for(let p of t)for(let m of p.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(m)):l.push(i+m+s);this.weightUrlConverter&&l.push(...yield Promise.all(u));let c=yield $v(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Fm(c)]})}}return r.URL_SCHEME_REGEX=/^https?:\/\//,r})();function kst(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),o=r.substring(0,e),n=t>e?r.substring(t):"";return[o+"/",n]}function zb(r){return r.match(iG.URL_SCHEME_REGEX)!=null}var aG=(r,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(o=>zb(o)):t=zb(r),t)return Bb(r,e)}return null};Nr.registerSaveRouter(aG);Nr.registerLoadRouter(aG);function Bb(r,e){return new iG(r,e)}function lG(r,e){return Bb(r,e)}var Lh=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},Mb=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},Dv=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function uG(r,e,t,o){let n=arguments;return new Dv(_v(...n))}function _v(r,e,t,o){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Lh(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Lh({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Lh({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:o}))}function cG(r){return new Mb(r)}function pG(r){return new Mb(r)}function Est(r,e,t=!1,o=!1){let n=S(r,"a","matMul"),s=S(e,"b","matMul");[n,s]=Wt(n,s);let i={a:n,b:s},a={transposeA:t,transposeB:o};return _.runKernel(Oz,i,a)}var oe=C({matMul_:Est});function $st(r,e,t=1,o=0,n="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let i={indices:S(r,"indices","oneHot","int32")},a={dtype:n,depth:e,onValue:t,offValue:o};return _.runKernel(nM,i,a)}var mG=C({oneHot_:$st});function Ast(r){Ot().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}kV(Ast);function Tr(r,e){return _.tidy(r,e)}function fG(r){Eb(r).forEach(t=>t.dispose())}function es(r){return _.keep(r)}function Dst(r){let t={input:S(r,"input","imag")};return _.runKernel(IB,t)}var Al=C({imag_:Dst});function _st(r){let t={x:S(r,"x","neg")};return _.runKernel(JB,t)}var ao=C({neg_:_st});function Rst(r){let t={input:S(r,"input","real")};return _.runKernel(fM,t)}var ta=C({real_:Rst});function Fst(r,e,t){let o=S(r,"x","transpose");if(e==null&&(e=o.shape.map((i,a)=>a).reverse()),F(o.rank===e.length,()=>`Error in transpose: rank of input ${o.rank} must match length of perm ${e}.`),e.forEach(i=>{F(i>=0&&i<o.rank,()=>`All entries in 'perm' must be between 0 and ${o.rank-1} but got ${e}`)}),o.rank<=1)return o.clone();let n={x:o},s={perm:e};return o.dtype==="complex64"?Tr(()=>{let i=ta(o),a=Al(o);return i=_.runKernel(Nb,{x:i},s),a=_.runKernel(Nb,{x:a},s),t&&(a=ao(a)),No(i,a)}):_.runKernel(Nb,n,s)}var Vb=C({transpose_:Fst});function hG(r,e){let t=[];for(let o=0;o<e.length;o++){let n=r[r.length-o-1],s=e.length-o-1,i=e[s];(n==null||n===1&&i>1)&&t.unshift(s)}return t}function ae(r,e){let t=[],o=Math.max(r.length,e.length);for(let n=0;n<o;n++){let s=r[r.length-n-1];s==null&&(s=1);let i=e[e.length-n-1];if(i==null&&(i=1),s===1)t.unshift(i);else if(i===1)t.unshift(s);else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(a)}else t.unshift(s)}return t}function dG(r,e,t){if(en(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let o=wo(r,t);if(o.length!==3&&o.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return so(r,e,o,t)}function Ost(r,e,t){let o=e.rank>1?e.shape[e.rank-1]:1,n=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${o}, and batchDim: ${n}.`;if(t.rank<n)throw new Error(s+` update.rank < ${n}. `);if(r.length<o+(t.rank-n))throw new Error(s+` Output shape length < ${o+(t.rank-n)}`);if(t.rank!==n+r.length-o)throw new Error(s+` update.rank != ${n+r.length-o}`);for(let i=0;i<n;++i)if(t.shape[i]!==e.shape[i])throw new Error(s+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-n;++i)if(t.shape[i+n]!==r[i+o])throw new Error(s+` updates.shape[${i+n}] (${t.shape[i+n]}) != shape[${i+n}] (${r[i+n]})`)}function gG(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}Ost(t,e,r)}function Pst(r,e){let t=S(r,"a","add"),o=S(e,"b","add");[t,o]=Wt(t,o);let n={a:t,b:o};return _.runKernel(xb,n)}var xe=C({add_:Pst});function zst(r,e){let t=S(r,"a","floorDiv"),o=S(e,"b","floorDiv");[t,o]=Wt(t,o);let n={a:t,b:o};return _.runKernel(bB,n)}var Wb=C({floorDiv_:zst});function Bst(r,e){let t=S(r,"a","div"),o=S(e,"b","div");if([t,o]=Wt(t,o),t.dtype==="int32"&&o.dtype==="int32")return Wb(t,o);let n={a:t,b:o},s={};return _.runKernel(aB,n,s)}var Xe=C({div_:Bst});function Mst(r,e){let t=S(r,"a","mul"),o=S(e,"b","mul");[t,o]=Wt(t,o);let n={a:t,b:o};return _.runKernel(ZB,n)}var $t=C({mul_:Mst});function Vst(r){let e=S(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return _.runKernel(Gz,t)}else{let t={x:e};return _.runKernel(wz,t)}}var Kr=C({abs_:Vst});function Gst(r){let t={x:S(r,"x","acos")};return _.runKernel(Nz,t)}var xG=C({acos_:Gst});function Wst(r){let t={x:S(r,"x","acosh")};return _.runKernel(Tz,t)}var yG=C({acosh_:Wst});function Ust(r){F(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),F(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((n,s)=>S(n,`tensors${s}`,"addN")),t=e[0];e.forEach(n=>{if(n.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(n=>{if(!Cn(n.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let o=e;return _.runKernel(Sz,o)}var bG=C({addN_:Ust});function Hst(r,e=null,t=!1){let n={x:S(r,"x","all","bool")},s={axis:e,keepDims:t};return _.runKernel(vz,n,s)}var wG=C({all_:Hst});function qst(r,e=null,t=!1){let n={x:S(r,"x","any","bool")},s={axis:e,keepDims:t};return _.runKernel(Cz,n,s)}var NG=C({any_:qst});function Kst(r,e=0){let o={x:S(r,"x","argMax")},n={axis:e};return _.runKernel(Iz,o,n)}var TG=C({argMax_:Kst});function jst(r,e=0){let o={x:S(r,"x","argMin")},n={axis:e};return _.runKernel(kz,o,n)}var SG=C({argMin_:jst});function Xst(r){let t={x:S(r,"x","asin")};return _.runKernel(Ez,t)}var vG=C({asin_:Xst});function Yst(r){let t={x:S(r,"x","asinh")};return _.runKernel($z,t)}var CG=C({asinh_:Yst});function Zst(r){let t={x:S(r,"x","atan")};return _.runKernel(Az,t)}var IG=C({atan_:Zst});function Jst(r,e){let t=S(r,"a","atan2"),o=S(e,"b","atan2");[t,o]=Wt(t,o);let n={a:t,b:o};return _.runKernel(_z,n)}var kG=C({atan2_:Jst});function Qst(r){let t={x:S(r,"x","atanh")};return _.runKernel(Dz,t)}var EG=C({atanh_:Qst});function $G(r,e,t,o,n,s,i="channelsLast"){let[a,l]=Ub(e),u;if(i==="channelsLast")u=[a,l,r[3],r[3]];else if(i==="channelsFirst")u=[a,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return zh(r,u,t,o,n,s,!1,i)}function zh(r,e,t,o,n,s,i=!1,a="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p]=r;else if(a==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[m,f,,h]=e,[g,d]=Ub(t),[x,y]=Ub(o),w=Rv(m,x),N=Rv(f,y),{padInfo:v,outHeight:k,outWidth:R}=rit(n,u,c,g,d,w,N,s,a),O=i?h*p:h,L;return a==="channelsFirst"?L=[l,O,k,R]:a==="channelsLast"&&(L=[l,k,R,O]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:p,outHeight:k,outWidth:R,outChannels:O,padInfo:v,strideHeight:g,strideWidth:d,filterHeight:m,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:N,dilationHeight:x,dilationWidth:y,inShape:r,outShape:L,filterShape:e}}function tit(r,e,t,o,n){o==null&&(o=eit(r,e,t));let s=r[0],i=r[1],a=Hb((s-e+2*o)/t+1,n),l=Hb((i-e+2*o)/t+1,n);return[a,l]}function eit(r,e,t,o=1){let n=Rv(e,o);return Math.floor((r[0]*(t-1)-t+n)/2)}function Ub(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function Rv(r,e){return e<=1?r:r+(r-1)*(e-1)}function rit(r,e,t,o,n,s,i,a,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=tit([e,t],s,o,r,a);c=f[0],p=f[1]}else if(r==="same"){c=Math.ceil(e/o),p=Math.ceil(t/n);let m=Math.max(0,(c-1)*o+s-e),f=Math.max(0,(p-1)*n+i-t),h=Math.floor(m/2),g=m-h,d=Math.floor(f/2),x=f-d;u={top:h,bottom:g,left:d,right:x,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-s+1)/o),p=Math.ceil((t-i+1)/n);else if(typeof r=="object"){let m=l==="channelsLast"?r[1][0]:r[2][0],f=l==="channelsLast"?r[1][1]:r[2][1],h=l==="channelsLast"?r[2][0]:r[3][0],g=l==="channelsLast"?r[2][1]:r[3][1];u={top:m,bottom:f,left:h,right:g,type:m===0&&f===0&&h===0&&g===0?"VALID":"EXPLICIT"},c=Hb((e-s+m+f)/o+1,a),p=Hb((t-i+h+g)/n+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function Hb(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function zm(r){let[e,t,o]=Ub(r);return e===1&&t===1&&o===1}function lo(r,e){return zm(r)||zm(e)}function lr(r,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")F(Ji(e),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(o=>{o.forEach(n=>{F(Ji(n),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${n}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${e}`)}}function oit(r,e){let o={x:S(r,"x","reshape","string_or_numeric")},n={shape:e};return _.runKernel(gM,o,n)}var j=C({reshape_:oit});function nit(r,e,t,o,n){let s=S(r,"x","avgPool","float32"),i=1;F(lo(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=s,l=!1;s.rank===3&&(l=!0,a=j(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),lr("avgPool",o,n);let u={x:a},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n},p=_.runKernel(Rz,u,c);return p=me(p,s.dtype),l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var qb=C({avgPool_:nit});function sit(r,e,t,o,n,s="NDHWC"){let i=S(r,"x","avgPool3d","float32"),a=i,l=!1;i.rank===4&&(l=!0,a=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),F(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),lr("avgPool3d",o,n);let u={x:a},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n,dataFormat:s},p=_.runKernel(Fz,u,c);return p=me(p,a.dtype),l?j(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var AG=C({avgPool3d_:sit});function iit(r,e=0){F(r.length>=1,()=>"Pass at least one tensor to concat");let t=sc(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return Go(t[0]);let o=t,n={axis:e};return _.runKernel(Wz,o,n)}var $e=C({concat_:iit});function ait(r){let t={x:S(r,"x","sigmoid","float32")};return _.runKernel(DM,t)}var Is=C({sigmoid_:ait});function lit(r,e,t){let o=S(r,"x","slice","string_or_numeric");if(o.rank===0)throw new Error("Slicing scalar is not possible");let n={x:o},s={begin:e,size:t};return _.runKernel(kM,n,s)}var Jt=C({slice_:lit});function uit(r){let t={x:S(r,"x","tanh","float32")};return _.runKernel(YM,t)}var Bh=C({tanh_:uit});function cit(r,e,t,o,n,s){let i=S(r,"forgetBias","basicLSTMCell"),a=S(e,"lstmKernel","basicLSTMCell"),l=S(t,"lstmBias","basicLSTMCell"),u=S(o,"data","basicLSTMCell"),c=S(n,"c","basicLSTMCell"),p=S(s,"h","basicLSTMCell"),m=$e([u,p],1),f=oe(m,a),h=xe(f,l),g=h.shape[0],d=h.shape[1]/4,x=[g,d],y=Jt(h,[0,0],x),w=Jt(h,[0,d],x),N=Jt(h,[0,d*2],x),v=Jt(h,[0,d*3],x),k=xe($t(Is(y),Bh(w)),$t(c,Is(xe(i,N)))),R=$t(Bh(k),Is(v));return[k,R]}var DG=C({basicLSTMCell_:cit});function pit(r,e,t){let o=S(r,"x","batchToSpaceND"),n=e.reduce((a,l)=>a*l);F(o.rank>=1+e.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${e.length}`),F(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),F(o.shape[0]%n===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${n}`);let s={x:o},i={blockShape:e,crops:t};return _.runKernel(Lz,s,i)}var Kb=C({batchToSpaceND_:pit});function _G(r){let e;return r.rank===0||r.rank===1?e=j(r,[1,1,1,r.size]):r.rank===2?e=j(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function mit(r,e,t,o,n,s){s==null&&(s=.001);let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),l=S(t,"variance","batchNorm"),u;n!=null&&(u=S(n,"scale","batchNorm"));let c;o!=null&&(c=S(o,"offset","batchNorm")),F(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:_G(i),scale:u,offset:c,mean:a,variance:l},f={varianceEpsilon:s},h=_.runKernel(wB,m,f);return j(h,i.shape)}var Dl=C({batchNorm_:mit});function fit(r,e,t,o,n,s){let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),l=S(t,"variance","batchNorm"),u;n!=null&&(u=S(n,"scale","batchNorm"));let c;return o!=null&&(c=S(o,"offset","batchNorm")),F(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),F(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),F(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Dl(i,a,l,c,u,s)}var RG=C({batchNorm2d_:fit});function hit(r,e,t,o,n,s){let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),l=S(t,"variance","batchNorm"),u;n!=null&&(u=S(n,"scale","batchNorm"));let c;return o!=null&&(c=S(o,"offset","batchNorm")),F(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),F(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),F(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Dl(i,a,l,c,u,s)}var FG=C({batchNorm3d_:hit});function dit(r,e,t,o,n,s){let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),l=S(t,"variance","batchNorm"),u;n!=null&&(u=S(n,"scale","batchNorm"));let c;return o!=null&&(c=S(o,"offset","batchNorm")),F(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),F(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),F(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Dl(i,a,l,c,u,s)}var OG=C({batchNorm4d_:dit});function git(r,e,t){let o=S(r,"x","bincount"),n=S(e,"weights","bincount");F(o.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),F(t>=0,()=>`size must be non-negative, but got ${t}.`),F(n.size===o.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${n.shape}.`);let s={x:o,weights:n},i={size:t};return _.runKernel(Pz,s,i)}var jb=C({bincount_:git});function xit(r,e){let t=S(r,"s0","broadcastArgs","int32"),o=S(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(o.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${o.rank}`);let n={s0:t,s1:o};return _.runKernel(zz,n)}var LG=C({broadcastArgs_:xit});function yit(r,e){let t=S(r,"broadcastTo","x"),o=t.shape;if(e.some(u=>!(u>0)||u%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=j(t,u)}let n=t.shape,s=Array.from(e);for(let u=e.length-1;u>=0;u--)if(n[u]===e[u])s[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${e}].`);if(s.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Go(t);let a={x:t},l={reps:s};return _.runKernel(wb,a,l)}var Bm=C({broadcastTo_:yit});function bit(r){let t={x:S(r,"x","ceil","float32")};return _.runKernel(Bz,t)}var PG=C({ceil_:bit});function _l(r,e,t){let o={shape:r,value:e,dtype:t};return _.runKernel(gB,{},o)}function wit(r,e,t){let o=S(r,"x","clipByValue");if(F(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return _l(o.shape,e,o.dtype);let n={x:o},s={clipValueMin:e,clipValueMax:t};return _.runKernel(Mz,n,s)}var zG=C({clipByValue_:wit});function Nit(r){return $e(r,0)}var BG=C({concat1d_:Nit});function Tit(r,e){return $e(r,e)}var MG=C({concat2d_:Tit});function Sit(r,e){return $e(r,e)}var VG=C({concat3d_:Sit});function vit(r,e){return $e(r,e)}var GG=C({concat4d_:vit});function Cit(r,e,t,o,n="NHWC",s=[1,1],i){let a=S(r,"x","conv2d","float32"),l=S(e,"filter","conv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),lr("conv2d",o,i);let p=n==="NHWC"?u.shape[3]:u.shape[1];F(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),F(lo(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let m={x:u,filter:l},f={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i},h=_.runKernel(Uz,m,f);return c?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Rl=C({conv2d_:Cit});function Iit(r,e,t,o,n="NWC",s=1,i){let a=S(r,"x","conv1d"),l=S(e,"filter","conv1d"),u=a,c=!1;a.rank===2&&(c=!0,u=j(a,[1,a.shape[0],a.shape[1]])),F(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),F(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),lr("conv1d",o,i),F(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),F(lo(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),F(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=j(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=j(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=Rl(m,p,[1,t],o,"NHWC",[1,s],i);return c?j(d,[d.shape[2],d.shape[3]]):j(d,[d.shape[0],d.shape[2],d.shape[3]])}var WG=C({conv1d_:Iit});function kit(r,e,t,o,n,s="NHWC",i){F(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let a=r,l=e,u=!1;e.rank===3&&(u=!0,l=j(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,r[0],r[1],r[2]]),F(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),F(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),F(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let c=s==="NHWC"?a[3]:a[1],p=s==="NHWC"?l.shape[3]:l.shape[1];F(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),F(p===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[3]}.`),lr("conv2dDerInput",n,i);let m={dy:l,filter:t},f={strides:o,pad:n,dataFormat:s,dimRoundingMode:i,inputShape:a},h=_.runKernel(qz,m,f);return u?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Xb=C({conv2DBackpropInput_:kit});function Eit(r,e,t,o,n,s){let i=S(r,"x","conv2dTranspose"),a=S(e,"filter","conv2dTranspose");return Xb(t,i,a,o,n,"NHWC",s)}var UG=C({conv2dTranspose_:Eit});function $it(r,e,t,o,n="NDHWC",s=[1,1,1]){let i=S(r,"x","conv3d"),a=S(e,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),F(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),F(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),F(lo(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),F(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`);let c={x:l,filter:a},p={strides:t,pad:o,dataFormat:n,dilations:s},m=_.runKernel(Kz,c,p);return u?j(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var HG=C({conv3d_:$it});function Ait(r,e,t,o,n){F(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,i=e,a=!1;e.rank===4&&(a=!0,i=j(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let l=s[4],u=i.shape[4];F(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),F(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),F(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),F(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),F(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);let c={dy:i,filter:t},p={pad:n,strides:o,inputShape:s},m=_.runKernel(jz,c,p);return a?j(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var qG=C({conv3DBackpropInput_:Ait});function Dit(r,e,t,o,n){let s=S(r,"x","conv3dTranspose"),i=S(e,"filter","conv3dTranspose");return qG(t,s,i,o,n)}var KG=C({conv3dTranspose_:Dit});function _it(r){let t={x:S(r,"x","cos","float32")};return _.runKernel(Xz,t)}var jG=C({cos_:_it});function Rit(r){let t={x:S(r,"x","cosh","float32")};return _.runKernel(Yz,t)}var XG=C({cosh_:Rit});function Fit(r,e=0,t=!1,o=!1){let s={x:S(r,"x","cumprod")},i={axis:e,exclusive:t,reverse:o};return _.runKernel(Zz,s,i)}var YG=C({cumprod_:Fit});function Oit(r,e=0,t=!1,o=!1){let s={x:S(r,"x","cumsum")},i={axis:e,exclusive:t,reverse:o};return _.runKernel(Jz,s,i)}var ZG=C({cumsum_:Oit});function Lit(r,e,t,o=!1){let n=S(r,"x","denseBincount"),s=S(e,"weights","denseBincount");F(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),F(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),F(t>=0,()=>`size must be non-negative, but got ${t}.`),F(s.size===n.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${s.shape}.`);let i={x:n,weights:s},a={size:t,binaryOutput:o};return _.runKernel(tB,i,a)}var JG=C({denseBincount_:Lit});function Pit(r,e,t="NHWC"){let o=S(r,"x","depthToSpace","float32"),n=t==="NHWC"?o.shape[1]:o.shape[2],s=t==="NHWC"?o.shape[2]:o.shape[3],i=t==="NHWC"?o.shape[3]:o.shape[1];F(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),F(n*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${e}  for depthToSpace with input shape
    ${o.shape}`),F(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${o.shape}`),F(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${o.shape}`);let a={x:o},l={blockSize:e,dataFormat:t};return _.runKernel(eB,a,l)}var QG=C({depthToSpace_:Pit});function zit(r,e,t,o,n="NHWC",s=[1,1],i){let a=S(r,"x","depthwiseConv2d","float32"),l=S(e,"filter","depthwiseConv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=n==="NHWC"?u.shape[3]:u.shape[1];F(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),lr("depthwiseConv2d",o,i);let m={x:u,filter:l},f={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i},h=_.runKernel(rB,m,f);return c?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Mm=C({depthwiseConv2d_:zit});function Bit(r){let t={x:S(r,"x","diag")};return _.runKernel(sB,t)}var tW=C({diag_:Bit});function Mit(r,e,t,o,n=[1,1],s="NHWC"){let i=S(r,"x","dilation2d"),a=S(e,"filter","dilation2d");F(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),F(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),F(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=j(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let c={x:l,filter:a},p={strides:t,pad:o,dilations:n},m=_.runKernel(iB,c,p);return u?j(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var eW=C({dilation2d_:Mit});function Vit(r,e){let t=S(r,"a","equal","string_or_numeric"),o=S(e,"b","equal","string_or_numeric");[t,o]=Wt(t,o),ae(t.shape,o.shape);let n={a:t,b:o};return _.runKernel(pB,n)}var Yb=C({equal_:Vit});function Git(r,e,t){let o=S(e,"a","where"),n=S(t,"b","where"),s=S(r,"condition","where","bool"),i=ae(ae(s.shape,o.shape),n.shape),a=Bm(s,i),l=Bm(o,i),u=Bm(n,i),c={condition:a,t:l,e:u};return _.runKernel(CM,c)}var rs=C({where_:Git});function Wit(r){let t={x:S(r,"x","zerosLike")};return _.runKernel(rV,t)}var Vm=C({zerosLike_:Wit});function Uit(r,e){let t=S(r,"a","div"),o=S(e,"b","div");[t,o]=Wt(t,o);let n=Xe(t,o),s=Vm(n),i=Yb(o,s);return rs(i,s,n)}var rW=C({divNoNan_:Uit});function Hit(r,e){let t=S(r,"t1","dot"),o=S(e,"t2","dot");F((t.rank===1||t.rank===2)&&(o.rank===1||o.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${o.rank}.`);let n=t.rank===1?t.size:t.shape[1],s=o.rank===1?o.size:o.shape[0];if(F(n===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${s}.`),t.rank===1&&o.rank===1){let i=j(t,[1,-1]),a=j(o,[-1,1]),l=oe(i,a);return j(l,[])}else if(t.rank===1&&o.rank===2){let i=j(t,[1,-1]),a=j(o,[o.shape[0],o.shape[1]]),l=oe(i,a);return j(l,[l.size])}else if(t.rank===2&&o.rank===1){let i=j(o,[-1,1]),a=oe(t,i);return j(a,[a.size])}else{let i=j(o,[o.shape[0],o.shape[1]]);return oe(t,i)}}var oW=C({dot_:Hit});function qit(r,...e){let t=e.map((n,s)=>S(n,`tensors${s}`,"einsum")),o={equation:r};return _.runKernel(lB,t,o)}var nW=C({einsum_:qit});function Kit(r){let t={x:S(r,"x","elu","float32")};return _.runKernel(uB,t)}var Zb=C({elu_:Kit});function jit(r){let e=S(r,"x","erf");F(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=me(e,"float32"));let t={x:e};return _.runKernel(cB,t)}var sW=C({erf_:jit});function Xit(r,e,t){let o=r.length+e.length,n=[],s=0,i=0;for(let a=0;a<o;a++)t.indexOf(a)===-1?n.push(r[s++]):n.push(e[i++]);return n}function Fl(r,e){let t=e.map(o=>1);return Xit(r,t,e)}function Zit(r,e=null,t=!1){let n={x:S(r,"x","max")},s={reductionIndices:e,keepDims:t};return _.runKernel(MB,n,s)}var ks=C({max_:Zit});function Jit(r,e=null,t=!1){let n={x:S(r,"x","min")},s={axis:e,keepDims:t};return _.runKernel(qB,n,s)}var Mh=C({min_:Jit});function Qit(r,e){let t=S(r,"base","pow"),o=S(e,"exp","pow");[t,o]=Wt(t,o);let n={a:t,b:o};return _.runKernel(aM,n)}var Gm=C({pow_:Qit});function Mt(r,e){if((zo(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&zo(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return so(r,[],[],e)}function tat(r){let t={x:S(r,"x","sqrt","float32")};return _.runKernel(RM,t)}var Vh=C({sqrt_:tat});function eat(r){let e=S(r,"x","square"),t={};return _.runKernel("Square",{x:e},t)}var Ol=C({square_:eat});function rat(r,e=null,t=!1){let o=S(r,"x","sum");o.dtype==="bool"&&(o=me(o,"int32"));let n={x:o},s={axis:e,keepDims:t};return _.runKernel(FM,n,s)}var ne=C({sum_:rat});function oat(r,e="euclidean",t=null,o=!1){r=S(r,"x","norm");let n=iW(r,e,t),s=n.shape;if(o){let i=Cl(t,r.shape);s=Fl(n.shape,i)}return j(n,s)}function iW(r,e,t=null){if(r.rank===0)return Kr(r);if(r.rank!==1&&t===null)return iW(j(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return ne(Kr(r),t);if(e===1/0)return ks(Kr(r),t);if(e===-1/0)return Mh(Kr(r),t);if(e==="euclidean"||e===2)return Vh(ne(Gm(Kr(r),Mt(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return ks(ne(Kr(r),t[0]),t[1]-1);if(e===1/0)return ks(ne(Kr(r),t[1]),t[0]);if(e===-1/0)return Mh(ne(Kr(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Vh(ne(Ol(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var uc=C({norm_:oat});function nat(r,e=null,t=!1){return uc(r,"euclidean",e,t)}var aW=C({euclideanNorm_:nat});function sat(r){let t={x:S(r,"x","exp")};return _.runKernel(mB,t)}var $n=C({exp_:sat});function iat(r,e=0){let t=S(r,"x","expandDims","string_or_numeric");F(e<=t.rank,()=>"Axis must be <= rank of the tensor");let o={input:t},n={dim:e};return _.runKernel(fB,o,n)}var ea=C({expandDims_:iat});function aat(r){let t={x:S(r,"x","expm1")};return _.runKernel(hB,t)}var lW=C({expm1_:aat});function lat(r,e){let t=S(r,"x","tile","string_or_numeric");F(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let o={x:t},n={reps:e};return _.runKernel(wb,o,n)}var Ll=C({tile_:lat});function uat(r,e,t,o="float32"){e==null&&(e=r);let n=qr([r,e],o),s=r<=e?r:e;for(let a=0;a<s;++a)n.set(1,a,a);let i=j(n.toTensor(),[r,e]);if(t==null)return i;if(t.length===1)return Ll(ea(i,0),[t[0],1,1]);if(t.length===2)return Ll(ea(ea(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return Ll(ea(ea(ea(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Jb=C({eye_:uat});function cat(r){let t={x:S(r,"x","floor","float32")};return _.runKernel(yB,t)}var Qb=C({floor_:cat});function pat(r,e,t=0,o=0){let n=S(r,"x","gather"),s=S(e,"indices","gather","int32"),i={x:n,indices:s},a={axis:t,batchDims:o};return _.runKernel(NB,i,a)}var tw=C({gather_:pat});function mat(r,e){let t=S(r,"a","greater","string_or_numeric"),o=S(e,"b","greater","string_or_numeric");[t,o]=Wt(t,o),ae(t.shape,o.shape);let n={a:t,b:o};return _.runKernel(SB,n)}var cc=C({greater_:mat});function fat(r,e){let t=S(r,"a","greaterEqual","string_or_numeric"),o=S(e,"b","greaterEqual","string_or_numeric");[t,o]=Wt(t,o),ae(t.shape,o.shape);let n={a:t,b:o};return _.runKernel(vB,n)}var ew=C({greaterEqual_:fat});function hat(r){let t={x:S(r,"x","isFinite")};return _.runKernel(kB,t)}var uW=C({isFinite_:hat});function dat(r){let t={x:S(r,"x","isInf")};return _.runKernel(EB,t)}var cW=C({isInf_:dat});function gat(r){let t={x:S(r,"x","isNaN")};return _.runKernel($B,t)}var pW=C({isNaN_:gat});function xat(r,e=.2){let o={x:S(r,"x","leakyRelu")},n={alpha:e};return _.runKernel(AB,o,n)}var rw=C({leakyRelu_:xat});function yat(r,e){let t=S(r,"a","less","string_or_numeric"),o=S(e,"b","less","string_or_numeric");[t,o]=Wt(t,o),ae(t.shape,o.shape);let n={a:t,b:o};return _.runKernel(DB,n)}var mW=C({less_:yat});function bat(r,e){let t=S(r,"a","lessEqual","string_or_numeric"),o=S(e,"b","lessEqual","string_or_numeric");[t,o]=Wt(t,o),ae(t.shape,o.shape);let n={a:t,b:o};return _.runKernel(_B,n)}var Wm=C({lessEqual_:bat});function fW(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let o={start:r,stop:e,num:t};return _.runKernel(RB,{},o)}function wat(r,e=5,t=1,o=1,n=.5){let s=S(r,"x","localResponseNormalization");F(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),F(Ji(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=j(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:e,bias:t,alpha:o,beta:n},c=_.runKernel(BB,l,u);return a?j(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var hW=C({localResponseNormalization_:wat});function Nat(r){let t={x:S(r,"x","log","float32")};return _.runKernel(FB,t)}var ra=C({log_:Nat});function Tat(r){let t={x:S(r,"x","log1p")};return _.runKernel(OB,t)}var ow=C({log1p_:Tat});function To(r){return _.customGrad(r)}function Sat(r){let t={x:S(r,"x","softplus")};return _.runKernel(_M,t)}var nw=C({softplus_:Sat});function vat(r){let e=S(r,"x","logSigmoid");return To(o=>({value:ao(nw(ao(o))),gradFunc:i=>$t(i,Is(ao(o)))}))(e)}var dW=C({logSigmoid_:vat});function Cat(r,e){let t=S(r,"a","sub"),o=S(e,"b","sub");[t,o]=Wt(t,o);let n={a:t,b:o};return _.runKernel(jM,n)}var zt=C({sub_:Cat});function Iat(r,e=-1){let t=S(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return To((n,s)=>{let a=ks(n,e,!0),l=zt(n,a),u=zt(me(l,"float32"),ra(ne($n(l),e,!0)));return s([u]),{value:u,gradFunc:(p,m)=>{let[f]=m,h=!0,g=$n(f);return zt(p,$t(ne(p,e,h),g))}}})(t)}var gW=C({logSoftmax_:Iat});function kat(r,e=null,t=!1){let o=S(r,"x","logSumExp"),n=Cl(e,o.shape),s=ks(o,n,!0),i=zt(o,s),a=$n(i),l=ne(a,n),u=ra(l),c=xe(j(s,u.shape),u);if(t){let p=Fl(c.shape,n);return j(c,p)}return c}var sw=C({logSumExp_:kat});function Eat(r,e){let t=S(r,"a","logicalAnd","bool"),o=S(e,"b","logicalAnd","bool");ae(t.shape,o.shape);let n={a:t,b:o};return _.runKernel(LB,n)}var pc=C({logicalAnd_:Eat});function $at(r){let t={x:S(r,"x","logicalNot","bool")};return _.runKernel(PB,t)}var iw=C({logicalNot_:$at});function Aat(r,e){let t=S(r,"a","logicalOr","bool"),o=S(e,"b","logicalOr","bool");ae(t.shape,o.shape);let n={a:t,b:o};return _.runKernel(zB,n)}var aw=C({logicalOr_:Aat});function Dat(r,e){let t=S(r,"a","logicalXor","bool"),o=S(e,"b","logicalXor","bool");return ae(t.shape,o.shape),pc(aw(r,e),iw(pc(r,e)))}var xW=C({logicalXor_:Dat});var lw=2147483648;function _at(r,e,t="left"){let o=S(r,"sortedSequence","searchSorted"),n=S(e,"values","searchSorted"),s=o.shape[o.shape.length-1],i=n.shape[n.shape.length-1],a=j(o,[-1,s]),l=j(n,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(we(l.shape)>=lw)throw new Error(`values tensor size must less than ${lw}`);if(a.shape[1]>=lw)throw new Error(`trailing dim_size must less than ${lw} for int32 output type, was ${a.shape[1]}`);let u={sortedSequence:a,values:l},c={side:t};return _.runKernel(vM,u,c)}var Gh=C({searchSorted_:_at});function yW(r,e){return Gh(r,e,"left")}function Rat(r,e,t,o,n){let s=S(r,"x","maxPool"),i=1,a=s,l=!1;s.rank===3&&(l=!0,a=j(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),F(lo(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),lr("maxPool",o,n);let u={x:a},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n},p=_.runKernel(GB,u,c);return l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var uw=C({maxPool_:Rat});function Fat(r,e=[1,1,1],t,o,n,s="NDHWC"){let i=S(r,"x","maxPool3d"),a=i,l=!1;i.rank===4&&(l=!0,a=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),F(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),lr("maxPool3d",o,n);let u={x:a},c={filterSize:e,strides:t,pad:o,dimRoundingMode:n,dataFormat:s},p=_.runKernel(WB,u,c);return l?j(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var bW=C({maxPool3d_:Fat});function Oat(r,e,t,o,n=!1){let i={x:S(r,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:o,includeBatchInIndex:n},l=_.runKernel(UB,i,a);return{result:l[0],indexes:l[1]}}var wW=C({maxPoolWithArgmax_:Oat});function Lat(r,e){let t=S(r,"a","maximum"),o=S(e,"b","maximum");[t,o]=Wt(t,o),t.dtype==="bool"&&(t=me(t,"int32"),o=me(o,"int32")),ae(t.shape,o.shape);let n={a:t,b:o};return _.runKernel(VB,n)}var NW=C({maximum_:Lat});function Pat(r,e=null,t=!1){let n={x:S(r,"x","mean")},s={axis:e,keepDims:t};return _.runKernel(HB,n,s)}var mc=C({mean_:Pat});function Es(r,e="float32"){if(e==="complex64"){let o=Es(r,"float32"),n=Es(r,"float32");return No(o,n)}let t=Em(we(r),e);return _.makeTensor(t,r,e)}function $s(r,e="float32"){if(e==="complex64"){let o=$s(r,"float32"),n=Es(r,"float32");return No(o,n)}let t=Ih(we(r),e);return _.makeTensor(t,r,e)}function TW(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let o=S(r,"x","meshgrid",r instanceof ze?r.dtype:"float32");if(e===void 0)return[o];let n=S(e,"y","meshgrid",e instanceof ze?e.dtype:"float32"),s=we(o.shape),i=we(n.shape);return t==="xy"?(o=j(o,[1,-1]),n=j(n,[-1,1]),[oe($s([i,1],o.dtype),o),oe(n,$s([1,s],n.dtype))]):(o=j(o,[-1,1]),n=j(n,[1,-1]),[oe(o,$s([1,i],o.dtype)),oe($s([s,1],n.dtype),n)])}function zat(r,e){let t=S(r,"a","minimum"),o=S(e,"b","minimum");[t,o]=Wt(t,o),t.dtype==="bool"&&(t=me(t,"int32"),o=me(o,"int32")),ae(t.shape,o.shape);let n={a:t,b:o};return _.runKernel(KB,n)}var cw=C({minimum_:zat});function Bat(r,e,t){F(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let o=S(r,"x","mirrorPad");if(o.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(e.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${e.length}.`);let n=t==="reflect"?1:0;for(let a=0;a<o.rank;a++)F(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),F(e[a][0]>=0&&e[a][0]<=o.shape[a]-n&&e[a][1]>=0&&e[a][1]<=o.shape[a]-n,()=>`Padding in dimension ${a} cannot be greater than or equal to ${o.shape[a]-n} or less than 0 for input of shape ${o.shape}`);let s={paddings:e,mode:t},i={x:o};return _.runKernel(jB,i,s)}var SW=C({mirrorPad_:Bat});function Mat(r,e){let t=S(r,"a","mod"),o=S(e,"b","mod");[t,o]=Wt(t,o);let n={a:t,b:o};return _.runKernel(XB,n)}var vW=C({mod_:Mat});function Vat(r,e=null,t=!1){r=S(r,"x","moments");let o=Cl(e,r.shape),n=mc(r,o,t),s=n.shape;t||(s=Fl(n.shape,o));let i=Ol(zt(me(r,"float32"),j(n,s))),a=mc(i,o,t);return{mean:n,variance:a}}var CW=C({moments_:Vat});function Gat(r,e,t,o){let n=S(e,"data","multiRNNCell"),s=sc(t,"c","multiRNNCell"),i=sc(o,"h","multiRNNCell"),a=n,l=[];for(let p=0;p<r.length;p++){let m=r[p](a,s[p],i[p]);l.push(m[0]),l.push(m[1]),a=m[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var IW=C({multiRNNCell_:Gat});function Wat(r,e,t,o=!1){let n=S(r,"logits","multinomial"),s=n.size,i=n.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();let l={logits:i===1?j(n,[1,-1]):n},u={numSamples:e,seed:t,normalized:o},c=_.runKernel(YB,l,u);return i===1?j(c,[c.size]):c}var kW=C({multinomial_:Wat});function Uat(r,e){let t=S(r,"a","notEqual","string_or_numeric"),o=S(e,"b","notEqual","string_or_numeric");[t,o]=Wt(t,o),ae(t.shape,o.shape);let n={a:t,b:o};return _.runKernel(QB,n)}var pw=C({notEqual_:Uat});function Hat(r){let t={x:S(r,"x","onesLike")};return _.runKernel(oM,t)}var EW=C({onesLike_:Hat});function qat(r,e){let t=S(r,"v1","outerProduct"),o=S(e,"v2","outerProduct");F(t.rank===1&&o.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${o.rank}.`);let n=j(t,[-1,1]),s=j(o,[1,-1]);return oe(n,s)}var $W=C({outerProduct_:qat});function Kat(r,e,t=0){let o=S(r,"x","pad");if(o.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:e,constantValue:t},s={x:o};return _.runKernel(iM,s,n)}var As=C({pad_:Kat});function jat(r,e,t=0){return F(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),As(r,[e],t)}var AW=C({pad1d_:jat});function Xat(r,e,t=0){return F(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),As(r,e,t)}var DW=C({pad2d_:Xat});function Yat(r,e,t=0){return F(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),As(r,e,t)}var _W=C({pad3d_:Yat});function Zat(r,e,t=0){return F(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),As(r,e,t)}var RW=C({pad4d_:Zat});function Jat(r,e,t){let o=S(r,"x","spaceToBatchND");F(o.rank>=1+e.length,()=>`input rank ${o.rank} should be > than [blockShape] ${e.length}`),F(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),F(o.shape.reduce((i,a,l)=>l>0&&l<=e.length?i&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let n={x:o},s={blockShape:e,paddings:t};return _.runKernel(OM,n,s)}var mw=C({spaceToBatchND_:Jat});function Qat(r,e,t,o,n,s,i){n==null&&(n=[1,1]),s==null&&(s=1),o===0&&(o="valid");let a=S(r,"x","maxPool"),l=a,u=!1;a.rank===3&&(u=!0,l=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(lo(s,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${n}'`);let c=$G(l.shape,e,s,n,o),p=[c.dilationHeight,c.dilationWidth],m;o==="same"?m=elt([c.filterHeight,c.filterWidth],p):m=[[0,0],[0,0]];let f=p[0]===1&&p[1]===1,[h,g]=tlt([c.inHeight,c.inWidth],p,m),d=f?o:"valid",x=f?l:mw(l,p,h),w=(t==="avg"?()=>qb(x,e,s,d,i):()=>uw(x,e,s,d,i))(),N=f?w:Kb(w,p,g);return u?j(N,[N.shape[1],N.shape[2],N.shape[3]]):N}function tlt(r,e,t){let o=t.map(c=>c[0]),n=t.map(c=>c[1]),s=r.concat(o,n),i=e.map((c,p)=>(c-s[p]%c)%c),a=n.map((c,p)=>c+i[p]),l=e.map((c,p)=>[o[p],a[p]]),u=e.map((c,p)=>[0,i[p]]);return[l,u]}function elt(r,e){let o=r.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),n=o.map(i=>Math.floor(i/2)),s=o.map((i,a)=>i-n[a]);return o.map((i,a)=>[n[a],s[a]])}var FW=C({pool_:Qat});function rlt(r,e){let t=S(r,"x","prelu"),o=S(e,"alpha","prelu"),n={x:t,alpha:o};return _.runKernel(lM,n)}var fw=C({prelu_:rlt});function olt(r,e=null,t=!1){let o=S(r,"x","prod");o.dtype==="bool"&&(o=me(o,"int32"));let n={x:o},s={axis:e,keepDims:t};return _.runKernel(uM,n,s)}var OW=C({prod_:olt});function nlt(r,e,t,o){let n=r.map((c,p)=>S(c,`tensors${p}`,"raggedGather","int32")),s=S(e,"paramsDenseValues","raggedGather"),i=S(t,"indices","raggedGather","int32"),a={paramsNestedSplits:n,paramsDenseValues:s,indices:i},l={outputRaggedRank:o},u=_.runKernel(cM,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var LW=C({raggedGather_:nlt});function slt(r,e,t,o,n){let s=S(r,"shape","raggedTensorToTensor","int32"),i=S(e,"values","raggedTensorToTensor"),a=S(t,"defaultValue","raggedTensorToTensor",i.dtype),l=o.map((p,m)=>S(p,`tensors${m}`,"raggedTensorToTensor","int32")),u={shape:s,values:i,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:n};return _.runKernel(pM,u,c)}var PW=C({raggedTensorToTensor_:slt});function ilt(r,e,t){let o=we(r),n=null;if(t==null||t==="float32")n=new Float32Array(o);else if(t==="int32")n=new Int32Array(o);else if(t==="bool")n=new Uint8Array(o);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<o;s++)n[s]=e();return _.makeTensor(n,r,t)}var zW=C({rand_:ilt});var gw=Ml(Dp());var fc=class{constructor(e,t,o,n,s){this.mean=e,this.stdDev=t,this.dtype=o,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=gw.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let e,t,o=!1;for(;!o;){let n,s,i;do n=2*this.random()-1,s=2*this.random()-1,i=n*n+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*n*a,t=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(e))&&(o=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},hw=class{constructor(e,t,o,n){this.alpha=e,this.beta=1/t,this.dtype=o;let s=n||Math.random();this.randu=gw.alea(s.toString()),this.randn=new fc(0,1,o,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,o,n,s,i;for(;;){do n=this.randn.nextValue(),i=1+this.c*n;while(i<=0);if(i*=i*i,e=n*n,t=1-.331*e*e,o=.5*e+this.d*(1-i+Math.log(i)),s=this.randu(),s<t||Math.log(s)<o)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},dw=class{constructor(e=0,t=1,o,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=o,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=gw.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function alt(r,e,t=1,o="float32",n){if(t==null&&(t=1),o==null&&(o="float32"),o!=="float32"&&o!=="int32")throw new Error(`Unsupported data type ${o}`);let s=new hw(e,t,o,n),i=qr(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var BW=C({randomGamma_:alt});function llt(r,e=0,t=1,o,n){if(o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);let s=new fc(e,t,o,!1,n),i=qr(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var xw=C({randomNormal_:llt});function ult(r,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return xw(r,0,1,e,t)}var MW=C({randomStandardNormal_:ult});function clt(r,e=0,t=1,o="float32",n){let s=qr(r,o),i=new dw(e,t,null,n);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var yw=C({randomUniform_:clt});function Pl(r,e,t=1,o="float32"){if(t===0)throw new Error("Cannot have a step of zero");let n={start:r,stop:e,step:t,dtype:o};return _.runKernel(mM,{},n)}function plt(r){let t={x:S(r,"x","reciprocal")};return _.runKernel(hM,t)}var VW=C({reciprocal_:plt});function mlt(r){let t={x:S(r,"x","relu")};return _.runKernel(dM,t)}var zl=C({relu_:mlt});function flt(r){let t={x:S(r,"x","relu6")};return _.runKernel(bM,t)}var bw=C({relu6_:flt});function hlt(r,e){let o={x:S(r,"x","reverse")},n={dims:e};return _.runKernel(wM,o,n)}var rn=C({reverse_:hlt});function dlt(r){let e=S(r,"x","reverse");return F(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),rn(e,0)}var GW=C({reverse1d_:dlt});function glt(r,e){let t=S(r,"x","reverse");return F(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),rn(t,e)}var WW=C({reverse2d_:glt});function xlt(r,e){let t=S(r,"x","reverse");return F(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),rn(t,e)}var UW=C({reverse3d_:xlt});function ylt(r,e){let t=S(r,"x","reverse");return F(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),rn(t,e)}var HW=C({reverse4d_:ylt});function blt(r){let t={x:S(r,"x","round")};return _.runKernel(NM,t)}var ww=C({round_:blt});function wlt(r){let t={x:S(r,"x","rsqrt","float32")};return _.runKernel(TM,t)}var qW=C({rsqrt_:wlt});function Nlt(r){let t={x:S(r,"x","selu")};return _.runKernel(IM,t)}var KW=C({selu_:Nlt});function Tlt(r,e,t,o,n,s=[1,1],i="NHWC"){let a=S(r,"x","separableConv2d"),l=S(e,"depthwiseFilter","separableConv2d"),u=S(t,"pointwiseFilter","separableConv2d"),c=a,p=!1;if(a.rank===3&&(p=!0,c=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),F(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),F(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),F(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),F(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let m=l.shape[2],f=l.shape[3];F(u.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${u.shape[2]}.`);let h=Mm(c,l,o,n,i,s),d=Rl(h,u,1,"valid",i);return p?j(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var jW=C({separableConv2d_:Tlt});function Slt(r,e){return V(this,null,function*(){let t=S(r,"x","setdiff1d"),o=S(e,"y","setdiff1d");F(t.dtype===o.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${o.dtype}).`),F(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),F(o.rank===1,()=>`y should be 1D tensor, but got y (${o.shape}).`);let n=yield t.data(),s=yield o.data(),i=new Set(s),a=0;for(let c=0;c<n.length;c++)i.has(n[c])||a++;let l=new kl([a],t.dtype),u=new kl([a],"int32");for(let c=0,p=0;c<n.length;c++)i.has(n[c])||(l.values[p]=n[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]})}var XW=Slt;function vlt(r){let t={x:S(r,"x","sign")};return _.runKernel(AM,t)}var YW=C({sign_:vlt});function Clt(r){let t={x:S(r,"x","sin","float32")};return _.runKernel(EM,t)}var ZW=C({sin_:Clt});function Ilt(r){let t={x:S(r,"x","sinh")};return _.runKernel($M,t)}var JW=C({sinh_:Ilt});function klt(r,e,t){let o=S(r,"x","slice1d");return F(o.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${o.rank} tensor`),Jt(o,[e],[t])}var QW=C({slice1d_:klt});function Elt(r,e,t){let o=S(r,"x","slice2d");return F(o.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${o.rank} tensor`),Jt(o,e,t)}var tU=C({slice2d_:Elt});function $lt(r,e,t){let o=S(r,"x","slice3d");return F(o.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${o.rank} tensor`),Jt(o,e,t)}var eU=C({slice3d_:$lt});function Alt(r,e,t){let o=S(r,"x","slice4d");return F(o.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${o.rank} tensor`),Jt(o,e,t)}var rU=C({slice4d_:Alt});function Dlt(r,e=-1){let t=S(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let o={logits:t},n={dim:e};return _.runKernel(PM,o,n)}var oU=C({softmax_:Dlt});function _lt(r){F(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return _.runKernel(dB,e)}var Um=C({fft_:_lt});function Rlt(r){F(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return _.runKernel(CB,e)}var hc=C({ifft_:Rlt});function Flt(r){let e=r.shape[r.shape.length-1],t=r.size/e,o;if(e<=2){let n=j(r,[t,e]);o=hc(n)}else{let n=[t,2*(e-1)],s=j(ta(r),[t,e]),i=j(Al(r),[t,e]),a=rn(Jt(s,[0,1],[t,e-2]),1),l=$t(rn(Jt(i,[0,1],[t,e-2]),1),Mt(-1)),u=$e([s,a],1),c=$e([i,l],1),p=j(No(u,c),[n[0],n[1]]);o=hc(p)}if(o=ta(o),r.rank===3&&r.shape[0]!==0){let n=o,s=r.shape[0];o=j(o,[s,o.shape[0]/s,o.shape[1]]),n.dispose()}return o}var Nw=C({irfft_:Flt});function Olt(r,e,t=0){let n={x:S(r,"x","split")},s={numOrSizeSplits:e,axis:t};return _.runKernel(LM,n,s)}var oa=C({split_:Olt});function Llt(r,e){F(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],o=r.size/t,n;if(e!=null&&e<t){let h=r.shape.map(d=>0),g=r.shape.map(d=>d);g[r.shape.length-1]=e,n=Jt(r,h,g),t=e}else if(e!=null&&e>t){let h=r.shape.map(g=>g);h[r.shape.length-1]=e-t,n=$e([r,Es(h)],r.shape.length-1),t=e}else n=r;let s=Vm(n),i=j(No(n,s),[o,t]),a=Um(i),l=Math.floor(t/2)+1,u=ta(a),c=Al(a),p=oa(u,[l,t-l],u.shape.length-1),m=oa(c,[l,t-l],c.shape.length-1),f=n.shape.slice();return f[n.shape.length-1]=l,j(No(p[0],m[0]),f)}var Hm=C({rfft_:Llt});function Plt(r,e){let t=S(r,"a","squaredDifference"),o=S(e,"b","squaredDifference");[t,o]=Wt(t,o),ae(t.shape,o.shape);let n={a:t,b:o},s={};return _.runKernel(WM,n,s)}var Tw=C({squaredDifference_:Plt});function zlt(r,e){let t=S(r,"x","squeeze","string_or_numeric");return j(t,KS(t.shape,e).newShape)}var qm=C({squeeze_:zlt});function Blt(r,e=0){let t=sc(r,"tensors","stack","string_or_numeric");F(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&F(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let o=t,n={axis:e};return _.runKernel(sM,o,n)}var uo=C({stack_:Blt});function Mlt(r,e=0){let o={x:S(r,"x","step")},n={alpha:e};return _.runKernel(oV,o,n)}var Sw=C({step_:Mlt});function Vlt(r,e,t,o,n=0,s=0,i=0,a=0,l=0){let c={x:S(r,"x","stridedSlice","string_or_numeric")},p={begin:e,end:t,strides:o,beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return _.runKernel(UM,c,p)}var nU=C({stridedSlice_:Vlt});function Glt(r){let t={x:S(r,"x","tan","float32")};return _.runKernel(XM,t)}var sU=C({tan_:Glt});function Dr(r,e){en(r);let t=wo(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return so(r,null,t,e)}function os(r,e,t){if(en(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let o=wo(r,t);if(o.length!==2&&o.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return so(r,e,o,t)}function iU(r,e,t){if(en(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let o=wo(r,t);if(o.length!==4&&o.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return so(r,e,o,t)}function aU(r,e,t){if(en(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let o=wo(r,t);if(o.length!==5&&o.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return so(r,e,o,t)}function lU(r,e,t){if(en(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let o=wo(r,t);if(o.length!==6&&o.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(o.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||o,so(r,e,o,t)}function Wlt(r,e=1,t=!0){let o=S(r,"x","topk");if(o.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=o.shape[o.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${e}`);let s={x:o},i={k:e,sorted:t},[a,l]=_.runKernel(ZM,s,i);return{values:a,indices:l}}var uU=C({topk_:Wlt});function Ult(r,e=0,t=1,o,n){if(o!=null&&o==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new fc(e,t,o,!0,n),i=qr(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var cU=C({truncatedNormal_:Ult});function Hlt(r,e=0){let t=S(r,"x","unique","string_or_numeric");F(t.rank>0,()=>"The input tensor must be at least 1D");let o={x:t},n={axis:e},[s,i]=_.runKernel(QM,o,n);return{values:s,indices:i}}var pU=C({unique_:Hlt});function qlt(r,e,t){let o=S(r,"x","unsortedSegmentSum"),n=S(e,"segmentIds","unsortedSegmentSum","int32");F(Ji(t),()=>"numSegments must be of dtype int");let s={x:o,segmentIds:n},i={numSegments:t};return _.runKernel(eV,s,i)}var mU=C({unsortedSegmentSum_:qlt});function Klt(r,e=0){let t=S(r,"x","unstack","string_or_numeric");F(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let o={value:t},n={axis:e};return _.runKernel(tV,o,n)}var on=C({unstack_:Klt});function fU(r,e){return Gh(r,e,"right")}function hU(r,e=!0,t,o){return _.makeVariable(r,e,t,o)}function dU(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let o=qr(r,"int32"),n=qr([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let i=o.indexToLoc(t[s]),a=s*r.length;n.values.set(i,a)}return n.toTensor()}function jlt(r){return V(this,null,function*(){let e=S(r,"condition","whereAsync","bool"),t=yield e.data(),o=dU(e.shape,t);return r!==e&&e.dispose(),o})}var vw=jlt;function Xlt(r,e,t){return V(this,null,function*(){let o=S(r,"tensor","boolMask"),n=S(e,"mask","boolMask","bool"),s=t??0,i=n.rank,a=o.shape;F(i>0,()=>"mask cannot be scalar"),Qe(a.slice(s,s+i),n.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=s;g<s+i;g++)l*=a[g];let u=a.slice(0,s).concat([l],a.slice(s+i)),c=j(o,u),p=j(n,[-1]),m=yield vw(p),f=qm(m,[1]),h=tw(c,f,s);return r!==o&&o.dispose(),e!==n&&n.dispose(),f.dispose(),c.dispose(),p.dispose(),m.dispose(),h})}var Ylt=Xlt;function Zlt(r,e,t,o,n=!0){let s=S(r,"v","movingAverage"),i=S(e,"x","movingAverage"),a=S(t,"decay","movingAverage");RV(s,i),F(Cn(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=Mt(1),u=zt(l,a),c=$t(zt(i,s),u);if(n){F(o!=null,()=>"When using zeroDebias: true, step is required.");let p=S(o,"step","movingAverage");c=Xe(c,zt(l,Gm(a,p)))}return xe(s,c)}var Jlt=C({movingAverage_:Zlt});function Qlt(r,e,t){let o=S(r,"indices","scatterND","int32"),n=S(e,"updates","scatterND");gG(n,o,t);let s={indices:o,updates:n},i={shape:t};return _.runKernel(SM,s,i)}var tut=C({scatterND_:Qlt});function gU(r,e,t,o){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let n=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let i=e.size;if(!(e.rank===0||e.rank===1&&i===n))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${n}]`);if(e.dtype!==o.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function rut(r,e,t,o=0){let n=S(r,"sparseIndices","sparseToDense","int32"),s=S(e,"sparseValues","sparseToDense","string_or_numeric"),i=S(o,"defaultValue","sparseToDense",s.dtype);gU(n,s,t,i);let a={sparseIndices:n,sparseValues:s,defaultValue:i},l={outputShape:t};return _.runKernel(GM,a,l)}var out=C({sparseToDense_:rut});function nut(r,e){let t=S(e,"indices","gatherND","int32"),n={params:S(r,"x","gatherND","string_or_numeric"),indices:t};return _.runKernel(TB,n)}var sut=C({gatherND_:nut});function xU(r,e){if(e==null)return r.shape.slice();if(Cn(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let o=0;o<r.shape.length;o++)e[o]==null&&r.shape[o]!=null?t.push(r.shape[o]):t.push(e[o]);return t}return e}function iut(r,e,t,o){let n=S(r,"x","dropout");if(F(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),F(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof ze?n.clone():n;let s=xU(n,t),i=1-e,a=Xe(Qb(xe(yw(s,0,1,"float32",o),i)),i);return $t(n,a)}var aut=C({dropout_:iut});function Fv(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Wh(r,e,t){let o=1-r%2,n=new Float32Array(r);for(let s=0;s<r;++s){let i=2*Math.PI*s/(r+o-1);n[s]=e-t*Math.cos(i)}return Dr(n,"float32")}function lut(r,e,t=1){return V(this,null,function*(){let o=S(r,"predictions","inTopK"),n=S(e,"targets","inTopK");F(o.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${o.rank}`),F(o.rank-1===n.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${o.rank} and targets rank ${n.rank}`),Qe(o.shape.slice(0,o.shape.length-1),n.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=o.shape[o.shape.length-1];F(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let i=yield o.data(),a=yield n.data(),[l,u]=[i.length/s,s],c=jS("bool",l);for(let p=0;p<l;p++){let m=p*u,f=i.subarray(m,m+u),h=[];for(let g=0;g<f.length;g++)h.push({value:f[g],index:g});h.sort((g,d)=>d.value-g.value),c[p]=0;for(let g=0;g<t;g++)if(h[g].index===a[p]){c[p]=1;break}}return r!==o&&o.dispose(),e!==n&&n.dispose(),io(c,n.shape,"bool")})}var uut=lut;var Ov={};le(Ov,{conv2d:()=>bU,depthwiseConv2d:()=>TU,matMul:()=>SU});function cut(r,e,t,o,n,s="NHWC",i){let a=r;r.rank===3&&(a=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=j(e,[1,e.shape[0],e.shape[1],e.shape[2]])),F(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),F(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),F(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let u=s==="NHWC"?a.shape[3]:a.shape[1],c=s==="NHWC"?l.shape[3]:l.shape[1];F(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),F(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),lr("conv2dDerFilter",n,i);let p={x:a,dy:l},m={strides:o,pad:n,dataFormat:s,dimRoundingMode:i,filterShape:t};return _.runKernel(Hz,p,m)}var yU=C({conv2DBackpropFilter_:cut});function Km(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return $t(r,Sw(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function jm(r,e){let t=e,o=hG(r.shape,e.shape);return o.length>0&&(t=ne(t,o)),j(t,r.shape)}function Xm(r,e,t,o){if(e==="linear")return r;if(e==="relu")return zl(r);if(e==="elu")return Zb(r);if(e==="relu6")return bw(r);if(e==="prelu")return fw(r,t);if(e==="leakyrelu")return rw(r,o);if(e==="sigmoid")return Is(r);throw new Error(`Unknown fused activation ${e}.`)}var Ym=(r,e)=>!(r>0)||e==="linear";function put({x:r,filter:e,strides:t,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Ym(_.state.gradientDepth,l)===!1){F(n==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${n} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=Rl(r,e,t,o,n,s,i);return a!=null&&(k=xe(k,a)),Xm(k,l,u,c)}let p=S(r,"x","conv2d","float32"),m=S(e,"filter","conv2d","float32"),f=p,h=!1;p.rank===3&&(h=!0,f=j(p,[1,p.shape[0],p.shape[1],p.shape[2]])),F(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),F(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),lr("fused conv2d",o,i);let g=n==="NHWC"?f.shape[3]:f.shape[1];F(m.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${m.shape[2]}.`),F(lo(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let d=zh(f.shape,m.shape,t,s,o,i),x;a!=null&&(x=S(a,"bias","fused conv2d"),[x]=Wt(x,p),n==="NHWC"?ae(d.outShape,x.shape):(F(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),F(x.shape.length===0||x.shape[0]===d.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${d.outChannels})`)));let y;if(u!=null){let k=u.shape;if(F(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)F(k[0]===1||k[0]===d.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${d.outChannels}).`);else if(k.length===3)try{ae(k,d.outShape)}catch{let O=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${d.outShape}).`;throw Error(O)}y=S(u,"prelu weights","fused conv2d")}let w=(k,R)=>{F(n==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${n} but only NHWC is currently supported.`);let[O,L,M,H]=R,q=Km(k,M,l);F(zm(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let K=Xb(L.shape,q,O,t,o),X=yU(L,q,O.shape,t,o),Y=[K,X];if(H!=null){let Q=jm(H,q);Y.push(Q)}return Y},N={x:f,filter:m,bias:x,preluActivationWeights:y},v={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?To((R,O,L)=>{let M=_.runKernel(ov,N,v);return L([O,R,M]),h&&(M=j(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:w}})(f,m):To((R,O,L,M)=>{let H=_.runKernel(ov,N,v);return M([O,R,H,L]),h&&(H=j(H,[H.shape[1],H.shape[2],H.shape[3]])),{value:H,gradFunc:w}})(f,m,x)}var bU=C({fusedConv2d_:put});function mut(r,e,t,o,n,s=[1,1],i){let a=r;r.rank===3&&(a=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=j(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={x:a,dy:l},c={strides:o,pad:n,dimRoundingMode:i,dilations:s,filterShape:t};return _.runKernel(oB,u,c)}var wU=C({depthwiseConv2dNativeBackpropFilter_:mut});function fut(r,e,t,o,n,s=[1,1],i){let a=e,l=!1;e.rank===3&&(l=!0,a=j(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={dy:a,filter:t},c={strides:o,pad:n,dimRoundingMode:i,dilations:s,inputShape:r},p=_.runKernel(nB,u,c);return l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var NU=C({depthwiseConv2dNativeBackpropInput_:fut});function hut({x:r,filter:e,strides:t,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Ym(_.state.gradientDepth,l)===!1){let v=Mm(r,e,t,o,n,s,i);return a!=null&&(v=xe(v,a)),Xm(v,l,u,c)}let p=S(r,"x","depthwiseConv2d","float32"),m=S(e,"filter","depthwiseConv2d","float32"),f=p,h=!1;p.rank===3&&(h=!0,f=j(p,[1,p.shape[0],p.shape[1],p.shape[2]])),F(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),F(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),F(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),F(lo(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),lr("fused depthwiseConv2d",o,i);let g=zh(f.shape,m.shape,t,s,o,i,!0),d;a!=null&&(d=S(a,"bias","fused conv2d"),[d]=Wt(d,p),ae(g.outShape,d.shape));let x;u!=null&&(x=S(u,"prelu weights","fused depthwiseConv2d"));let y=(v,k)=>{F(zm(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[R,O,L,M]=k,H=Km(v,L,l),q=NU(O.shape,H,R,t,o,s,i),K=wU(O,H,R.shape,t,o,s,i);if(M!=null){let X=jm(d,H);return[q,K,X]}return[q,K]},w={x:f,filter:m,bias:d,preluActivationWeights:x},N={strides:t,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?To((k,R,O)=>{let L=_.runKernel(nv,w,N);return O([R,k,L]),h&&(L=j(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:y}})(f,m):To((k,R,O,L)=>{let M=_.runKernel(nv,w,N);return L([R,k,M,O]),h&&(M=j(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:y}})(f,m,d)}var TU=C({fusedDepthwiseConv2d_:hut});function dut({a:r,b:e,transposeA:t=!1,transposeB:o=!1,bias:n,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Ym(_.state.gradientDepth,s)===!1){let H=oe(r,e,t,o);return n!=null&&(H=xe(H,n)),Xm(H,s,i,a)}let l=S(r,"a","fused matMul"),u=S(e,"b","fused matMul");[l,u]=Wt(l,u);let c=t?l.shape[l.rank-2]:l.shape[l.rank-1],p=o?u.shape[u.rank-1]:u.shape[u.rank-2],m=t?l.shape[l.rank-1]:l.shape[l.rank-2],f=o?u.shape[u.rank-2]:u.shape[u.rank-1],h=l.shape.slice(0,-2),g=u.shape.slice(0,-2),d=we(h),x=we(g);F(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${o} must match.`);let w=ae(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([m,f]),N=t?j(l,[d,c,m]):j(l,[d,m,c]),v=o?j(u,[x,f,p]):j(u,[x,p,f]),k;n!=null&&(k=S(n,"bias","fused matMul"),[k]=Wt(k,l),ae(w,k.shape));let R;i!=null&&(R=S(i,"prelu weights","fused matMul"));let O=(H,q)=>{let[K,X,Y,Q]=q,et=Km(j(H,Y.shape),Y,s),Z,ot;if(!t&&!o?(Z=oe(et,X,!1,!0),ot=oe(K,et,!0,!1)):!t&&o?(Z=oe(et,X,!1,!1),ot=oe(et,K,!0,!1)):t&&!o?(Z=oe(X,et,!1,!0),ot=oe(K,et,!1,!1)):(Z=oe(X,et,!0,!0),ot=oe(et,K,!0,!0)),n!=null){let it=jm(Q,et);return[Z,ot,it]}else return[Z,ot]},L={a:N,b:v,bias:k,preluActivationWeights:R},M={transposeA:t,transposeB:o,activation:s,leakyreluAlpha:a};return n==null?To((q,K,X)=>{let Y=_.runKernel(rv,L,M);return X([q,K,Y]),{value:j(Y,w),gradFunc:O}})(N,v):To((q,K,X,Y)=>{let Q=_.runKernel(rv,L,M);return Y([q,K,Q,X]),{value:j(Q,w),gradFunc:O}})(N,v,k)}var SU=C({fusedMatMul_:dut});function gut(r){return Wh(r,.54,.46)}var vU=C({hammingWindow_:gut});function xut(r){return Wh(r,.5,.5)}var Cw=C({hannWindow_:xut});function yut(r,e,t,o=!1,n=0){let s=0,i=[];for(;s+e<=r.size;)i.push(Jt(r,s,e)),s+=t;if(o)for(;s<r.size;){let a=s+e-r.size,l=$e([Jt(r,s,e-a),_l([a],n)]);i.push(l),s+=t}return i.length===0?os([],[0,e]):j($e(i),[i.length,e])}var Iw=C({frame_:yut});function but(r,e,t,o,n=Cw){o==null&&(o=Fv(e));let s=Iw(r,e,t),i=$t(s,n(e));return Hm(i,o)}var CU=C({stft_:but});function wut(r,e,t,o,n="bilinear",s=0){let i=S(r,"image","cropAndResize"),a=S(e,"boxes","cropAndResize","float32"),l=S(t,"boxInd","cropAndResize","int32"),u=a.shape[0];F(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),F(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),F(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),F(o.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),F(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),F(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let c={image:i,boxes:a,boxInd:l},p={method:n,extrapolationValue:s,cropSize:o};return _.runKernel(Qz,c,p)}var IU=C({cropAndResize_:wut});function Nut(r){let e=S(r,"image","flipLeftRight","float32");F(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return _.runKernel(xB,t,{})}var kU=C({flipLeftRight_:Nut});function Tut(r){let e=S(r,"image","grayscaleToRGB"),t=e.rank-1,o=e.shape[t];F(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),F(o===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${o}.`);let n=new Array(e.rank);return n.fill(1,0,t),n[t]=3,Ll(e,n)}var EU=C({grayscaleToRGB_:Tut});function Sut(r,e,t=0,o=.5){let n=S(r,"image","rotateWithOffset","float32");F(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let s={image:n},i={radians:e,fillValue:t,center:o};return _.runKernel(nV,s,i)}var $U=C({rotateWithOffset_:Sut});function An(r,e,t,o,n,s){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return t=Math.min(t,i),F(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),F(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),F(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),F(e.rank===1,()=>"scores must be a 1D tensor"),F(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),F(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:o,scoreThreshold:n,softNmsSigma:s}}function vut(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppression","float32"),i=S(e,"scores","nonMaxSuppression","float32"),a=An(s,i,t,o,n);t=a.maxOutputSize,o=a.iouThreshold,n=a.scoreThreshold;let l={maxOutputSize:t,iouThreshold:o,scoreThreshold:n};return _.runKernel(tM,{boxes:s,scores:i},l)}var AU=C({nonMaxSuppression_:vut});function DU(r,e,t){let o=Cut(r,e,t),n=o<0?-(o+1):o;r.splice(n,0,e)}function Cut(r,e,t){return kut(r,e,t||Iut)}function Iut(r,e){return r>e?1:r<e?-1:0}function kut(r,e,t){let o=0,n=r.length,s=0,i=!1;for(;o<n;){s=o+(n-o>>>1);let a=t(e,r[s]);a>0?o=s+1:(n=s,i=!a)}return i?o:-o-1}function RU(r,e,t,o,n){return Lv(r,e,t,o,n,0)}function FU(r,e,t,o,n,s){return Lv(r,e,t,o,n,0,!1,s,!0)}function OU(r,e,t,o,n,s){return Lv(r,e,t,o,n,s,!0)}function Lv(r,e,t,o,n,s,i=!1,a=!1,l=!1){let u=[];for(let d=0;d<e.length;d++)e[d]>n&&u.push({score:e[d],boxIndex:d,suppressBeginIndex:0});u.sort(_U);let c=s>0?-.5/s:0,p=[],m=[];for(;p.length<t&&u.length>0;){let d=u.pop(),{score:x,boxIndex:y,suppressBeginIndex:w}=d;if(x<n)break;let N=!1;for(let v=p.length-1;v>=w;--v){let k=Eut(r,y,p[v]);if(k>=o){N=!0;break}if(d.score=d.score*$ut(o,c,k),d.score<=n)break}d.suppressBeginIndex=p.length,N||(d.score===x?(p.push(y),m.push(d.score)):d.score>n&&DU(u,d,_U))}let f=p.length,h=t-f;a&&h>0&&(p.push(...new Array(h).fill(0)),m.push(...new Array(h).fill(0)));let g={selectedIndices:p};return i&&(g.selectedScores=m),l&&(g.validOutputs=f),g}function Eut(r,e,t){let o=r.subarray(e*4,e*4+4),n=r.subarray(t*4,t*4+4),s=Math.min(o[0],o[2]),i=Math.min(o[1],o[3]),a=Math.max(o[0],o[2]),l=Math.max(o[1],o[3]),u=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),m=Math.max(n[1],n[3]),f=(a-s)*(l-i),h=(p-u)*(m-c);if(f<=0||h<=0)return 0;let g=Math.max(s,u),d=Math.max(i,c),x=Math.min(a,p),y=Math.min(l,m),w=Math.max(x-g,0)*Math.max(y-d,0);return w/(f+h-w)}function $ut(r,e,t){let o=Math.exp(e*t*t);return t<=r?o:0}function _U(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}function Aut(s,i,a){return V(this,arguments,function*(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY){let l=S(r,"boxes","nonMaxSuppressionAsync"),u=S(e,"scores","nonMaxSuppressionAsync"),c=An(l,u,t,o,n);t=c.maxOutputSize,o=c.iouThreshold,n=c.scoreThreshold;let p=yield Promise.all([l.data(),u.data()]),m=p[0],f=p[1],{selectedIndices:h}=RU(m,f,t,o,n);return l!==r&&l.dispose(),u!==e&&u.dispose(),Dr(h,"int32")})}var LU=Aut;function Dut(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=S(r,"boxes","nonMaxSuppression"),a=S(e,"scores","nonMaxSuppression"),l=An(i,a,t,o,n,s);t=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:a},c={maxOutputSize:t,iouThreshold:o,scoreThreshold:n,softNmsSigma:s},p=_.runKernel(rM,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var PU=C({nonMaxSuppressionWithScore_:Dut});function _ut(i,a,l){return V(this,arguments,function*(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let u=S(r,"boxes","nonMaxSuppressionAsync"),c=S(e,"scores","nonMaxSuppressionAsync"),p=An(u,c,t,o,n,s);t=p.maxOutputSize,o=p.iouThreshold,n=p.scoreThreshold,s=p.softNmsSigma;let m=yield Promise.all([u.data(),c.data()]),f=m[0],h=m[1],{selectedIndices:g,selectedScores:d}=OU(f,h,t,o,n,s);return u!==r&&u.dispose(),c!==e&&c.dispose(),{selectedIndices:Dr(g,"int32"),selectedScores:Dr(d)}})}var zU=_ut;function Rut(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=S(r,"boxes","nonMaxSuppression"),a=S(e,"scores","nonMaxSuppression"),l=An(i,a,t,o,n,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,m={boxes:i,scores:a},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},h=_.runKernel(eM,m,f);return{selectedIndices:h[0],validOutputs:h[1]}}var BU=C({nonMaxSuppressionPadded_:Rut});function Fut(i,a,l){return V(this,arguments,function*(r,e,t,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let u=S(r,"boxes","nonMaxSuppressionAsync"),c=S(e,"scores","nonMaxSuppressionAsync"),p=An(u,c,t,o,n,null),m=p.maxOutputSize,f=p.iouThreshold,h=p.scoreThreshold,[g,d]=yield Promise.all([u.data(),c.data()]),{selectedIndices:x,validOutputs:y}=FU(g,d,m,f,h,s);return u!==r&&u.dispose(),c!==e&&c.dispose(),{selectedIndices:Dr(x,"int32"),validOutputs:Mt(y,"int32")}})}var MU=Fut;function Out(r,e,t=!1,o=!1){let n=S(r,"images","resizeBilinear");F(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),F(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),F(o===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=e,a={images:s},l={alignCorners:t,halfPixelCenters:o,size:e},u=_.runKernel(yM,a,l);return i?j(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var VU=C({resizeBilinear_:Out});function Lut(r,e,t=!1,o=!1){let n=S(r,"images","resizeNearestNeighbor");F(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),F(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),F(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),F(o===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=e,a={images:s},l={alignCorners:t,halfPixelCenters:o,size:e},u=_.runKernel(xM,a,l);return i?j(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var GU=C({resizeNearestNeighbor_:Lut});function Put(r,e="binary",t=!1,o=.5){let n=S(r,"image","threshold"),s=.2989,i=.587,a=.114,l=n.shape[0]*n.shape[1],u=$t(Dr([o]),255),c,p,m,f;if(F(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),F(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),F(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),F(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),n.shape[2]===3){[c,p,m]=oa(n,[1,1,1],-1);let d=$t(c,s),x=$t(p,i),y=$t(m,a);f=xe(xe(d,x),y)}else f=r;if(e==="otsu"){let d=jb(me(ww(f),"int32"),io([]),256);u=zut(d,l)}let h=t?Wm(f,u):cc(f,u);return me($t(h,255),"int32")}function zut(r,e){let t=Dr([-1]),o=Dr([0]),n=Dr([0]),s,i,a,l,u,c;for(let p=0;p<r.size-1;p++){s=Jt(r,0,p+1),i=Jt(r,p+1),u=Xe(ne(s),e),c=Xe(ne(i),e);let m=ne($t(s,Pl(0,s.size)));a=Xe(m,ne(s));let f=_l(i.shape,s.size),h=xe(Pl(0,i.size),f),g=$t(i,h);l=Xe(ne(g),ne(i));let d=zt(a,l),x=zt(a,l),y=$t(u,c);n=$t($t(y,d),x);let w=cc(n,o);o=rs(w,n,o),t=rs(w,Dr([p]),t)}return t}var WU=C({threshold_:Put});function But(r,e,t="nearest",o="constant",n=0,s){let i=S(r,"image","transform","float32"),a=S(e,"transforms","transform","float32");F(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),F(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:a},u={interpolation:t,fillMode:o,fillValue:n,outputShape:s};return _.runKernel(JM,l,u)}var UU=C({transform_:But});function Mut(r,e,t){F(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),F(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let o=S(r,"a","bandPart");F(o.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${o.rank}.`);let n=o.shape,[s,i]=o.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=i))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`);e<0&&(e=s),t<0&&(t=i);let a=j(Pl(0,s,1,"int32"),[-1,1]),l=Pl(0,i,1,"int32"),u=zt(a,l),c=pc(Wm(u,Mt(+e,"int32")),ew(u,Mt(-t,"int32"))),p=Es([s,i],o.dtype);return j(uo(on(j(o,[-1,s,i])).map(m=>rs(c,m,p))),n)}var HU=C({bandPart_:Mut});function Vut(r){let e;if(Array.isArray(r)){e=!1,F(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=r[0].shape[0];for(let s=1;s<r.length;++s)F(r[s].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${n})`)}else e=!0,r=oa(r,r.shape[0],0).map(n=>qm(n,[0]));F(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],o=r;for(let n=0;n<r.length;++n)t.push(_.tidy(()=>{let s=o[n];if(n>0)for(let i=0;i<n;++i){let a=$t(ne($t(t[i],s)),t[i]);s=zt(s,a)}return Xe(s,uc(s,"euclidean"))}));return e?uo(t,0):t}var qU=C({gramSchmidt_:Vut});function Gut(r,e=!1){if(F(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return KU(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),o=on(j(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),n=[],s=[];o.forEach(l=>{let[u,c]=KU(l,e);n.push(u),s.push(c)});let i=j(uo(n,0),r.shape),a=j(uo(s,0),r.shape);return[i,a]}}function KU(r,e=!1){return _.tidy(()=>{F(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],o=r.shape[1],n=Jb(t),s=Go(r),i=os([[1]],[1,1]),a=Go(i),l=t>=o?o:t;for(let u=0;u<l;++u){let c=s,p=a,m=n;[a,s,n]=_.tidy(()=>{let f=Jt(s,[u,u],[t-u,1]),h=uc(f),g=Jt(s,[u,u],[1,1]),d=rs(cc(g,0),os([[-1]]),os([[1]])),x=zt(g,$t(d,h)),y=Xe(f,x);y.shape[0]===1?a=Go(i):a=$e([i,Jt(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let w=ao(Xe(oe(d,x),h)),N=Jt(s,[u,0],[t-u,o]),v=$t(w,a),k=Vb(a);if(u===0)s=zt(N,oe(v,oe(k,N)));else{let L=zt(N,oe(v,oe(k,N)));s=$e([Jt(s,[0,0],[u,o]),L],0)}let R=Vb(v),O=Jt(n,[0,u],[t,n.shape[1]-u]);if(u===0)n=zt(O,oe(oe(O,a),R));else{let L=zt(O,oe(oe(O,a),R));n=$e([Jt(n,[0,0],[t,u]),L],1)}return[a,s,n]}),fG([c,p,m])}return!e&&t>o&&(n=Jt(n,[0,0],[t,o]),s=Jt(s,[0,0],[o,o])),[n,s]})}var jU=C({qr_:Gut});var nr=function(r){return r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",r}(nr||{});function Wut(r,e,t=nr.SUM_BY_NONZERO_WEIGHTS){let o=S(r,"losses","computeWeightedLoss"),n=null;e!=null&&(n=S(e,"weights","computeWeightedLoss"));let s=n==null?o:$t(o,n);if(t===nr.NONE)return s;if(t===nr.SUM)return ne(s);if(t===nr.MEAN){if(n==null)return mc(s);{let i=o.size/n.size,a=Xe(ne(s),ne(n));return i>1?Xe(a,Mt(i)):a}}if(t===nr.SUM_BY_NONZERO_WEIGHTS){if(n==null)return Xe(ne(s),Mt(o.size));{let i=$t(n,$s(o.shape)),a=me(ne(pw(i,Mt(0))),"float32");return Xe(ne(s),a)}}throw Error(`Unknown reduction: ${t}`)}var Br=C({computeWeightedLoss_:Wut});function Uut(r,e,t,o=nr.SUM_BY_NONZERO_WEIGHTS){let n=S(r,"labels","absoluteDifference"),s=S(e,"predictions","absoluteDifference"),i=null;t!=null&&(i=S(t,"weights","absoluteDifference")),Qe(n.shape,s.shape,"Error in absoluteDifference: ");let a=Kr(zt(n,s));return Br(a,i,o)}var XU=C({absoluteDifference_:Uut});function Hut(r,e,t,o,n=nr.SUM_BY_NONZERO_WEIGHTS){let s=S(r,"labels","cosineDistance"),i=S(e,"predictions","cosineDistance"),a=null;o!=null&&(a=S(o,"weights","cosineDistance")),Qe(s.shape,i.shape,"Error in cosineDistance: ");let l=Mt(1),u=zt(l,ne($t(s,i),t,!0));return Br(u,a,n)}var YU=C({cosineDistance_:Hut});function qut(r,e,t,o=nr.SUM_BY_NONZERO_WEIGHTS){let n=S(r,"labels","hingeLoss"),s=S(e,"predictions","hingeLoss"),i=null;t!=null&&(i=S(t,"weights","hingeLoss")),Qe(n.shape,s.shape,"Error in hingeLoss: ");let a=Mt(1);n=zt($t(Mt(2),n),a);let l=zl(zt(a,$t(n,s)));return Br(l,i,o)}var ZU=C({hingeLoss_:qut});function Kut(r,e,t,o=1,n=nr.SUM_BY_NONZERO_WEIGHTS){let s=S(r,"labels","huberLoss"),i=S(e,"predictions","huberLoss"),a=null;t!=null&&(a=S(t,"weights","huberLoss")),Qe(s.shape,i.shape,"Error in huberLoss: ");let l=Mt(o),u=Kr(zt(i,s)),c=cw(u,l),p=zt(u,c),m=xe($t(Mt(.5),Ol(c)),$t(l,p));return Br(m,a,n)}var JU=C({huberLoss_:Kut});function jut(r,e,t,o=1e-7,n=nr.SUM_BY_NONZERO_WEIGHTS){let s=S(r,"labels","logLoss"),i=S(e,"predictions","logLoss"),a=null;t!=null&&(a=S(t,"weights","logLoss")),Qe(s.shape,i.shape,"Error in logLoss: ");let l=Mt(1),u=Mt(o),c=ao($t(s,ra(xe(i,u)))),p=$t(zt(l,s),ra(xe(zt(l,i),u))),m=zt(c,p);return Br(m,a,n)}var QU=C({logLoss_:jut});function Xut(r,e,t,o=nr.SUM_BY_NONZERO_WEIGHTS){let n=S(r,"labels","meanSquaredError"),s=S(e,"predictions","meanSquaredError"),i=null;t!=null&&(i=S(t,"weights","meanSquaredError")),Qe(n.shape,s.shape,"Error in meanSquaredError: ");let a=Tw(n,s);return Br(a,i,o)}var t4=C({meanSquaredError_:Xut});function Yut(r,e){let t=S(r,"labels","sigmoidCrossEntropyWithLogits"),o=S(e,"logits","sigmoidCrossEntropyWithLogits");Qe(t.shape,o.shape,"Error in sigmoidCrossEntropyWithLogits: ");let n=zl(o),s=$t(o,t),i=ow($n(ao(Kr(o))));return xe(zt(n,s),i)}function Zut(r,e,t,o=0,n=nr.SUM_BY_NONZERO_WEIGHTS){let s=S(r,"multiClassLabels","sigmoidCrossEntropy"),i=S(e,"logits","sigmoidCrossEntropy"),a=null;if(t!=null&&(a=S(t,"weights","sigmoidCrossEntropy")),Qe(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),o>0){let u=Mt(o),c=Mt(1),p=Mt(.5);s=xe($t(s,zt(c,u)),$t(p,u))}let l=Yut(s,i);return Br(l,a,n)}var e4=C({sigmoidCrossEntropy_:Zut});function Jut(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return To((n,s,i)=>{let l=sw(s,[t],!0),u=zt(me(s,"float32"),l);i([n,u]);let c=ao($t(u,n));return{value:ne(c,[t]),gradFunc:(f,h)=>{let[g,d]=h,x=Fl(f.shape,[t]);return[$t(j(f,x),zt(me(g,"float32"),$n(d))),$t(j(f,x),zt($n(d),me(g,"float32")))]}}})(r,e)}function Qut(r,e,t,o=0,n=nr.SUM_BY_NONZERO_WEIGHTS){let s=S(r,"onehotLabels","softmaxCrossEntropy"),i=S(e,"logits","softmaxCrossEntropy"),a=null;if(t!=null&&(a=S(t,"weights","softmaxCrossEntropy")),Qe(s.shape,i.shape,"Error in softmaxCrossEntropy: "),o>0){let u=Mt(o),c=Mt(1),p=Mt(s.shape[1]);s=xe($t(s,zt(c,u)),Xe(u,p))}let l=Jut(s,i);return Br(l,a,n)}var r4=C({softmaxCrossEntropy_:Qut});function tct(r,e,t,o){let n=S(r,"indices","sparseFillEmptyRows","int32"),s=S(e,"values","sparseFillEmptyRows"),i=S(t,"denseShape","sparseFillEmptyRows","int32"),a=S(o,"defaultValue","sparseFillEmptyRows",s.dtype);if(n.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${n.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let l={indices:n,values:s,denseShape:i,defaultValue:a},u=_.runKernel(zM,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var o4=C({sparseFillEmptyRows_:tct});function ect(r,e,t){let o=S(r,"inputIndices","sparseReshape","int32"),n=S(e,"inputShape","sparseReshape","int32"),s=S(t,"newShape","sparseReshape","int32");if(o.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${o.shape}`);if(n.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${n.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:o,inputShape:n,newShape:s},a=_.runKernel(BM,i);return{outputIndices:a[0],outputShape:a[1]}}var n4=C({sparseReshape_:ect});function rct(r,e,t){let o=S(r,"data","sparseSegmentMean"),n=S(e,"indices","sparseSegmentMean","int32"),s=S(t,"segmentIds","sparseSegmentMean","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${n.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:o,indices:n,segmentIds:s};return _.runKernel(MM,i)}var s4=C({sparseSegmentMean_:rct});function oct(r,e,t){let o=S(r,"data","sparseSegmentSum"),n=S(e,"indices","sparseSegmentSum","int32"),s=S(t,"segmentIds","sparseSegmentSum","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${n.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:o,indices:n,segmentIds:s};return _.runKernel(VM,i)}var i4=C({sparseSegmentSum_:oct});function nct(r,e,t,o,n,s,i,a){let l=S(r,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=S(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:t,nGramWidths:o,leftPad:n,rightPad:s,padWidth:i,preserveShortSequences:a},p={data:l,dataSplits:u},m=_.runKernel(HM,p,c);return{nGrams:m[0],nGramsSplits:m[1]}}var a4=C({stringNGrams_:nct});function sct(r,e,t=!0){let o=S(r,"input","stringSplit","string"),n=S(e,"delimiter","stringSplit","string");if(o.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${o.shape}`);if(n.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${n.shape}`);let s={skipEmpty:t},i={input:o,delimiter:n},a=_.runKernel(qM,i,s);return{indices:a[0],values:a[1],shape:a[2]}}var l4=C({stringSplit_:sct});function ict(r,e){let t=S(r,"input","stringToHashBucketFast","string"),o={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let n={input:t};return _.runKernel(KM,n,o)}var u4=C({stringToHashBucketFast_:ict});var act={fft:Um,ifft:hc,rfft:Hm,irfft:Nw},lct={hammingWindow:vU,hannWindow:Cw,frame:Iw,stft:CU},uct={flipLeftRight:kU,grayscaleToRGB:EU,resizeNearestNeighbor:GU,resizeBilinear:VU,rotateWithOffset:$U,cropAndResize:IU,nonMaxSuppression:AU,nonMaxSuppressionAsync:LU,nonMaxSuppressionWithScore:PU,nonMaxSuppressionWithScoreAsync:zU,nonMaxSuppressionPadded:BU,nonMaxSuppressionPaddedAsync:MU,threshold:WU,transform:UU},cct={bandPart:HU,gramSchmidt:qU,qr:jU},pct={absoluteDifference:XU,computeWeightedLoss:Br,cosineDistance:YU,hingeLoss:ZU,huberLoss:JU,logLoss:QU,meanSquaredError:t4,sigmoidCrossEntropy:e4,softmaxCrossEntropy:r4},mct={sparseFillEmptyRows:o4,sparseReshape:n4,sparseSegmentMean:s4,sparseSegmentSum:i4},fct={stringNGrams:a4,stringSplit:l4,stringToHashBucketFast:u4};var dct=Ot();dct.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Dn=function(r){return r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF",r}(Dn||{}),c4;(function(r){let e;(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(c4||(c4={}));var xct={};function kw(r){return xct[r]}function T(r,e,t,o,n){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let a=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?a+1:s.inputIndexEnd;if(s.type==="tensor")return pr(e.inputNames[s.inputIndexStart],t,o,n);if(s.type==="tensors")return e.inputNames.slice(a,l).map(m=>pr(m,t,o,n));let u=pr(e.inputNames.slice(a)[0],t,o,n),c=u.dataSync();return s.type==="number"?c[0]:ct.toNestedArray(u.shape,c)}let i=e.attrParams[r];return i&&i.value}function pr(r,e,t,o){let[n,s]=co(r);if(o!=null){let a=o.getHashTableHandleByName(n);if(a!=null)return a}let i=t.currentContextIds.find(a=>!!e[Ew(n,a)]);return i!==void 0?e[Ew(n,i)][s]:void 0}function p4(r,e,t){return e[Ew(r,t.currentContextId)]}function _n(r,e){let[t,o,n]=co(r);return[Ew(t,e&&e.currentContextId),o,n]}function Ew(r,e){return e?`${r}-${e}`:r}function co(r){let e=r.split(":");if(e.length===1)return[r,0,void 0];let t=e[0],o=e.length===3?e[1]:void 0,n=Number(e[e.length-1]);return[t,n,o]}function Uh(r,e,t){let o=T("pad",r,e,t);if(o==="explicit"){o=T("explicitPaddings",r,e,t);let n=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)n[s][0]=o[s*2],n[s][1]=o[s*2+1];return n}return o}function ns(r){return r.kept?r:Go(r)}var Pv={};le(Pv,{json:()=>yct});var yct=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var zv={};le(zv,{json:()=>bct});var bct=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Bv={};le(Bv,{json:()=>wct});var wct=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var Mv={};le(Mv,{json:()=>Nct});var Nct=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var Vv={};le(Vv,{json:()=>Tct});var Tct=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var Gv={};le(Gv,{json:()=>Sct});var Sct=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Wv={};le(Wv,{json:()=>vct});var vct=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var Uv={};le(Uv,{json:()=>Cct});var Cct=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var Hv={};le(Hv,{json:()=>Ict});var Ict=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var qv={};le(qv,{json:()=>kct});var kct=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var Kv={};le(Kv,{json:()=>Ect});var Ect=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var jv={};le(jv,{json:()=>$ct});var $ct=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var Xv={};le(Xv,{json:()=>Act});var Act=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var Yv={};le(Yv,{json:()=>Dct});var Dct=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var Zv={};le(Zv,{json:()=>_ct});var _ct=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var Jv={};le(Jv,{json:()=>Rct});var Rct=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var Qv={};le(Qv,{json:()=>Fct});var Fct=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var t1={};le(t1,{json:()=>Oct});var Oct=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var e1={};le(e1,{json:()=>Lct});var Lct=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Hh=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[Pv,zv,Bv,Mv,Vv,Gv,Wv,Uv,Hv,qv,Kv,jv,Xv,Yv,Zv,Jv,Qv,t1,e1],t=[].concat(...e.map(o=>o.json));this.opMappers=t.reduce((o,n)=>(o[n.tfOpName]=n,o),{})}transformGraph(e,t={}){let o=e.node,n=[],s=[],i=[],a=o.reduce((g,d)=>(g[d.name]=this.mapNode(d),d.op.startsWith("Placeholder")?n.push(g[d.name]):d.op==="Const"?s.push(g[d.name]):(d.input==null||d.input.length===0)&&i.push(g[d.name]),g),{}),l=[],u=[],c={},p={};t!=null&&(c=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let m=Object.keys(a);m.forEach(g=>{let d=a[g];d.inputNames.forEach((x,y)=>{let[w,,N]=_n(x),v=a[w];if(v.outputs!=null){let k=v.outputs.indexOf(N);if(k!==-1){let R=`${w}:${k}`;d.inputNames[y]=R}}d.inputs.push(v),v.children.push(d)})}),Object.keys(p).length===0?m.forEach(g=>{let d=a[g];d.children.length===0&&u.push(d)}):Object.keys(p).forEach(g=>{let[d]=_n(g),x=a[d];x!=null&&(x.signatureKey=p[g],u.push(x))}),Object.keys(c).length>0?Object.keys(c).forEach(g=>{let[d]=_n(g),x=a[d];x&&(x.signatureKey=c[g],l.push(x))}):l=n;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((g,d)=>(g[d.signature.name]=this.mapFunction(d),g),{}));let h={nodes:a,inputs:l,outputs:u,weights:s,placeholders:n,signature:t,functions:f};return i.length>0&&(h.initNodes=i),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,o)=>(t[e[o].name]=o,t),{})}mapNode(e){let t=kw(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let o={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(n=>n.startsWith("^")?n.slice(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(o.inputParams=t.inputs.reduce((n,s)=>(n[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},n),{})),t.attrs!=null&&(o.attrParams=t.attrs.reduce((n,s)=>{let i=s.type,a;switch(s.type){case"string":a=$w(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=$w(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":a=Lw(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Lw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":a=Dw(e.attr,s.tfName,s.defaultValue||0),a===void 0&&s.tfDeprecatedName&&(a=Dw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":a=Ow(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Ow(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":a=Aw(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Aw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":a=zw(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=zw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":a=Fw(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Fw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":a=Pw(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Pw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":a=_w(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=_w(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":a=Rw(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Rw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":a=m4(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=m4(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return n[s.name]={value:a,type:i},n},{})),o}mapFunction(e){let t=e.nodeDef,o=[],n=[],s={};t!=null&&(s=t.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&n.push(p[m.name]),p),{}));let i=[],a=[];e.signature.inputArg.forEach(p=>{let[m]=_n(p.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:r1(p.type),type:"dtype"}},children:[]};f.signatureKey=p.name,i.push(f),s[m]=f}),Object.keys(s).forEach(p=>{let m=s[p];m.inputNames.forEach((f,h)=>{let[g,,d]=_n(f),x=s[g];if(x.outputs!=null){let y=x.outputs.indexOf(d);if(y!==-1){let w=`${g}:${y}`;m.inputNames[h]=w}}m.inputs.push(x),x.children.push(m)})});let u=e.ret;e.signature.outputArg.forEach(p=>{let[m,f]=_n(u[p.name]),h=s[m];h!=null&&(h.defaultOutput=f,a.push(h))});let c=this.mapArgsToSignature(e);return{nodes:s,inputs:i,outputs:a,weights:n,placeholders:o,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,o)=>(t[o.name]=this.mapArgToTensorInfo(o),t),{}),outputs:e.signature.outputArg.reduce((t,o)=>(t[o.name]=this.mapArgToTensorInfo(o,e.ret),t),{})}}mapArgToTensorInfo(e,t){let o=e.name;return t!=null&&(o=t[o]),{name:o,dtype:e.type}}};function Pct(r){let e=Ot().global;if(typeof e.atob<"u")return e.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function f4(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):Pct(r);return e?t:t.toLowerCase()}function $w(r,e,t,o=!1){let n=r[e];return n!=null?f4(n.s,o):t}function Aw(r,e,t){let o=r[e];return o?o.b:t}function Dw(r,e,t){let o=r[e]||{},n=o.i!=null?o.i:o.f!=null?o.f:t;return typeof n=="number"?n:parseInt(n,10)}function r1(r){switch(typeof r=="string"&&(r=Dn[r]),r){case Dn.DT_FLOAT:case Dn.DT_HALF:return"float32";case Dn.DT_INT32:case Dn.DT_INT64:case Dn.DT_INT8:case Dn.DT_UINT8:return"int32";case Dn.DT_BOOL:return"bool";case Dn.DT_DOUBLE:return"float32";case Dn.DT_STRING:return"string";default:return null}}function m4(r,e,t){let o=r[e];return o&&o.func?o.func.name:t}function _w(r,e,t){let o=r[e];return o&&o.type?r1(o.type):t}function Rw(r,e,t){let o=r[e];return o&&o.list&&o.list.type?o.list.type.map(n=>r1(n)):t}function h4(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Fw(r,e,t){let o=r[e];return o&&o.shape?h4(o.shape):t}function Ow(r,e,t){let o=r[e];return o?((o.list.f&&o.list.f.length?o.list.f:o.list.i)||[]).map(n=>typeof n=="number"?n:parseInt(n,10)):t}function Lw(r,e,t,o=!1){let n=r[e];return n&&n.list&&n.list.s?n.list.s.map(s=>f4(s,o)):t}function Pw(r,e,t){let o=r[e];return o&&o.list&&o.list.shape?o.list.shape.map(n=>h4(n)):t}function zw(r,e,t){let o=r[e];return o&&o.list&&o.list.b?o.list.b:t}var Bw=class{constructor(e,t,o){this.node=e,this.tensorMap=t,this.context=o,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(n=>this.getInput(n)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((n,s)=>(n[s]=this.getAttr(s),n),{}))}getInput(e){return pr(e,this.tensorMap,this.context)}getAttr(e,t){let o=this.node.rawAttrs[e];if(o.tensor!=null)return pr(e,this.tensorMap,this.context);if(o.i!=null||o.f!=null)return Dw(this.node.rawAttrs,e,t);if(o.s!=null)return $w(this.node.rawAttrs,e,t);if(o.b!=null)return Aw(this.node.rawAttrs,e,t);if(o.shape!=null)return Fw(this.node.rawAttrs,e,t);if(o.type!=null)return _w(this.node.rawAttrs,e,t);if(o.list!=null){if(o.list.i!=null||o.list.f!=null)return Ow(this.node.rawAttrs,e,t);if(o.list.s!=null)return Lw(this.node.rawAttrs,e,t);if(o.list.shape!=null)return Pw(this.node.rawAttrs,e,t);if(o.list.b!=null)return zw(this.node.rawAttrs,e,t);if(o.list.type!=null)return Rw(this.node.rawAttrs,e,t)}return t}};var se={};le(se,{OP_SCOPE_SUFFIX:()=>gv,abs:()=>Kr,acos:()=>xG,acosh:()=>yG,add:()=>xe,addN:()=>bG,all:()=>wG,any:()=>NG,argMax:()=>TG,argMin:()=>SG,asin:()=>vG,asinh:()=>CG,atan:()=>IG,atan2:()=>kG,atanh:()=>EG,avgPool:()=>qb,avgPool3d:()=>AG,basicLSTMCell:()=>DG,batchNorm:()=>Dl,batchNorm2d:()=>RG,batchNorm3d:()=>FG,batchNorm4d:()=>OG,batchToSpaceND:()=>Kb,bincount:()=>jb,booleanMaskAsync:()=>Ylt,broadcastArgs:()=>LG,broadcastTo:()=>Bm,buffer:()=>qr,cast:()=>me,ceil:()=>PG,clipByValue:()=>zG,clone:()=>Go,complex:()=>No,concat:()=>$e,concat1d:()=>BG,concat2d:()=>MG,concat3d:()=>VG,concat4d:()=>GG,conv1d:()=>WG,conv2d:()=>Rl,conv2dTranspose:()=>UG,conv3d:()=>HG,conv3dTranspose:()=>KG,cos:()=>jG,cosh:()=>XG,cosineWindow:()=>Wh,cumprod:()=>YG,cumsum:()=>ZG,denseBincount:()=>JG,depthToSpace:()=>QG,depthwiseConv2d:()=>Mm,diag:()=>tW,dilation2d:()=>eW,div:()=>Xe,divNoNan:()=>rW,dot:()=>oW,dropout:()=>aut,einsum:()=>nW,elu:()=>Zb,enclosingPowerOfTwo:()=>Fv,equal:()=>Yb,erf:()=>sW,euclideanNorm:()=>aW,exp:()=>$n,expandDims:()=>ea,expm1:()=>lW,eye:()=>Jb,fft:()=>Um,fill:()=>_l,floor:()=>Qb,floorDiv:()=>Wb,fused:()=>Ov,gather:()=>tw,gatherND:()=>sut,greater:()=>cc,greaterEqual:()=>ew,ifft:()=>hc,imag:()=>Al,image:()=>uct,inTopKAsync:()=>uut,irfft:()=>Nw,isFinite:()=>uW,isInf:()=>cW,isNaN:()=>pW,leakyRelu:()=>rw,less:()=>mW,lessEqual:()=>Wm,linalg:()=>cct,linspace:()=>fW,localResponseNormalization:()=>hW,log:()=>ra,log1p:()=>ow,logSigmoid:()=>dW,logSoftmax:()=>gW,logSumExp:()=>sw,logicalAnd:()=>pc,logicalNot:()=>iw,logicalOr:()=>aw,logicalXor:()=>xW,losses:()=>pct,lowerBound:()=>yW,matMul:()=>oe,max:()=>ks,maxPool:()=>uw,maxPool3d:()=>bW,maxPoolWithArgmax:()=>wW,maximum:()=>NW,mean:()=>mc,meshgrid:()=>TW,min:()=>Mh,minimum:()=>cw,mirrorPad:()=>SW,mod:()=>vW,moments:()=>CW,movingAverage:()=>Jlt,mul:()=>$t,multiRNNCell:()=>IW,multinomial:()=>kW,neg:()=>ao,norm:()=>uc,notEqual:()=>pw,oneHot:()=>mG,ones:()=>$s,onesLike:()=>EW,op:()=>C,outerProduct:()=>$W,pad:()=>As,pad1d:()=>AW,pad2d:()=>DW,pad3d:()=>_W,pad4d:()=>RW,pool:()=>FW,pow:()=>Gm,prelu:()=>fw,print:()=>Pb,prod:()=>OW,raggedGather:()=>LW,raggedTensorToTensor:()=>PW,rand:()=>zW,randomGamma:()=>BW,randomNormal:()=>xw,randomStandardNormal:()=>MW,randomUniform:()=>yw,range:()=>Pl,real:()=>ta,reciprocal:()=>VW,relu:()=>zl,relu6:()=>bw,reshape:()=>j,reverse:()=>rn,reverse1d:()=>GW,reverse2d:()=>WW,reverse3d:()=>UW,reverse4d:()=>HW,rfft:()=>Hm,round:()=>ww,rsqrt:()=>qW,scalar:()=>Mt,scatterND:()=>tut,searchSorted:()=>Gh,selu:()=>KW,separableConv2d:()=>jW,setdiff1dAsync:()=>XW,sigmoid:()=>Is,sign:()=>YW,signal:()=>lct,sin:()=>ZW,sinh:()=>JW,slice:()=>Jt,slice1d:()=>QW,slice2d:()=>tU,slice3d:()=>eU,slice4d:()=>rU,softmax:()=>oU,softplus:()=>nw,spaceToBatchND:()=>mw,sparse:()=>mct,sparseToDense:()=>out,spectral:()=>act,split:()=>oa,sqrt:()=>Vh,square:()=>Ol,squaredDifference:()=>Tw,squeeze:()=>qm,stack:()=>uo,step:()=>Sw,stridedSlice:()=>nU,string:()=>fct,sub:()=>zt,sum:()=>ne,tan:()=>sU,tanh:()=>Bh,tensor:()=>io,tensor1d:()=>Dr,tensor2d:()=>os,tensor3d:()=>dG,tensor4d:()=>iU,tensor5d:()=>aU,tensor6d:()=>lU,tile:()=>Ll,topk:()=>uU,transpose:()=>Vb,truncatedNormal:()=>cU,unique:()=>pU,unsortedSegmentSum:()=>mU,unstack:()=>on,upperBound:()=>fU,variable:()=>hU,where:()=>rs,whereAsync:()=>vw,zeros:()=>Es,zerosLike:()=>Vm});var d4=(r,e,t,o=se)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[o.add(T("a",r,e,t),T("b",r,e,t))];case"AddN":return[o.addN(T("tensors",r,e,t))];case"FloorMod":case"Mod":return[o.mod(T("a",r,e,t),T("b",r,e,t))];case"Mul":return[o.mul(T("a",r,e,t),T("b",r,e,t))];case"RealDiv":case"Div":return[o.div(T("a",r,e,t),T("b",r,e,t))];case"DivNoNan":return[o.divNoNan(T("a",r,e,t),T("b",r,e,t))];case"FloorDiv":return[o.floorDiv(T("a",r,e,t),T("b",r,e,t))];case"Sub":return[o.sub(T("a",r,e,t),T("b",r,e,t))];case"Minimum":return[o.minimum(T("a",r,e,t),T("b",r,e,t))];case"Maximum":return[o.maximum(T("a",r,e,t),T("b",r,e,t))];case"Pow":return[o.pow(T("a",r,e,t),T("b",r,e,t))];case"SquaredDifference":return[o.squaredDifference(T("a",r,e,t),T("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var g4=(r,e,t,o=se)=>{switch(r.op){case"Abs":case"ComplexAbs":return[o.abs(T("x",r,e,t))];case"Acos":return[o.acos(T("x",r,e,t))];case"Acosh":return[o.acosh(T("x",r,e,t))];case"Asin":return[o.asin(T("x",r,e,t))];case"Asinh":return[o.asinh(T("x",r,e,t))];case"Atan":return[o.atan(T("x",r,e,t))];case"Atan2":return[o.atan2(T("x",r,e,t),T("y",r,e,t))];case"Atanh":return[o.atanh(T("x",r,e,t))];case"Ceil":return[o.ceil(T("x",r,e,t))];case"Complex":return[o.complex(T("real",r,e,t),T("imag",r,e,t))];case"Cos":return[o.cos(T("x",r,e,t))];case"Cosh":return[o.cosh(T("x",r,e,t))];case"Elu":return[o.elu(T("x",r,e,t))];case"Erf":return[o.erf(T("x",r,e,t))];case"Exp":return[o.exp(T("x",r,e,t))];case"Expm1":return[o.expm1(T("x",r,e,t))];case"Floor":return[o.floor(T("x",r,e,t))];case"Log":return[o.log(T("x",r,e,t))];case"Log1p":return[o.log1p(T("x",r,e,t))];case"Imag":return[o.imag(T("x",r,e,t))];case"Neg":return[o.neg(T("x",r,e,t))];case"Reciprocal":return[o.reciprocal(T("x",r,e,t))];case"Real":return[o.real(T("x",r,e,t))];case"Relu":return[o.relu(T("x",r,e,t))];case"Round":return[o.round(T("x",r,e,t))];case"Selu":return[o.selu(T("x",r,e,t))];case"Sigmoid":return[o.sigmoid(T("x",r,e,t))];case"Sin":return[o.sin(T("x",r,e,t))];case"Sign":return[o.sign(T("x",r,e,t))];case"Sinh":return[o.sinh(T("x",r,e,t))];case"Softplus":return[o.softplus(T("x",r,e,t))];case"Sqrt":return[o.sqrt(T("x",r,e,t))];case"Square":return[o.square(T("x",r,e,t))];case"Tanh":return[o.tanh(T("x",r,e,t))];case"Tan":return[o.tan(T("x",r,e,t))];case"ClipByValue":return[o.clipByValue(T("x",r,e,t),T("clipValueMin",r,e,t),T("clipValueMax",r,e,t))];case"Relu6":return[o.relu6(T("x",r,e,t))];case"Rsqrt":return[o.rsqrt(pr(r.inputNames[0],e,t))];case"Prod":return[o.prod(T("x",r,e,t),T("axes",r,e,t))];case"LeakyRelu":return[o.leakyRelu(T("x",r,e,t),T("alpha",r,e,t))];case"Prelu":return[o.prelu(T("x",r,e,t),T("alpha",r,e,t))];case"IsNan":return[o.isNaN(pr(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Wo(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){ct.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let o=0;o<r.length;o++){let n=r[o],s=e[o];ct.assert(n<0||s<0||n===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function x4(r){return!(typeof r=="number"||r.some(e=>e<0))}function Zm(r,e,t){let o=Mw(r,t),n=!x4(o);if(n&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${o}`);if(n&&e.forEach(s=>{o=Mw(s.shape,o)}),!x4(o))throw new Error(`Non-fully-defined elementShape: ${o}`);return o}function Mw(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let o=0;o<r.length;++o){let n=r[o],s=e[o];if(n>=0&&s>=0&&n!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[o]=n>=0?n:s}return t}var Vw=class{constructor(e,t,o,n,s,i,a){this.name=e,this.dtype=t,this.maxSize=o,this.elementShape=n,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Mt(0),es(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let o=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Wo(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),o.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(o.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);o.tensor=t,es(t),o.written=!0,this.tensors[e]=o}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((o,n)=>this.write(o,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let n=0;n<this.size();n++)e.push(n)}if(e.length===0)return io([],[0].concat(this.elementShape));let o=this.readMany(e);return Wo(this.elementShape,o[0].shape,"TensorArray shape mismatch: "),uo(o,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return io([],[0].concat(this.elementShape));let t=[];for(let n=0;n<this.size();n++)t.push(n);let o=this.readMany(t);return Wo(this.elementShape,o[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${o[0].shape})`),$e(o,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let o=Math.max(...e);if(!this.dynamicSize&&o>=this.maxSize)throw new Error(`Max index must be < array size (${o}  vs. ${this.maxSize})`);this.writeMany(e,on(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let o=0,n=e.map(l=>(o+=l,o));if(o!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=o===0?0:t.size/o,i=[];Tr(()=>{t=j(t,[1,o,s]);for(let l=0;l<e.length;++l){let c=[0,l===0?0:n[l-1],0],p=[1,e[l],s];i[l]=j(Jt(t,c,p),this.elementShape)}return i});let a=[];for(let l=0;l<e.length;l++)a[l]=l;this.writeMany(a,i)}};var Jm=class r{constructor(e,t,o,n=-1){this.tensors=e,this.elementShape=t,this.elementDtype=o,e?.forEach(s=>{if(o!==s.dtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${s.dtype}`);Wo(t,s.shape,"TensorList shape mismatch: "),es(s)}),this.idTensor=Mt(0),this.maxNumElements=n,es(this.idTensor)}get id(){return this.idTensor.id}copy(){return new r([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,o=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(o!==-1&&this.tensors.length!==o)throw new Error(`Operation expected a list with ${o} elements but got a list with ${this.tensors.length} elements.`);Wo(e,this.elementShape,"TensorList shape mismatch: ");let n=Zm(this.elementShape,this.tensors,e);return Tr(()=>{let s=this.tensors.map(i=>j(i,n));return uo(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let o=Zm(this.elementShape,this.tensors,e),n=this.tensors.pop();return n.kept=!1,Wo(n.shape,e,"TensorList shape mismatch: "),j(n,o)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Wo(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");es(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new r([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let o=0;o<Math.min(this.tensors.length,e);++o)t.tensors[o]=this.tensors[o];return t}getItem(e,t,o){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Wo(this.tensors[e].shape,t,"TensorList shape mismatch: ");let n=Zm(this.elementShape,this.tensors,t);return j(this.tensors[e],n)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Wo(this.elementShape,t.shape,"TensorList shape mismatch: "),es(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,o){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Wo(this.elementShape,o,"TensorList shape mismatch: "),e=e.slice(0,this.size());let n=Zm(this.elementShape,this.tensors,o);return e.length===0?io([],[0].concat(n)):Tr(()=>{let s=e.map(i=>j(this.tensors[i],n));return uo(s,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Wo(this.elementShape,t,"TensorList shape mismatch: ");let o=Zm(this.elementShape,this.tensors,t);return this.size()===0?io([],[0].concat(o)):Tr(()=>{let n=this.tensors.map(s=>j(s,o));return $e(n,0)})}};function y4(r,e,t){let o=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let n=r.shape.slice(1);Wo(n,e,"TensorList shape mismatch: ");let s=on(r);return new Jm(s,e,o)}function b4(r,e,t,o){return new Jm([],r,e,o)}function w4(r,e,t,o){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let n=Math.max(...e);if(o!=null&&o!==-1&&n>=o)throw new Error(`Max index must be < array size (${n}  vs. ${o})`);let s=new Jm([],t,r.dtype,o),i=on(r,0);return e.forEach((a,l)=>{s.setItem(a,i[l])}),s}function N4(r,e,t){let o=0,n=e.map(c=>(o+=c,o));if(o!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),i=Mw(s,t),a=o===0?0:r.size/o,l=Tr(()=>{let c=[];r=j(r,[1,o,a]);for(let p=0;p<e.length;++p){let f=[0,p===0?0:n[p-1],0],h=[1,e[p],a];c[p]=j(Jt(r,f,h),i)}return r.dispose(),c}),u=new Jm([],t,r.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var T4=(r,e,t)=>V(void 0,null,function*(){switch(r.op){case"If":case"StatelessIf":{let o=T("thenBranch",r,e,t),n=T("elseBranch",r,e,t),s=T("cond",r,e,t),i=T("args",r,e,t);return(yield s.data())[0]?t.functionMap[o].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[n].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let o=T("body",r,e,t),n=T("cond",r,e,t),s=T("args",r,e,t),i=yield t.functionMap[n].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),a=s.map(c=>c.id),l=yield i[0].data();i.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=s;for(;l[0];){let c=u;u=yield t.functionMap[o].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);let p=u.map(f=>f.id);c.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()});let m=yield t.functionMap[n].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=yield m[0].data(),m.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{let o=T("pred",r,e,t);return[ns(o)]}case"Switch":{let o=T("pred",r,e,t),n=T("data",r,e,t);return n.kept||(n=ns(n)),(yield o.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let o=r.inputNames.find(n=>pr(n,e,t)!==void 0);if(o){let n=pr(o,e,t);return[ns(n)]}return}case"Enter":{let o=T("frameName",r,e,t),n=T("tensor",r,e,t);return t.enterFrame(o),[ns(n)]}case"Exit":{let o=T("tensor",r,e,t);return t.exitFrame(),[ns(o)]}case"NextIteration":{let o=T("tensor",r,e,t);return t.nextIteration(),[ns(o)]}case"TensorArrayV3":{let o=T("size",r,e,t),n=T("dtype",r,e,t),s=T("elementShape",r,e,t),i=T("dynamicSize",r,e,t),a=T("clearAfterRead",r,e,t),l=T("identicalElementShapes",r,e,t),u=T("name",r,e,t),c=new Vw(u,n,o,s,l,i,a);return t.addTensorArray(c),[c.idTensor,Mt(1)]}case"TensorArrayWriteV3":{let o=T("tensorArrayId",r,e,t),n=T("index",r,e,t),s=T("tensor",r,e,t),i=t.getTensorArray(o.id);return i.write(n,s),[i.idTensor]}case"TensorArrayReadV3":{let o=T("tensorArrayId",r,e,t),n=T("index",r,e,t);return[t.getTensorArray(o.id).read(n)]}case"TensorArrayGatherV3":{let o=T("tensorArrayId",r,e,t),n=T("indices",r,e,t),s=T("dtype",r,e,t);return[t.getTensorArray(o.id).gather(n,s)]}case"TensorArrayScatterV3":{let o=T("tensorArrayId",r,e,t),n=T("indices",r,e,t),s=T("tensor",r,e,t),i=t.getTensorArray(o.id);return i.scatter(n,s),[i.idTensor]}case"TensorArrayConcatV3":{let o=T("tensorArrayId",r,e,t),n=t.getTensorArray(o.id),s=T("dtype",r,e,t);return[n.concat(s)]}case"TensorArraySplitV3":{let o=T("tensorArrayId",r,e,t),n=T("tensor",r,e,t),s=T("lengths",r,e,t),i=t.getTensorArray(o.id);return i.split(s,n),[i.idTensor]}case"TensorArraySizeV3":{let o=T("tensorArrayId",r,e,t),n=t.getTensorArray(o.id);return[Mt(n.size(),"int32")]}case"TensorArrayCloseV3":{let o=T("tensorArrayId",r,e,t),n=t.getTensorArray(o.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let o=T("tensorListId",r,e,t),n=T("index",r,e,t),s=T("tensor",r,e,t),i=t.getTensorList(o.id);return i.setItem(n,s),[i.idTensor]}case"TensorListGetItem":{let o=T("tensorListId",r,e,t),n=T("index",r,e,t),s=T("elementShape",r,e,t),i=T("elementDType",r,e,t);return[t.getTensorList(o.id).getItem(n,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let o=T("indices",r,e,t),n=T("tensor",r,e,t),s=T("elementShape",r,e,t),i=T("numElements",r,e,t),a=w4(n,o,s,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let o=T("elementShape",r,e,t),n=T("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=T(s,r,e,t),a=r.op==="TensorListReserve"?-1:i,l=b4(o,n,i,a);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{let o=T("tensorListId",r,e,t),n=T("indices",r,e,t),s=T("elementShape",r,e,t),i=T("elementDType",r,e,t);return[t.getTensorList(o.id).gather(n,i,s)]}case"TensorListStack":{let o=T("tensorListId",r,e,t),n=T("elementShape",r,e,t),s=T("elementDType",r,e,t),i=T("numElements",r,e,t);return[t.getTensorList(o.id).stack(n,s,i)]}case"TensorListFromTensor":{let o=T("tensor",r,e,t),n=T("elementShape",r,e,t),s=T("elementDType",r,e,t),i=y4(o,n,s);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let o=T("tensorListId",r,e,t),n=t.getTensorList(o.id),s=T("dtype",r,e,t),i=T("elementShape",r,e,t);return[n.concat(s,i)]}case"TensorListPushBack":{let o=T("tensorListId",r,e,t),n=T("tensor",r,e,t),s=t.getTensorList(o.id);return s.pushBack(n),[s.idTensor]}case"TensorListPopBack":{let o=T("tensorListId",r,e,t),n=T("elementShape",r,e,t),s=T("elementDType",r,e,t);return[t.getTensorList(o.id).popBack(n,s)]}case"TensorListSplit":{let o=T("tensor",r,e,t),n=T("elementShape",r,e,t),s=T("lengths",r,e,t),i=N4(o,s,n);return t.addTensorList(i),[i.idTensor]}case"TensorListLength":{let o=T("tensorListId",r,e,t),n=t.getTensorList(o.id);return[Mt(n.size(),"int32")]}case"TensorListResize":{let o=T("tensorListId",r,e,t),n=T("size",r,e,t),i=t.getTensorList(o.id).resize(n);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});function S4(r,e,t){let[o,n]=T("fusedOps",r,e,t),s=o==="biasadd",i=!s,a=n==="prelu",l=o==="fusedbatchnorm",u=T("numArgs",r,e,t);if(s){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=T("strides",r,e,t),p=Uh(r,e,t),m=T("dataFormat",r,e,t).toUpperCase(),f=T("dilations",r,e,t),[h,g]=T("args",r,e,t);i&&(g=h,h=void 0);let d=T("leakyreluAlpha",r,e,t);return{stride:c,pad:p,dataFormat:m,dilations:f,biasArg:h,preluArg:g,activationFunc:n,leakyreluAlpha:d}}var v4=(r,e,t,o=se)=>{switch(r.op){case"Conv1D":{let n=T("stride",r,e,t),s=T("pad",r,e,t),i=T("dataFormat",r,e,t).toUpperCase(),a=T("dilation",r,e,t);return[o.conv1d(T("x",r,e,t),T("filter",r,e,t),n,s,i,a)]}case"Conv2D":{let n=T("strides",r,e,t),s=Uh(r,e,t),i=T("dataFormat",r,e,t).toUpperCase(),a=T("dilations",r,e,t);return[o.conv2d(T("x",r,e,t),T("filter",r,e,t),[n[1],n[2]],s,i,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:s,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=S4(r,e,t);return[o.fused.conv2d({x:T("x",r,e,t),filter:T("filter",r,e,t),strides:[n[1],n[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:s,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=S4(r,e,t);return[o.fused.depthwiseConv2d({x:T("x",r,e,t),filter:T("filter",r,e,t),strides:[n[1],n[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=T("outputShape",r,e,t),s=T("strides",r,e,t),i=Uh(r,e,t);return[o.conv2dTranspose(T("x",r,e,t),T("filter",r,e,t),n,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=T("strides",r,e,t),s=Uh(r,e,t),i=T("dilations",r,e,t),a=T("dataFormat",r,e,t).toUpperCase();return[o.depthwiseConv2d(T("input",r,e,t),T("filter",r,e,t),[n[1],n[2]],s,a,[i[1],i[2]])]}case"Conv3D":{let n=T("strides",r,e,t),s=T("pad",r,e,t),i=T("dataFormat",r,e,t).toUpperCase(),a=T("dilations",r,e,t);return[o.conv3d(T("x",r,e,t),T("filter",r,e,t),[n[1],n[2],n[3]],s,i,[a[1],a[2],a[3]])]}case"AvgPool":{let n=T("strides",r,e,t),s=T("pad",r,e,t),i=T("kernelSize",r,e,t);return[o.avgPool(T("x",r,e,t),[i[1],i[2]],[n[1],n[2]],s)]}case"MaxPool":{let n=T("strides",r,e,t),s=T("pad",r,e,t),i=T("kernelSize",r,e,t);return[o.maxPool(T("x",r,e,t),[i[1],i[2]],[n[1],n[2]],s)]}case"MaxPoolWithArgmax":{let n=T("strides",r,e,t),s=T("pad",r,e,t),i=T("kernelSize",r,e,t),a=T("includeBatchInIndex",r,e,t),{result:l,indexes:u}=o.maxPoolWithArgmax(T("x",r,e,t),[i[1],i[2]],[n[1],n[2]],s,a);return[l,u]}case"AvgPool3D":{let n=T("strides",r,e,t),s=T("pad",r,e,t),i=T("kernelSize",r,e,t);return[o.avgPool3d(T("x",r,e,t),[i[1],i[2],i[3]],[n[1],n[2],n[3]],s)]}case"MaxPool3D":{let n=T("strides",r,e,t),s=T("pad",r,e,t),i=T("kernelSize",r,e,t);return[o.maxPool3d(T("x",r,e,t),[i[1],i[2],i[3]],[n[1],n[2],n[3]],s)]}case"Dilation2D":{let n=T("strides",r,e,t),s=T("pad",r,e,t),i=T("dilations",r,e,t),a=n[1],l=n[2],u=i[1],c=i[2];return[o.dilation2d(T("x",r,e,t),T("filter",r,e,t),[a,l],s,[u,c],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var C4=(r,e,t,o=se)=>{switch(r.op){case"Fill":{let n=T("shape",r,e,t),s=T("dtype",r,e,t),i=T("value",r,e,t);return[o.fill(n,i,s)]}case"LinSpace":{let n=T("start",r,e,t),s=T("stop",r,e,t),i=T("num",r,e,t);return[o.linspace(n,s,i)]}case"Multinomial":{let n=T("logits",r,e,t),s=T("numSamples",r,e,t),i=T("seed",r,e,t);return[o.multinomial(n,s,i)]}case"OneHot":{let n=T("indices",r,e,t),s=T("depth",r,e,t),i=T("onValue",r,e,t),a=T("offValue",r,e,t),l=T("dtype",r,e,t);return[o.oneHot(n,s,i,a,l)]}case"Ones":return[o.ones(T("shape",r,e,t),T("dtype",r,e,t))];case"OnesLike":return[o.onesLike(T("x",r,e,t))];case"RandomStandardNormal":return[o.randomStandardNormal(T("shape",r,e,t),T("dtype",r,e,t),T("seed",r,e,t))];case"RandomUniform":return[o.randomUniform(T("shape",r,e,t),T("minval",r,e,t),T("maxval",r,e,t),T("dtype",r,e,t))];case"Range":{let n=T("start",r,e,t),s=T("stop",r,e,t),i=T("step",r,e,t);return[o.range(n,s,i,T("dtype",r,e,t))]}case"TruncatedNormal":{let n=T("shape",r,e,t),s=T("mean",r,e,t),i=T("stdDev",r,e,t),a=T("seed",r,e,t);return[o.truncatedNormal(n,s,i,T("dtype",r,e,t),a)]}case"Zeros":return[o.zeros(T("shape",r,e,t),T("dtype",r,e,t))];case"ZerosLike":return[o.zerosLike(T("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function o1(r,e,t){let o=T("boxes",r,e,t),n=T("scores",r,e,t),s=T("maxOutputSize",r,e,t),i=T("iouThreshold",r,e,t),a=T("scoreThreshold",r,e,t),l=T("softNmsSigma",r,e,t);return{boxes:o,scores:n,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:l}}var I4=(s,i,a,l,...u)=>V(void 0,[s,i,a,l,...u],function*(r,e,t,o,n=se){switch(r.op){case"NonMaxSuppressionV5":{let{boxes:c,scores:p,maxOutputSize:m,iouThreshold:f,scoreThreshold:h,softNmsSigma:g}=o1(r,e,t),d=yield n.image.nonMaxSuppressionWithScoreAsync(c,p,m,f,h,g);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:c,scores:p,maxOutputSize:m,iouThreshold:f,scoreThreshold:h}=o1(r,e,t),g=T("padToMaxOutputSize",r,e,t),d=yield n.image.nonMaxSuppressionPaddedAsync(c,p,m,f,h,g);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:c,scores:p,maxOutputSize:m,iouThreshold:f,scoreThreshold:h}=o1(r,e,t);return[yield n.image.nonMaxSuppressionAsync(c,p,m,f,h)]}case"Where":{let c=n.cast(T("condition",r,e,t),"bool"),p=[yield n.whereAsync(c)];return c.dispose(),p}case"ListDiff":return n.setdiff1dAsync(T("x",r,e,t),T("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}});var k4=(r,e,t,o=se)=>{switch(r.op){case"LowerBound":{let n=T("sortedSequence",r,e,t),s=T("values",r,e,t);return[o.lowerBound(n,s)]}case"TopKV2":{let n=T("x",r,e,t),s=T("k",r,e,t),i=T("sorted",r,e,t),a=o.topk(n,s,i);return[a.values,a.indices]}case"UpperBound":{let n=T("sortedSequence",r,e,t),s=T("values",r,e,t);return[o.upperBound(n,s)]}case"Unique":{let n=T("x",r,e,t),s=o.unique(n);return[s.values,s.indices]}case"UniqueV2":{let n=T("x",r,e,t),s=T("axis",r,e,t),i=o.unique(n,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var E4=(r,e,t,o=se)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=T("default",r,e,t);return[pr(r.name,e,t)||n];case"Placeholder":return[pr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=T("x",r,e,t);return[ns(c)]}case"IdentityN":return T("x",r,e,t).map(c=>ns(c));case"Snapshot":let s=T("x",r,e,t);return[ns(s)];case"Shape":return[o.tensor1d(T("x",r,e,t).shape,"int32")];case"ShapeN":return T("x",r,e,t).map(c=>o.tensor1d(c.shape));case"Size":return[o.scalar(T("x",r,e,t).size,"int32")];case"Rank":return[o.scalar(T("x",r,e,t).rank,"int32")];case"NoOp":return[o.scalar(1)];case"Print":let i=T("x",r,e,t),a=T("data",r,e,t),l=T("message",r,e,t),u=T("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Gw=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Mt(0),this.tensorMap=new Map,es(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Mt(this.size(),"int32")}import(e,t){return V(this,null,function*(){this.checkKeyAndValueTensor(e,t);let o=yield e.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),Tr(()=>{let n=on(t),s=o.length,i=n.length;ct.assert(s===i,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${i} elements.`);for(let a=0;a<s;a++){let l=o[a],u=n[a];es(u),this.tensorMap.set(l,u)}return this.handle})})}find(e,t){return V(this,null,function*(){this.checkKeyAndValueTensor(e,t);let o=yield e.data();return Tr(()=>{let n=[];for(let s=0;s<o.length;s++){let i=o[s],a=this.findWithDefault(i,t);n.push(a)}return uo(n)})})}findWithDefault(e,t){let o=this.tensorMap.get(e);return o??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var $4=(r,e,t,o)=>V(void 0,null,function*(){switch(r.op){case"HashTable":case"HashTableV2":{let n=T("keyDType",r,e,t),s=T("valueDType",r,e,t),i=new Gw(n,s);return o.addHashTable(r.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let n=T("tableHandle",r,e,t,o),s=T("keys",r,e,t),i=T("values",r,e,t);return[yield o.getHashTableById(n.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let n=T("tableHandle",r,e,t,o),s=T("keys",r,e,t),i=T("defaultValue",r,e,t);return[yield o.getHashTableById(n.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let n=T("tableHandle",r,e,t,o);return[o.getHashTableById(n.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});var A4=(r,e,t,o=se)=>{switch(r.op){case"ResizeBilinear":{let n=T("images",r,e,t),s=T("size",r,e,t),i=T("alignCorners",r,e,t),a=T("halfPixelCenters",r,e,t);return[o.image.resizeBilinear(n,[s[0],s[1]],i,a)]}case"ResizeNearestNeighbor":{let n=T("images",r,e,t),s=T("size",r,e,t),i=T("alignCorners",r,e,t),a=T("halfPixelCenters",r,e,t);return[o.image.resizeNearestNeighbor(n,[s[0],s[1]],i,a)]}case"CropAndResize":{let n=T("image",r,e,t),s=T("boxes",r,e,t),i=T("boxInd",r,e,t),a=T("cropSize",r,e,t),l=T("method",r,e,t),u=T("extrapolationValue",r,e,t);return[o.image.cropAndResize(n,s,i,a,l,u)]}case"ImageProjectiveTransformV3":{let n=T("images",r,e,t),s=T("transforms",r,e,t),i=T("outputShape",r,e,t),a=T("fillValue",r,e,t),l=T("interpolation",r,e,t),u=T("fillMode",r,e,t);return[o.image.transform(n,s,l.toLowerCase(),u.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var D4=(r,e,t,o=se)=>{switch(r.op){case"Equal":return[o.equal(T("a",r,e,t),T("b",r,e,t))];case"NotEqual":return[o.notEqual(T("a",r,e,t),T("b",r,e,t))];case"Greater":return[o.greater(T("a",r,e,t),T("b",r,e,t))];case"GreaterEqual":return[o.greaterEqual(T("a",r,e,t),T("b",r,e,t))];case"Less":return[o.less(T("a",r,e,t),T("b",r,e,t))];case"LessEqual":return[o.lessEqual(T("a",r,e,t),T("b",r,e,t))];case"LogicalAnd":return[o.logicalAnd(T("a",r,e,t),T("b",r,e,t))];case"LogicalNot":return[o.logicalNot(T("a",r,e,t))];case"LogicalOr":return[o.logicalOr(T("a",r,e,t),T("b",r,e,t))];case"Select":case"SelectV2":return[o.where(T("condition",r,e,t),T("a",r,e,t),T("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var _4=(r,e,t,o=se)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[o.matMul(T("a",r,e,t),T("b",r,e,t),T("transposeA",r,e,t),T("transposeB",r,e,t))];case"Einsum":return[o.einsum(T("equation",r,e,t),...T("tensors",r,e,t))];case"Transpose":return[o.transpose(T("x",r,e,t),T("perm",r,e,t))];case"_FusedMatMul":let[n,s]=T("fusedOps",r,e,t),i=n==="biasadd",a=s==="prelu",l=T("numArgs",r,e,t),u=T("leakyreluAlpha",r,e,t);if(i){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=T("args",r,e,t);return[o.fused.matMul({a:T("a",r,e,t),b:T("b",r,e,t),transposeA:T("transposeA",r,e,t),transposeB:T("transposeB",r,e,t),bias:c,activation:s,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var R4=(r,e,t,o=se)=>{switch(r.op){case"EuclideanNorm":return[o.euclideanNorm(T("x",r,e,t),T("axis",r,e,t),T("keepDims",r,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[o.batchNorm(T("x",r,e,t),T("mean",r,e,t),T("variance",r,e,t),T("offset",r,e,t),T("scale",r,e,t),T("epsilon",r,e,t))];case"FusedBatchNormV3":return[o.batchNorm(T("x",r,e,t),T("mean",r,e,t),T("variance",r,e,t),T("offset",r,e,t),T("scale",r,e,t),T("epsilon",r,e,t))];case"LRN":return[o.localResponseNormalization(T("x",r,e,t),T("radius",r,e,t),T("bias",r,e,t),T("alpha",r,e,t),T("beta",r,e,t))];case"Softmax":return[o.softmax(T("x",r,e,t))];case"LogSoftmax":return[o.logSoftmax(T("x",r,e,t))];case"SparseToDense":return[o.sparseToDense(T("sparseIndices",r,e,t),T("outputShape",r,e,t),T("sparseValues",r,e,t),T("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var F4=(r,e,t,o=se)=>{switch(r.op){case"Max":{let a=T("axis",r,e,t),l=T("keepDims",r,e,t);return[o.max(T("x",r,e,t),a,l)]}case"Mean":{let a=T("axis",r,e,t),l=T("keepDims",r,e,t);return[o.mean(T("x",r,e,t),a,l)]}case"Min":{let a=T("axis",r,e,t),l=T("keepDims",r,e,t);return[o.min(T("x",r,e,t),a,l)]}case"Sum":{let a=T("axis",r,e,t),l=T("keepDims",r,e,t);return[o.sum(T("x",r,e,t),a,l)]}case"All":{let a=T("axis",r,e,t),l=T("keepDims",r,e,t);return[o.all(T("x",r,e,t),a,l)]}case"Any":{let a=T("axis",r,e,t),l=T("keepDims",r,e,t);return[o.any(T("x",r,e,t),a,l)]}case"ArgMax":{let a=T("axis",r,e,t);return[o.argMax(T("x",r,e,t),a)]}case"ArgMin":{let a=T("axis",r,e,t);return[o.argMin(T("x",r,e,t),a)]}case"Prod":{let a=T("axis",r,e,t),l=T("keepDims",r,e,t);return[o.prod(T("x",r,e,t),a,l)]}case"Cumprod":{let a=T("axis",r,e,t),l=T("exclusive",r,e,t),u=T("reverse",r,e,t);return[o.cumprod(T("x",r,e,t),a,l,u)]}case"Cumsum":{let a=T("axis",r,e,t),l=T("exclusive",r,e,t),u=T("reverse",r,e,t);return[o.cumsum(T("x",r,e,t),a,l,u)]}case"Bincount":let n=T("x",r,e,t),s=T("weights",r,e,t),i=T("size",r,e,t);return[o.bincount(n,s,i)];case"DenseBincount":{let a=T("x",r,e,t),l=T("weights",r,e,t),u=T("size",r,e,t),c=T("binaryOutput",r,e,t);return[o.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var O4=(r,e,t,o=se)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=T("n",r,e,t),s=T("axis",r,e,t),i=T("tensors",r,e,t);return i=i.slice(0,n),[o.concat(i,s)]}case"Gather":{let n=T("x",r,e,t),s=T("indices",r,e,t);return[o.gather(n,o.cast(s,"int32"),0)]}case"GatherV2":{let n=T("axis",r,e,t),s=T("batchDims",r,e,t),i=T("x",r,e,t),a=T("indices",r,e,t);return[o.gather(i,o.cast(a,"int32"),n,s)]}case"Reverse":{let n=T("dims",r,e,t),s=[];for(let a=0;a<n.length;a++)n[a]&&s.push(a);let i=T("x",r,e,t);return[o.reverse(i,s)]}case"ReverseV2":{let n=T("axis",r,e,t),s=T("x",r,e,t);return[o.reverse(s,n)]}case"Slice":{let n=T("begin",r,e,t),s=T("size",r,e,t);return[o.slice(T("x",r,e,t),n,s)]}case"StridedSlice":{let n=T("begin",r,e,t),s=T("end",r,e,t),i=T("strides",r,e,t),a=T("beginMask",r,e,t),l=T("endMask",r,e,t),u=T("ellipsisMask",r,e,t),c=T("newAxisMask",r,e,t),p=T("shrinkAxisMask",r,e,t),m=T("x",r,e,t);return[o.stridedSlice(m,n,s,i,a,l,u,c,p)]}case"Pack":return Tr(()=>{let n=T("axis",r,e,t),s=T("tensors",r,e,t),i=s[0].shape,a=o.squeeze(s[0]).shape,l=s.map(u=>{let c=ct.arraysEqual(u.shape,i);if(!c&&!ct.arraysEqual(o.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:o.reshape(u,i)});return[o.stack(l,n)]});case"Unpack":{let n=T("axis",r,e,t),s=T("tensor",r,e,t);return o.unstack(s,n)}case"Tile":{let n=T("reps",r,e,t);return[o.tile(T("x",r,e,t),n)]}case"Split":case"SplitV":{let n=T("axis",r,e,t),s=T("numOrSizeSplits",r,e,t),i=T("x",r,e,t);return o.split(i,s,n)}case"ScatterNd":{let n=T("indices",r,e,t),s=T("values",r,e,t),i=T("shape",r,e,t);return[o.scatterND(n,s,i)]}case"GatherNd":{let n=T("x",r,e,t),s=T("indices",r,e,t);return[o.gatherND(n,s)]}case"SparseToDense":{let n=T("sparseIndices",r,e,t),s=T("outputShape",r,e,t),i=T("sparseValues",r,e,t),a=T("defaultValue",r,e,t);return[o.sparseToDense(n,i,s,i.dtype===a.dtype?a:o.cast(a,i.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var L4=(r,e,t,o=se)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:s,emptyRowIndicator:i,reverseIndexMap:a}=o.sparse.sparseFillEmptyRows(T("indices",r,e,t),T("values",r,e,t),T("denseShape",r,e,t),T("defaultValue",r,e,t));return[n,s,i,a]}case"SparseReshape":{let{outputIndices:n,outputShape:s}=o.sparse.sparseReshape(T("inputIndices",r,e,t),T("inputShape",r,e,t),T("newShape",r,e,t));return[n,s]}case"SparseSegmentMean":return[o.sparse.sparseSegmentMean(T("data",r,e,t),T("indices",r,e,t),T("segmentIds",r,e,t))];case"SparseSegmentSum":return[o.sparse.sparseSegmentSum(T("data",r,e,t),T("indices",r,e,t),T("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var P4=(r,e,t,o=se)=>{switch(r.op){case"FFT":return[o.fft(T("x",r,e,t))];case"IFFT":return[o.ifft(T("x",r,e,t))];case"RFFT":return[o.rfft(T("x",r,e,t))];case"IRFFT":return[o.irfft(T("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var z4=(r,e,t,o=se)=>{switch(r.op){case"StringNGrams":{let{nGrams:n,nGramsSplits:s}=o.string.stringNGrams(T("data",r,e,t),T("dataSplits",r,e,t),T("separator",r,e,t),T("nGramWidths",r,e,t),T("leftPad",r,e,t),T("rightPad",r,e,t),T("padWidth",r,e,t),T("preserveShortSequences",r,e,t));return[n,s]}case"StringSplit":{let{indices:n,values:s,shape:i}=o.string.stringSplit(T("input",r,e,t),T("delimiter",r,e,t),T("skipEmpty",r,e,t));return[n,s,i]}case"StringToHashBucketFast":return[o.string.stringToHashBucketFast(T("input",r,e,t),T("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var B4=(r,e,t,o=se)=>{switch(r.op){case"Cast":return[o.cast(T("x",r,e,t),T("dtype",r,e,t))];case"ExpandDims":{let n=T("axis",r,e,t);return[o.expandDims(T("x",r,e,t),n)]}case"Squeeze":{let n=T("axis",r,e,t);return[o.squeeze(T("x",r,e,t),n)]}case"Reshape":return[o.reshape(T("x",r,e,t),T("shape",r,e,t))];case"MirrorPad":return[o.mirrorPad(T("x",r,e,t),T("padding",r,e,t),T("mode",r,e,t))];case"PadV2":case"Pad":return[o.pad(T("x",r,e,t),T("padding",r,e,t),T("constantValue",r,e,t))];case"SpaceToBatchND":{let n=T("blockShape",r,e,t),s=T("paddings",r,e,t);return[o.spaceToBatchND(T("x",r,e,t),n,s)]}case"BatchToSpaceND":{let n=T("blockShape",r,e,t),s=T("crops",r,e,t);return[o.batchToSpaceND(T("x",r,e,t),n,s)]}case"DepthToSpace":{let n=T("blockSize",r,e,t),s=T("dataFormat",r,e,t).toUpperCase();return[o.depthToSpace(T("x",r,e,t),n,s)]}case"BroadcastTo":return[o.broadcastTo(T("x",r,e,t),T("shape",r,e,t))];case"BroadcastArgs":return[o.broadcastArgs(T("s0",r,e,t),T("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function n1(r,e,t,o,n=Tr){let s=((i,a,l)=>{switch(i.category){case"arithmetic":return n(()=>d4(i,a,l));case"basic_math":return n(()=>g4(i,a,l));case"control":return T4(i,a,l);case"convolution":return n(()=>v4(i,a,l));case"creation":return n(()=>C4(i,a,l));case"dynamic":return I4(i,a,l);case"evaluation":return n(()=>k4(i,a,l));case"image":return n(()=>A4(i,a,l));case"graph":return n(()=>E4(i,a,l));case"logical":return n(()=>D4(i,a,l));case"matrices":return n(()=>_4(i,a,l));case"normalization":return n(()=>R4(i,a,l));case"reduction":return n(()=>F4(i,a,l));case"slice_join":return n(()=>O4(i,a,l));case"sparse":return n(()=>L4(i,a,l));case"spectral":return n(()=>P4(i,a,l));case"string":return n(()=>z4(i,a,l));case"transformation":return n(()=>B4(i,a,l));case"hash_table":return $4(i,a,l,o);case"custom":let u=kw(i.op);if(u&&u.customExecutor)return u.customExecutor(new Bw(i,a,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return ct.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var qh=class{constructor(e={},t={},o={},n={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=o,this.functionMap=n,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let o=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(o))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function s1(r,e,t,o){let n=new Set,s=[],i=null,a=null,l=new Set,u=Object.keys(r).map(m=>co(m)[0]),c=[];o!=null&&(c=o.map(m=>co(m.name)[0]));let p=[...e];for(;p.length>0;){let m=p.pop();if((i1(m)||ipt(m)||apt(m))&&i==null&&(i=m,a=i.children.map(f=>f.name).filter(f=>n.has(f))),n.add(m.name),t[m.name]==null&&u.indexOf(m.name)===-1&&c.indexOf(m.name)===-1){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),p.push(f))})}}return{inputs:r,outputs:e,usedNodes:n,missingInputs:s,dynamicNode:i,syncInputs:a}}function M4(r,e,t){let{usedNodes:o,inputs:n}=t,s=[],i=Object.keys(n).map(c=>co(c)[0]).map(c=>r.nodes[c]),a=r.initNodes;i.forEach(c=>{o.has(c.name)&&s.push(c)}),r.weights.forEach(c=>{o.has(c.name)&&s.push(c)}),a?.forEach(c=>{o.has(c.name)&&s.push(c)});let l=new Set,u=[];for(;s.length>0;){let c=s.pop();l.add(c.name),e[c.name]||u.push(c),c.children.forEach(p=>{!l.has(p.name)&&o.has(p.name)&&p.inputs.every(m=>l.has(m.name))&&s.push(p)})}return u}var opt=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],npt=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],spt=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function i1(r){return opt.indexOf(r.op)>=0}function ipt(r){return npt.indexOf(r.op)>=0}function apt(r){return spt.indexOf(r.op)>=0}var Kh=class r{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(o=>{this._functionExecutorMap[o]=new r(e.functions[o],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(o=>e[o].map(n=>n.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let o=e.map(s=>s.name).sort(),n=t.map(s=>s.name).sort();return o.join(this.SEPERATOR)+"--"+n.join(this.SEPERATOR)}compile(e,t){let o=s1(e,t,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:s,syncInputs:i}=o;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(n.length>0){let a=t.map(u=>u.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${l}]. Missing the following inputs: [${n}]`)}return M4(this.graph,this.weightMap,o)}execute(e,t){e=this.mapInputs(e);let o=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let n=o.map(p=>this.graph.nodes[co(p)[0]]),s=t.map(p=>co(p)[0]),i=s.map(p=>this.graph.nodes[p]);this.resetIntermediateTensors(),i.length===0&&(i=this._outputs);let a=this.getCompilationKey(n,i),l=this.compiledMap.get(a);l==null&&(l=this.compile(e,i),this.compiledMap.set(a,l));let u={},c={};return Tr(()=>{let p=new qh(this.weightMap,u,c,this.functionExecutorMap),m=Object.assign({},this.weightMap);Object.keys(e).forEach(g=>{let[d,x]=co(g),y=[];y[x]=e[g],m[d]=y});let f=this.getFrozenTensorIds(m),h={};for(let g=0;g<l.length;g++){let d=l[g];if(!m[d.name]){let x=n1(d,m,p,this._resourceManager);if(ct.isPromise(x))throw new Error(`The execution of the op '${d.op}' returned a promise. Please use model.executeAsync() instead.`);m[d.name]=x,this.checkTensorForDisposal(d.name,d,m,p,f,s,h)}}return this.parent==null&&p.dispose(f),t.map(g=>pr(g,m,p))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(o=>e[o]).map(o=>o.map(n=>n.id)));return new Set(t)}checkTensorForDisposal(e,t,o,n,s,i,a){t.category==="control"||i.indexOf(e)!==-1||(o[e].forEach(l=>{l!=null&&(a[l.id]=(a[l.id]||0)+t.children.length)}),t.inputs.forEach(l=>{if(l.category!=="control"){let u=p4(l.name,o,n);u?.forEach(c=>{if(c&&!c.kept&&!s.has(c.id)){let p=a[c.id];if(p===1){if(!this.keepTensorForDebug)c.dispose();else{let[m,f]=_n(t.name,n);this.intermediateTensors[m]?this.intermediateTensors[m][f]=c:(this.intermediateTensors[m]=[],this.intermediateTensors[m][f]=c)}delete a[c.id]}else p!=null&&a[c.id]--}})}}))}executeAsync(e,t){return V(this,null,function*(){return this._executeAsync(e,t)})}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(o=>{o&&!o.kept&&!o.isDisposed&&!this.keepIds.has(o.id)&&o.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}_executeAsync(i,a){return V(this,arguments,function*(e,t,o=!1,n={},s={}){o||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Ot().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){console.warn(m.message)}this.resetIntermediateTensors();let l=new qh(this.weightMap,n,s,this.functionExecutorMap);this.tensorsMap=yield this.executeWithControlFlow(e,l,t,o);let u=t.map(m=>pr(m,this.tensorsMap,l)),c=u.map(m=>m.id),p=Object.keys(e).map(m=>e[m].id);return this.keepIds=new Set([...c,...p,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&l.dispose(this.keepIds),u})}executeFunctionAsync(e,t,o){return V(this,null,function*(){let n=e.reduce((s,i,a)=>(s[this.inputs[a].name]=i,s),{});return this._executeAsync(n,this.outputNodes,!0,t,o)})}executeWithControlFlow(e,t,o,n){return V(this,null,function*(){let s=Object.keys(e),i=s.map(w=>this.graph.nodes[co(w)[0]]),a=o.map(w=>co(w)[0]),l=a.map(w=>this.graph.nodes[w]);l.length===0&&(l=this._outputs);let{usedNodes:u,missingInputs:c,dynamicNode:p,syncInputs:m}=s1(e,l,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{let[N,v]=co(w),k=[];k[v]=e[w],h[N]=k});let g={},d=this.getFrozenTensorIds(h),x={};for(;f.length>0;){let w=this.processStack(i,f,t,h,x,d,a,g,u);yield Promise.all(w)}p==null&&!n&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=l.filter(w=>!i1(w)&&!pr(w.name,h,t)).map(w=>w.name);if(y.length>0){let w="";throw p!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${w}`)}return h})}processStack(e,t,o,n,s,i,a,l,u){let c=[];for(;t.length>0;){let p=t.pop();o.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&T("isConstant",p.node,n,o)&&([m]=_n(p.node.name,o)),n[p.node.name]==null){let f=n1(p.node,n,o,this._resourceManager);m||([m]=_n(p.node.name,o));let h=o.currentContext;ct.isPromise(f)?c.push(f.then(g=>(n[m]=g,o.currentContext=h,this.checkTensorForDisposal(m,p.node,n,o,i,a,l),this.processChildNodes(p.node,t,o,n,s,u),g))):(n[m]=f,this.checkTensorForDisposal(m,p.node,n,o,i,a,l),this.processChildNodes(p.node,t,o,n,s,u))}else this.processChildNodes(p.node,t,o,n,s,u)}return c}processChildNodes(e,t,o,n,s,i){e.children.forEach(a=>{let[l]=_n(a.name,o);s[l]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!pr(u,n,o))&&(s[l]=!0,t.push({contexts:o.currentContext,node:a})):a.inputNames.every(u=>!!pr(u,n,o))&&(s[l]=!0,t.push({contexts:o.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let o=e[t],[n]=co(t),s=this.graph.nodes[n];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,a=i.length===o.shape.length&&o.shape.every((l,u)=>i[u]===-1||i[u]===l);ct.assert(a,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${o.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&ct.assert(o.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${o.dtype}`)})}mapInputs(e){let t={};for(let o in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[o]!=null){let n=this._signature.inputs[o];t[n.name]=e[o]}else t[o]=e[o];return t}checkInputs(e){let t=Object.keys(e).filter(o=>{let[n]=co(o);return this.graph.nodes[n]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[o]=co(t);if(!this.graph.nodes[o])throw new Error(`The output '${t}' is not found in the graph`)})}};var Ww=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var lpt="?tfjs-format=file",upt="model.json",Uw=class{constructor(e,t={},o=Ph){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=o,t==null&&(this.loadOptions={}),this.resourceManager=new Ww}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return ct.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,o=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(o=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}this.signature=o,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let n=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Kh(Hh.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=Hh.Instance.transformGraph(e.modelInitializer);this.initializer=new Kh(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}save(e,t){return V(this,null,function*(){if(typeof e=="string"){let o=this.io.getSaveHandlers(e);if(o.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(o.length>1)throw new Error(`Found more than one (${o.length}) save handlers for URL '${e}'`);e=o[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)})}predict(e,t){let o=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let n=o instanceof ze?[o]:o,s={};return n.forEach((i,a)=>s[this.structuredOutputKeys[a]]=i),s}return o}normalizeInputs(e){if(!(e instanceof ze)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,o,n)=>(t[o]=e[n],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let o=this.executor.execute(e,t);return o.length>1?o:o[0]}executeAsync(e,t){return V(this,null,function*(){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let o=yield this.executor.executeAsync(e,t);return o.length>1?o:o[0]})}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,o)=>(t[o]=[e[o]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};function jh(o){return V(this,arguments,function*(r,e={},t=Ph){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof r=="string"&&(r=cpt(r));let n=new Uw(r,e,t);return yield n.load(),n})}function cpt(r){return r.endsWith("/")||(r=r+"/"),`${r}${upt}${lpt}`}function dc(r,e,t,o){return new(t||(t=Promise))(function(n,s){function i(u){try{l(o.next(u))}catch(c){s(c)}}function a(u){try{l(o.throw(u))}catch(c){s(c)}}function l(u){var c;u.done?n(u.value):(c=u.value,c instanceof t?c:new t(function(p){p(c)})).then(i,a)}l((o=o.apply(r,e||[])).next())})}function gc(r,e){var t,o,n,s,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function a(l){return function(u){return function(c){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,o&&(n=2&c[0]?o.return:c[0]?o.throw||((n=o.return)&&n.call(o),0):o.next)&&!(n=n.call(o,c[1])).done)return n;switch(o=0,n&&(c=[2&c[0],n.value]),c[0]){case 0:case 1:n=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,o=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(!(n=(n=i.trys).length>0&&n[n.length-1])&&(c[0]===6||c[0]===2)){i=0;continue}if(c[0]===3&&(!n||c[1]>n[0]&&c[1]<n[3])){i.label=c[1];break}if(c[0]===6&&i.label<n[1]){i.label=n[1],n=c;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(c);break}n[2]&&i.ops.pop(),i.trys.pop();continue}c=e.call(r,i)}catch(p){c=[6,p],o=0}finally{t=n=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}var U4=function(r){for(var e=[],t=0,o=r;t<o.length;t++){var n=o[t];e.push(n)}return e},V4=function(){return function(){this.parent=null,this.children={},this.end=!1,this.word=[[],0,0]}}(),ppt=function(){function r(){this.root=new V4}return r.prototype.insert=function(e,t,o){for(var n=this.root,s=U4(e),i=0;i<s.length;i++)n.children[s[i]]||(n.children[s[i]]=new V4,n.children[s[i]].parent=n,n.children[s[i]].word[0]=n.word[0].concat(s[i])),n=n.children[s[i]],i===s.length-1&&(n.end=!0,n.word[1]=t,n.word[2]=o)},r.prototype.commonPrefixSearch=function(e){for(var t=[],o=this.root.children[e[0]],n=0;n<e.length&&o;n++)o.end&&t.push(o.word),o=o.children[e[n+1]];return t.length||t.push([[e[0]],0,0]),t},r}(),G4="\u2581";function mpt(r){var e=r.normalize("NFKC");return e.length>0?G4+e.replace(/ /g,G4):e}var fpt=6,H4=function(){function r(e,t){t===void 0&&(t=fpt),this.vocabulary=e,this.reservedSymbolsCount=t,this.trie=new ppt;for(var o=this.reservedSymbolsCount;o<this.vocabulary.length;o++)this.trie.insert(this.vocabulary[o][0],this.vocabulary[o][1],o)}return r.prototype.encode=function(e){var t=[],o=[],n=[];e=mpt(e);for(var s=U4(e),i=0;i<=s.length;i++)t.push({}),o.push(0),n.push(0);for(i=0;i<s.length;i++)for(var a=this.trie.commonPrefixSearch(s.slice(i)),l=0;l<a.length;l++){var u=a[l],c={key:u[0],score:u[1],index:u[2]};t[i+(p=u[0].length)][i]==null&&(t[i+p][i]=[]),t[i+p][i].push(c)}for(var p=0;p<=s.length;p++)for(var m in t[p]){var f=t[p][m];for(l=0;l<f.length;l++){var h=f[l],g=h.score+n[p-h.key.length];(n[p]===0||g>=n[p])&&(n[p]=g,o[p]=f[l].index)}}for(var d=[],x=o.length-1;x>0;)d.push(o[x]),x-=this.vocabulary[o[x]][0].length;var y=[],w=!1;for(i=0;i<d.length;i++){var N=d[i];w&&N===0||y.push(N),w=N===0}return y.reverse()},r}();function q4(r){return dc(this,void 0,void 0,function(){return gc(this,function(e){switch(e.label){case 0:return[4,ct.fetch(r)];case 1:return[2,e.sent().json()]}})})}var W4="https://tfhub.dev/google/tfjs-model/universal-sentence-encoder-qa-ondevice/1",hpt=[0,1,2],dpt=3,Xh=192,gpt="input_inp_text",xpt="input_res_context",ypt="input_res_text",bpt="Final/EncodeResult/mul",wpt="Final/EncodeQuery/mul",Npt=3,Tpt=2,Spt=1;var yyr=function(){function r(){}return r.prototype.loadModel=function(){return dc(this,void 0,void 0,function(){return gc(this,function(e){return[2,jh(W4,{fromTFHub:!0})]})})},r.prototype.load=function(){return dc(this,void 0,void 0,function(){var e,t,o;return gc(this,function(n){switch(n.label){case 0:return[4,Promise.all([this.loadModel(),q4(W4+"/vocab.json?tfjs-format=file")])];case 1:return e=n.sent(),t=e[0],o=e[1],this.model=t,this.tokenizer=new H4(o,Npt),[2]}})})},r.prototype.embed=function(e){var t=this,o=Tr(function(){var n=t.tokenizeStrings(e.queries,Xh),s=t.tokenizeStrings(e.responses,Xh);if(e.contexts!=null&&e.contexts.length!==e.responses.length)throw new Error("The length of response strings and context strings need to match.");var i=e.contexts||[];e.contexts==null&&(i.length=e.responses.length,i.fill(""));var a=t.tokenizeStrings(i,Xh),l={};return l[gpt]=n,l[ypt]=s,l[xpt]=a,t.model.execute(l,[wpt,bpt])});return{queryEmbedding:o[0],responseEmbedding:o[1]}},r.prototype.tokenizeStrings=function(e,t){var o=this,n=e.map(function(s){return o.shiftTokens(o.tokenizer.encode(s),Xh)});return os(n,[e.length,Xh],"int32")},r.prototype.shiftTokens=function(e,t){e.unshift(Spt);for(var o=0;o<t;o++)o>=e.length?e[o]=Tpt:hpt.includes(e[o])||(e[o]+=dpt);return e.slice(0,t)},r}(),vpt="https://storage.googleapis.com/tfjs-models/savedmodel/universal_sentence_encoder";function K4(r){return dc(this,void 0,void 0,function(){var e;return gc(this,function(t){switch(t.label){case 0:return[4,(e=new Cpt).load(r)];case 1:return t.sent(),[2,e]}})})}var Cpt=function(){function r(){}return r.prototype.loadModel=function(e){return dc(this,void 0,void 0,function(){return gc(this,function(t){return[2,e?jh(e):jh("https://tfhub.dev/tensorflow/tfjs-model/universal-sentence-encoder-lite/1/default/1",{fromTFHub:!0})]})})},r.prototype.load=function(e){return e===void 0&&(e={}),dc(this,void 0,void 0,function(){var t,o,n;return gc(this,function(s){switch(s.label){case 0:return[4,Promise.all([this.loadModel(e.modelUrl),q4(e.vocabUrl||vpt+"/vocab.json")])];case 1:return t=s.sent(),o=t[0],n=t[1],this.model=o,this.tokenizer=new H4(n),[2]}})})},r.prototype.embed=function(e){return dc(this,void 0,void 0,function(){var t,o,n,s,i,a,l,u,c=this;return gc(this,function(p){switch(p.label){case 0:for(typeof e=="string"&&(e=[e]),t=e.map(function(m){return c.tokenizer.encode(m)}),o=t.map(function(m,f){return m.map(function(h,g){return[f,g]})}),n=[],s=0;s<o.length;s++)n=n.concat(o[s]);return i=os(n,[n.length,2],"int32"),a=Dr(ct.flatten(t),"int32"),l={indices:i,values:a},[4,this.model.executeAsync(l)];case 1:return u=p.sent(),i.dispose(),a.dispose(),[2,u]}})})},r}();var Hw=class r{constructor(e){this.http=e;this.initialize()}model=null;trainingData=[];questionEmbeddings=null;modelLoadedSubject=new a1(!1);modelLoaded$=this.modelLoadedSubject.asObservable();initialize(){return V(this,null,function*(){try{yield Promise.all([this.loadModel(),this.loadTrainingData()]),this.model&&this.trainingData.length>0&&(yield this.embedQuestions())}catch(e){console.error("Error initializing TensorFlow service:",e)}})}loadModel(){return V(this,null,function*(){try{this.model=yield K4(),this.modelLoadedSubject.next(!0),console.log("TensorFlow.js Model Loaded")}catch(e){console.error("Error loading model:",e),this.modelLoadedSubject.next(!1)}})}loadTrainingData(){return V(this,null,function*(){try{this.trainingData=yield l1(this.http.get("assets/training-data.json")),this.trainingData.length===0&&(console.warn("No training data found. Using default data."),this.trainingData=this.getDefaultTrainingData())}catch(e){console.error("Error loading training data:",e),this.trainingData=this.getDefaultTrainingData()}})}getDefaultTrainingData(){return[{question:"What is your name?",answer:"I'm your AI assistant."},{question:"How can I help you?",answer:"I can answer questions and assist with tasks."},{question:"What services do you offer?",answer:"We offer web development, mobile app development, and AI solutions."},{question:"What is TensorFlow?",answer:"TensorFlow is an open-source machine learning framework."},{question:"How do I use TensorFlow?",answer:"You can start by installing TensorFlow.js and loading a model."}]}embedQuestions(){return V(this,null,function*(){if(!(!this.model||this.trainingData.length===0))try{let e=this.trainingData.map(o=>o.question),t=yield this.model.embed(e);this.questionEmbeddings=t}catch(e){console.error("Error creating embeddings:",e)}})}getResponse(e){return V(this,null,function*(){if(!this.model||!this.questionEmbeddings||this.trainingData.length===0)return"The system is still initializing. Please try again in a moment.";try{let o=yield this.model.embed([e]),n=this.calculateCosineSimilarity(o);o.dispose();let s=n.indexOf(Math.max(...n));return this.trainingData[s]?.answer||"Sorry, I couldn't find a relevant answer to your question."}catch(t){return console.error("Error getting response:",t),"An error occurred while processing your request."}})}calculateCosineSimilarity(e){return this.questionEmbeddings?U(()=>{try{let t=e.shape[1],o=e.reshape([1,t]),n=this.questionEmbeddings.reshape([-1,t]),s=zn(o,2,1,!0),i=zn(n,2,1,!0),a=lt(o,s),l=lt(n,i),u=Xt(a,l,!1,!0);return Array.from(u.dataSync())}catch(t){return console.error("Error calculating cosine similarity:",t),[]}}):[]}ngOnDestroy(){this.questionEmbeddings&&this.questionEmbeddings.dispose()}static \u0275fac=function(t){return new(t||r)(Jh(u1))};static \u0275prov=Zh({token:r,factory:r.\u0275fac,providedIn:"root"})};var j4=class r{constructor(e){this.tfService=e;this.messages().length===0&&this.sendBotInitialMessage()}chatVisible=xc(!1);minimized=xc(!1);maximized=xc(!1);messages=xc(this.getStoredMessages());typing=xc(!1);chatVisible$=yc(()=>this.chatVisible());minimized$=yc(()=>this.minimized());maximized$=yc(()=>this.maximized());messages$=yc(()=>this.messages());typing$=yc(()=>this.typing());API_URL=Qh.openRouter.URL;API_KEY=Qh.openRouter.KEY;API_MODEL=Qh.openRouter.MODEL;toggleChat(){this.chatVisible.set(!this.chatVisible()),this.chatVisible()||(this.minimized.set(!1),this.maximized.set(!1))}toggleMinimize(){this.minimized.set(!this.minimized())}toggleMaximized(){this.maximized.set(!this.maximized())}sendMessage(e,t="text"){return V(this,null,function*(){if(!e.trim())return;let o={text:e,isBot:!1,timestamp:new Date,messageType:t,sender:"user"};this.messages.update(n=>[...n,o]),this.saveMessages(),yield this.simulateBotResponse(e)})}simulateBotResponse(e){return V(this,null,function*(){this.typing.set(!0),this.messages.update(o=>[...o,{text:"",isBot:!0,timestamp:new Date,isTyping:!0,sender:"bot"}]);let t=null;for(;!t;)t=yield this.getBotResponse(e),t||(yield new Promise(o=>setTimeout(o,1500)));this.messages.update(o=>o.slice(0,-1)),this.messages.update(o=>[...o,{text:t,isBot:!0,timestamp:new Date,sender:"bot",messageType:"text"}]),this.typing.set(!1),this.saveMessages()})}getBotResponse(e){return V(this,null,function*(){let t=e.toLowerCase().trim(),o={help:`<p>Here are some commands you can use:
                    <br>- help: Show this help message
                    <br>- info: Get app info
                    <br>- clear: Clear chat history
                    <br>- joke: Receive a joke
                    <br>- quote: Receive a random quote
                    <br>- info: Information
                </p>`,info:"This is a Portfolio Chat App v1.0 belongs to Sanju.",about:"This is a Portfolio Chat App v1.0 belongs to Sanju.",clear:()=>(this.clearChat(),"Chat history cleared!"),joke:()=>this.getRandomJoke(),quote:()=>this.getRandomQuote()};return o[t]?typeof o[t]=="function"?o[t]():o[t]:t.startsWith("quote ")?this.getQuoteByCategory(t.split(" ")[1]):yield this.tensorFlow(e)})}getRandomJoke(){let e=["Why don't skeletons fight each other? They don't have the guts.","I told my wife she was drawing her eyebrows too high. She looked surprised.","Why don't oysters donate to charity? Because they are shellfish.","I used to play piano by ear, but now I use my hands.","Why don\u2019t programmers like nature? It has too many bugs."];return e[Math.floor(Math.random()*e.length)]}getRandomQuote(){let e=["The only limit to our realization of tomorrow is our doubts of today. - Franklin D. Roosevelt","The purpose of our lives is to be happy. - Dalai Lama","In the end, it's not the years in your life that count. It's the life in your years. - Abraham Lincoln"];return e[Math.floor(Math.random()*e.length)]}getQuoteByCategory(e){return{inspiration:"The only way to do great work is to love what you do. - Steve Jobs",life:"Life is what happens when you're busy making other plans. - John Lennon",success:"Success is not final, failure is not fatal: It is the courage to continue that counts. - Winston Churchill",love:"Love is not what you say, love is what you do. - Unknown"}[e.toLowerCase()]||"Category not found! Please try: inspiration, life, success, or love."}sendBotInitialMessage(){this.messages.update(e=>[...e,{text:"\u{1F44B} Hi! How can I help you today?",isBot:!0,timestamp:new Date,sender:"bot",messageType:"text"}]),this.saveMessages()}saveMessages(){let e=tf.getStorage();e.chatMessages=JSON.stringify(this.messages()),tf.setStorage(e)}getStoredMessages(){let e=tf.getStorage().chatMessages;return e?JSON.parse(e):[]}clearChat(){this.messages.set([]),tf.removeKey("chatMessages")}deleteMessage(e){this.messages.update(t=>{let o=[...t];return o[e].isDeleted=!0,o}),this.saveMessages()}fetchAIResponse(e,t){return V(this,null,function*(){try{let o=yield fetch(e,{method:"POST",headers:{Authorization:`Bearer ${this.API_KEY}`,"Content-Type":"application/json"},body:JSON.stringify(t)});if(!o.ok){let n=yield o.text();throw new Error(`API request failed: ${o.statusText}, Response Body: ${n}`)}return yield o.json()}catch(o){throw console.error("Error fetching AI response:",o),new Error("An error occurred while fetching AI response.")}})}openRouterMessage(e){return V(this,null,function*(){let t={model:this.API_MODEL,messages:[{role:"user",content:e}]};try{let o=yield this.fetchAIResponse(this.API_URL,t);return console.log("Data from openRouterMessage:",o),o.choices?.[0]?.message?.content||"No response from AI."}catch{return"An error occurred while fetching AI response."}})}huggingChatMessage(e){return V(this,null,function*(){let t={inputs:e,parameters:{max_new_tokens:30}};try{let o=yield this.fetchAIResponse(`${this.API_URL}/${this.API_MODEL}`,t);return console.log("HuggingChat Response:",o),o[0]?.generated_text||"No response from AI."}catch(o){return`An error occurred: ${o}`}})}tensorFlow(e){return V(this,null,function*(){try{return yield this.tfService.getResponse(e)}catch(t){return console.error("Error getting response:",t),"Sorry, I encountered an error. Please try again later."}})}static \u0275fac=function(t){return new(t||r)(Jh(Hw))};static \u0275prov=Zh({token:r,factory:r.\u0275fac,providedIn:"root"})};export{j4 as a};
